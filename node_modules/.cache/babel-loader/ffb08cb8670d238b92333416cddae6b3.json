{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _lodash = require(\"lodash\");\n\nvar _utils = require(\"../components/Roles/Permissions/utils\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2[\"default\"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar formatPermissionsFromApi = function formatPermissionsFromApi(data) {\n  var getFieldsPermissions = function getFieldsPermissions(permissionsAcc, permission) {\n    var fields = (0, _lodash.get)(permission, ['fields'], []);\n\n    if (fields) {\n      return fields.reduce(function (acc, field) {\n        return _objectSpread(_objectSpread({}, acc), {}, (0, _defineProperty2[\"default\"])({}, field, _objectSpread(_objectSpread({}, (0, _lodash.get)(permissionsAcc, [permission.subject, 'attributes', field], {})), {}, {\n          actions: [].concat((0, _toConsumableArray2[\"default\"])((0, _lodash.get)(permissionsAcc, [permission.subject, 'attributes', field, 'actions'], [])), [permission.action])\n        })));\n      }, {});\n    }\n\n    return {};\n  };\n\n  var formattedPermissions = data.reduce(function (acc, current) {\n    if (current.action.startsWith(_utils.CONTENT_MANAGER_PREFIX)) {\n      var subjectAcc = (0, _lodash.get)(acc, ['contentTypesPermissions', current.subject], {});\n      var isContentTypeAction = !(0, _utils.isAttributeAction)(current.action);\n      return _objectSpread(_objectSpread({}, acc), {}, {\n        contentTypesPermissions: _objectSpread(_objectSpread({}, acc.contentTypesPermissions), {}, (0, _defineProperty2[\"default\"])({}, current.subject, _objectSpread(_objectSpread({}, subjectAcc), {}, {\n          attributes: _objectSpread(_objectSpread({}, subjectAcc.attributes), getFieldsPermissions(acc.contentTypesPermissions, current)),\n          contentTypeActions: _objectSpread(_objectSpread({}, subjectAcc.contentTypeActions), isContentTypeAction && (0, _defineProperty2[\"default\"])({}, current.action, true)),\n          conditions: _objectSpread(_objectSpread({}, subjectAcc.conditions), {}, (0, _defineProperty2[\"default\"])({}, current.action, [].concat((0, _toConsumableArray2[\"default\"])((0, _lodash.get)(subjectAcc, ['conditions', current.action], [])), (0, _toConsumableArray2[\"default\"])(current.conditions))))\n        })))\n      });\n    }\n\n    return _objectSpread(_objectSpread({}, acc), {}, {\n      // As we do not need any manupulation for others permissions, we just add them in the\n      // pluginsAndSettingsPermissions section.\n      // This can be changed in the futur so we don't need to create a complexe data structure for those permissions\n      pluginsAndSettingsPermissions: [].concat((0, _toConsumableArray2[\"default\"])(acc.pluginsAndSettingsPermissions || []), [(0, _lodash.pick)(current, ['fields', 'conditions', 'subject', 'action'])])\n    });\n  }, {});\n  return formattedPermissions;\n};\n\nvar _default = formatPermissionsFromApi;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["D:/webstorm_projects/redcat_backend/.cache/admin/src/utils/formatPermissionsFromApi.js"],"names":["formatPermissionsFromApi","data","getFieldsPermissions","permissionsAcc","permission","fields","reduce","acc","field","subject","actions","action","formattedPermissions","current","startsWith","CONTENT_MANAGER_PREFIX","subjectAcc","isContentTypeAction","contentTypesPermissions","attributes","contentTypeActions","conditions","pluginsAndSettingsPermissions"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;;;;;AAEA,IAAMA,wBAAwB,GAAG,SAA3BA,wBAA2B,CAAAC,IAAI,EAAI;AACvC,MAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACC,cAAD,EAAiBC,UAAjB,EAAgC;AAC3D,QAAMC,MAAM,GAAG,iBAAID,UAAJ,EAAgB,CAAC,QAAD,CAAhB,EAA4B,EAA5B,CAAf;;AAEA,QAAIC,MAAJ,EAAY;AACV,aAAOA,MAAM,CAACC,MAAP,CAAc,UAACC,GAAD,EAAMC,KAAN,EAAgB;AACnC,+CACKD,GADL,4CAEGC,KAFH,kCAGO,iBAAIL,cAAJ,EAAoB,CAACC,UAAU,CAACK,OAAZ,EAAqB,YAArB,EAAmCD,KAAnC,CAApB,EAA+D,EAA/D,CAHP;AAIIE,UAAAA,OAAO,gDACF,iBAAIP,cAAJ,EAAoB,CAACC,UAAU,CAACK,OAAZ,EAAqB,YAArB,EAAmCD,KAAnC,EAA0C,SAA1C,CAApB,EAA0E,EAA1E,CADE,IAELJ,UAAU,CAACO,MAFN;AAJX;AAUD,OAXM,EAWJ,EAXI,CAAP;AAYD;;AAED,WAAO,EAAP;AACD,GAnBD;;AAqBA,MAAMC,oBAAoB,GAAGX,IAAI,CAACK,MAAL,CAAY,UAACC,GAAD,EAAMM,OAAN,EAAkB;AACzD,QAAIA,OAAO,CAACF,MAAR,CAAeG,UAAf,CAA0BC,6BAA1B,CAAJ,EAAuD;AACrD,UAAMC,UAAU,GAAG,iBAAIT,GAAJ,EAAS,CAAC,yBAAD,EAA4BM,OAAO,CAACJ,OAApC,CAAT,EAAuD,EAAvD,CAAnB;AAEA,UAAMQ,mBAAmB,GAAG,CAAC,8BAAkBJ,OAAO,CAACF,MAA1B,CAA7B;AAEA,6CACKJ,GADL;AAEEW,QAAAA,uBAAuB,kCAClBX,GAAG,CAACW,uBADc,4CAEpBL,OAAO,CAACJ,OAFY,kCAGhBO,UAHgB;AAInBG,UAAAA,UAAU,kCACLH,UAAU,CAACG,UADN,GAELjB,oBAAoB,CAACK,GAAG,CAACW,uBAAL,EAA8BL,OAA9B,CAFf,CAJS;AAQnBO,UAAAA,kBAAkB,kCACbJ,UAAU,CAACI,kBADE,GAEZH,mBAAmB,yCAAOJ,OAAO,CAACF,MAAf,EAAwB,IAAxB,CAFP,CARC;AAYnBU,UAAAA,UAAU,kCACLL,UAAU,CAACK,UADN,4CAEPR,OAAO,CAACF,MAFD,gDAGH,iBAAIK,UAAJ,EAAgB,CAAC,YAAD,EAAeH,OAAO,CAACF,MAAvB,CAAhB,EAAgD,EAAhD,CAHG,uCAIHE,OAAO,CAACQ,UAJL;AAZS;AAFzB;AAwBD;;AAED,2CACKd,GADL;AAEE;AACA;AACA;AACAe,MAAAA,6BAA6B,gDACvBf,GAAG,CAACe,6BAAJ,IAAqC,EADd,IAE3B,kBAAKT,OAAL,EAAc,CAAC,QAAD,EAAW,YAAX,EAAyB,SAAzB,EAAoC,QAApC,CAAd,CAF2B;AAL/B;AAUD,GA1C4B,EA0C1B,EA1C0B,CAA7B;AA4CA,SAAOD,oBAAP;AACD,CAnED;;eAqEeZ,wB","sourcesContent":["import { get, pick } from 'lodash';\nimport { CONTENT_MANAGER_PREFIX, isAttributeAction } from '../components/Roles/Permissions/utils';\n\nconst formatPermissionsFromApi = data => {\n  const getFieldsPermissions = (permissionsAcc, permission) => {\n    const fields = get(permission, ['fields'], []);\n\n    if (fields) {\n      return fields.reduce((acc, field) => {\n        return {\n          ...acc,\n          [field]: {\n            ...get(permissionsAcc, [permission.subject, 'attributes', field], {}),\n            actions: [\n              ...get(permissionsAcc, [permission.subject, 'attributes', field, 'actions'], []),\n              permission.action,\n            ],\n          },\n        };\n      }, {});\n    }\n\n    return {};\n  };\n\n  const formattedPermissions = data.reduce((acc, current) => {\n    if (current.action.startsWith(CONTENT_MANAGER_PREFIX)) {\n      const subjectAcc = get(acc, ['contentTypesPermissions', current.subject], {});\n\n      const isContentTypeAction = !isAttributeAction(current.action);\n\n      return {\n        ...acc,\n        contentTypesPermissions: {\n          ...acc.contentTypesPermissions,\n          [current.subject]: {\n            ...subjectAcc,\n            attributes: {\n              ...subjectAcc.attributes,\n              ...getFieldsPermissions(acc.contentTypesPermissions, current),\n            },\n            contentTypeActions: {\n              ...subjectAcc.contentTypeActions,\n              ...(isContentTypeAction && { [current.action]: true }),\n            },\n            conditions: {\n              ...subjectAcc.conditions,\n              [current.action]: [\n                ...get(subjectAcc, ['conditions', current.action], []),\n                ...current.conditions,\n              ],\n            },\n          },\n        },\n      };\n    }\n\n    return {\n      ...acc,\n      // As we do not need any manupulation for others permissions, we just add them in the\n      // pluginsAndSettingsPermissions section.\n      // This can be changed in the futur so we don't need to create a complexe data structure for those permissions\n      pluginsAndSettingsPermissions: [\n        ...(acc.pluginsAndSettingsPermissions || []),\n        pick(current, ['fields', 'conditions', 'subject', 'action']),\n      ],\n    };\n  }, {});\n\n  return formattedPermissions;\n};\n\nexport default formatPermissionsFromApi;\n"]},"metadata":{},"sourceType":"script"}