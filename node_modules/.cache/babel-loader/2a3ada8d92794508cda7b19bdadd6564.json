{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = require(\"react\");\n\nvar _reactRouterDom = require(\"react-router-dom\");\n\nvar _lodash = require(\"lodash\");\n\nvar _strapiHelperPlugin = require(\"strapi-helper-plugin\");\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _utils = require(\"../../utils\");\n\nvar _pluginId = _interopRequireDefault(require(\"../../pluginId\"));\n\nvar _sharedReducers = require(\"../../sharedReducers\");\n\nvar _utils2 = require(\"./utils\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2[\"default\"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// This container is used to handle the CRUD\nvar CollectionTypeFormWrapper = function CollectionTypeFormWrapper(_ref) {\n  var allLayoutData = _ref.allLayoutData,\n      children = _ref.children,\n      from = _ref.from,\n      slug = _ref.slug,\n      id = _ref.id,\n      origin = _ref.origin;\n\n  var _useGlobalContext = (0, _strapiHelperPlugin.useGlobalContext)(),\n      emitEvent = _useGlobalContext.emitEvent;\n\n  var _useHistory = (0, _reactRouterDom.useHistory)(),\n      push = _useHistory.push,\n      replace = _useHistory.replace;\n\n  var _useReducer = (0, _react.useReducer)(_sharedReducers.crudReducer, _sharedReducers.crudInitialState),\n      _useReducer2 = (0, _slicedToArray2[\"default\"])(_useReducer, 2),\n      _useReducer2$ = _useReducer2[0],\n      componentsDataStructure = _useReducer2$.componentsDataStructure,\n      contentTypeDataStructure = _useReducer2$.contentTypeDataStructure,\n      data = _useReducer2$.data,\n      isLoading = _useReducer2$.isLoading,\n      status = _useReducer2$.status,\n      dispatch = _useReducer2[1];\n\n  var emitEventRef = (0, _react.useRef)(emitEvent);\n  var isCreatingEntry = id === 'create';\n  var requestURL = (0, _react.useMemo)(function () {\n    if (isCreatingEntry && !origin) {\n      return null;\n    }\n\n    return (0, _utils2.getRequestUrl)(\"\".concat(slug, \"/\").concat(origin || id));\n  }, [slug, id, isCreatingEntry, origin]);\n  var cleanClonedData = (0, _react.useCallback)(function (data) {\n    if (!origin) {\n      return data;\n    }\n\n    var cleaned = (0, _utils.removeFieldsFromClonedData)(data, allLayoutData.contentType, allLayoutData.components);\n    return cleaned;\n  }, [allLayoutData, origin]);\n  var cleanReceivedData = (0, _react.useCallback)(function (data) {\n    var cleaned = (0, _utils.removePasswordFieldsFromData)(data, allLayoutData.contentType, allLayoutData.components);\n    return (0, _utils.formatComponentData)(cleaned, allLayoutData.contentType, allLayoutData.components);\n  }, [allLayoutData]); // SET THE DEFAULT LAYOUT the effect is applied when the slug changes\n\n  (0, _react.useEffect)(function () {\n    var componentsDataStructure = Object.keys(allLayoutData.components).reduce(function (acc, current) {\n      var defaultComponentForm = (0, _utils.createDefaultForm)((0, _lodash.get)(allLayoutData, ['components', current, 'attributes'], {}), allLayoutData.components);\n      acc[current] = (0, _utils.formatComponentData)(defaultComponentForm, allLayoutData.components[current], allLayoutData.components);\n      return acc;\n    }, {});\n    var contentTypeDataStructure = (0, _utils.createDefaultForm)(allLayoutData.contentType.attributes, allLayoutData.components);\n    dispatch({\n      type: 'SET_DATA_STRUCTURES',\n      componentsDataStructure: componentsDataStructure,\n      contentTypeDataStructure: (0, _utils.formatComponentData)(contentTypeDataStructure, allLayoutData.contentType, allLayoutData.components)\n    });\n  }, [allLayoutData]);\n  (0, _react.useEffect)(function () {\n    var abortController = new AbortController();\n    var signal = abortController.signal;\n\n    var getData = /*#__PURE__*/function () {\n      var _ref2 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(signal) {\n        var _data, resStatus;\n\n        return _regenerator[\"default\"].wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                dispatch({\n                  type: 'GET_DATA'\n                });\n                _context.prev = 1;\n                _context.next = 4;\n                return (0, _strapiHelperPlugin.request)(requestURL, {\n                  method: 'GET',\n                  signal: signal\n                });\n\n              case 4:\n                _data = _context.sent;\n                dispatch({\n                  type: 'GET_DATA_SUCCEEDED',\n                  data: cleanReceivedData(cleanClonedData(_data))\n                });\n                _context.next = 18;\n                break;\n\n              case 8:\n                _context.prev = 8;\n                _context.t0 = _context[\"catch\"](1);\n\n                if (!(_context.t0.name === 'AbortError')) {\n                  _context.next = 12;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 12:\n                console.error(_context.t0);\n                resStatus = (0, _lodash.get)(_context.t0, 'response.status', null);\n\n                if (!(resStatus === 404)) {\n                  _context.next = 17;\n                  break;\n                }\n\n                push(from);\n                return _context.abrupt(\"return\");\n\n              case 17:\n                // Not allowed to read a document\n                if (resStatus === 403) {\n                  strapi.notification.info((0, _utils.getTrad)('permissions.not-allowed.update'));\n                  push(from);\n                }\n\n              case 18:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[1, 8]]);\n      }));\n\n      return function getData(_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    if (requestURL) {\n      getData(signal);\n    } else {\n      dispatch({\n        type: 'INIT_FORM'\n      });\n    }\n\n    return function () {\n      abortController.abort();\n    };\n  }, [requestURL, push, from, cleanReceivedData, cleanClonedData]);\n  var displayErrors = (0, _react.useCallback)(function (err) {\n    var errorPayload = err.response.payload;\n    console.error(errorPayload);\n    var errorMessage = (0, _lodash.get)(errorPayload, ['message'], 'Bad Request'); // TODO handle errors correctly when back-end ready\n\n    if (Array.isArray(errorMessage)) {\n      errorMessage = (0, _lodash.get)(errorMessage, ['0', 'messages', '0', 'id']);\n    }\n\n    if (typeof errorMessage === 'string') {\n      strapi.notification.error(errorMessage);\n    }\n  }, []);\n  var onDelete = (0, _react.useCallback)( /*#__PURE__*/function () {\n    var _ref3 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2(trackerProperty) {\n      var response;\n      return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              emitEventRef.current('willDeleteEntry', trackerProperty);\n              _context2.next = 4;\n              return (0, _strapiHelperPlugin.request)((0, _utils2.getRequestUrl)(\"\".concat(slug, \"/\").concat(id)), {\n                method: 'DELETE'\n              });\n\n            case 4:\n              response = _context2.sent;\n              strapi.notification.success((0, _utils.getTrad)('success.record.delete'));\n              emitEventRef.current('didDeleteEntry', trackerProperty);\n              return _context2.abrupt(\"return\", Promise.resolve(response));\n\n            case 10:\n              _context2.prev = 10;\n              _context2.t0 = _context2[\"catch\"](0);\n              emitEventRef.current('didNotDeleteEntry', _objectSpread({\n                error: _context2.t0\n              }, trackerProperty));\n              return _context2.abrupt(\"return\", Promise.reject(_context2.t0));\n\n            case 14:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 10]]);\n    }));\n\n    return function (_x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }(), [id, slug]);\n  var onDeleteSucceeded = (0, _react.useCallback)(function () {\n    replace(from);\n  }, [from, replace]);\n  var onPost = (0, _react.useCallback)( /*#__PURE__*/function () {\n    var _ref4 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee3(body, trackerProperty) {\n      var endPoint, response;\n      return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              endPoint = (0, _utils2.getRequestUrl)(slug);\n              _context3.prev = 1;\n              // Show a loading button in the EditView/Header.js && lock the app => no navigation\n              dispatch({\n                type: 'SET_STATUS',\n                status: 'submit-pending'\n              });\n              _context3.next = 5;\n              return (0, _strapiHelperPlugin.request)(endPoint, {\n                method: 'POST',\n                body: body\n              });\n\n            case 5:\n              response = _context3.sent;\n              emitEventRef.current('didCreateEntry', trackerProperty);\n              strapi.notification.toggle({\n                type: 'success',\n                message: {\n                  id: (0, _utils.getTrad)('success.record.save')\n                }\n              });\n              dispatch({\n                type: 'SUBMIT_SUCCEEDED',\n                data: cleanReceivedData(response)\n              }); // Enable navigation and remove loaders\n\n              dispatch({\n                type: 'SET_STATUS',\n                status: 'resolved'\n              });\n              replace(\"/plugins/\".concat(_pluginId[\"default\"], \"/collectionType/\").concat(slug, \"/\").concat(response.id));\n              _context3.next = 18;\n              break;\n\n            case 13:\n              _context3.prev = 13;\n              _context3.t0 = _context3[\"catch\"](1);\n              emitEventRef.current('didNotCreateEntry', {\n                error: _context3.t0,\n                trackerProperty: trackerProperty\n              });\n              displayErrors(_context3.t0);\n              dispatch({\n                type: 'SET_STATUS',\n                status: 'resolved'\n              });\n\n            case 18:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[1, 13]]);\n    }));\n\n    return function (_x3, _x4) {\n      return _ref4.apply(this, arguments);\n    };\n  }(), [cleanReceivedData, displayErrors, replace, slug]);\n  var onPublish = (0, _react.useCallback)( /*#__PURE__*/(0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee4() {\n    var endPoint, _data2;\n\n    return _regenerator[\"default\"].wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.prev = 0;\n            emitEventRef.current('willPublishEntry');\n            endPoint = (0, _utils2.getRequestUrl)(\"\".concat(slug, \"/\").concat(id, \"/actions/publish\"));\n            dispatch({\n              type: 'SET_STATUS',\n              status: 'publish-pending'\n            });\n            _context4.next = 6;\n            return (0, _strapiHelperPlugin.request)(endPoint, {\n              method: 'POST'\n            });\n\n          case 6:\n            _data2 = _context4.sent;\n            emitEventRef.current('didPublishEntry');\n            dispatch({\n              type: 'SUBMIT_SUCCEEDED',\n              data: cleanReceivedData(_data2)\n            });\n            dispatch({\n              type: 'SET_STATUS',\n              status: 'resolved'\n            });\n            strapi.notification.toggle({\n              type: 'success',\n              message: {\n                id: (0, _utils.getTrad)('success.record.publish')\n              }\n            });\n            _context4.next = 17;\n            break;\n\n          case 13:\n            _context4.prev = 13;\n            _context4.t0 = _context4[\"catch\"](0);\n            displayErrors(_context4.t0);\n            dispatch({\n              type: 'SET_STATUS',\n              status: 'resolved'\n            });\n\n          case 17:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, null, [[0, 13]]);\n  })), [cleanReceivedData, displayErrors, id, slug]);\n  var onPut = (0, _react.useCallback)( /*#__PURE__*/function () {\n    var _ref6 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee5(body, trackerProperty) {\n      var endPoint, response;\n      return _regenerator[\"default\"].wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              endPoint = (0, _utils2.getRequestUrl)(\"\".concat(slug, \"/\").concat(id));\n              _context5.prev = 1;\n              emitEventRef.current('willEditEntry', trackerProperty);\n              dispatch({\n                type: 'SET_STATUS',\n                status: 'submit-pending'\n              });\n              _context5.next = 6;\n              return (0, _strapiHelperPlugin.request)(endPoint, {\n                method: 'PUT',\n                body: body\n              });\n\n            case 6:\n              response = _context5.sent;\n              emitEventRef.current('didEditEntry', {\n                trackerProperty: trackerProperty\n              });\n              strapi.notification.toggle({\n                type: 'success',\n                message: {\n                  id: (0, _utils.getTrad)('success.record.save')\n                }\n              });\n              dispatch({\n                type: 'SUBMIT_SUCCEEDED',\n                data: cleanReceivedData(response)\n              });\n              dispatch({\n                type: 'SET_STATUS',\n                status: 'resolved'\n              });\n              _context5.next = 18;\n              break;\n\n            case 13:\n              _context5.prev = 13;\n              _context5.t0 = _context5[\"catch\"](1);\n              emitEventRef.current('didNotEditEntry', {\n                error: _context5.t0,\n                trackerProperty: trackerProperty\n              });\n              displayErrors(_context5.t0);\n              dispatch({\n                type: 'SET_STATUS',\n                status: 'resolved'\n              });\n\n            case 18:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, null, [[1, 13]]);\n    }));\n\n    return function (_x5, _x6) {\n      return _ref6.apply(this, arguments);\n    };\n  }(), [cleanReceivedData, displayErrors, slug, id]);\n  var onUnpublish = (0, _react.useCallback)( /*#__PURE__*/(0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee6() {\n    var endPoint, response;\n    return _regenerator[\"default\"].wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            endPoint = (0, _utils2.getRequestUrl)(\"\".concat(slug, \"/\").concat(id, \"/actions/unpublish\"));\n            dispatch({\n              type: 'SET_STATUS',\n              status: 'unpublish-pending'\n            });\n            _context6.prev = 2;\n            emitEventRef.current('willUnpublishEntry');\n            _context6.next = 6;\n            return (0, _strapiHelperPlugin.request)(endPoint, {\n              method: 'POST'\n            });\n\n          case 6:\n            response = _context6.sent;\n            emitEventRef.current('didUnpublishEntry');\n            strapi.notification.success((0, _utils.getTrad)('success.record.unpublish'));\n            dispatch({\n              type: 'SUBMIT_SUCCEEDED',\n              data: cleanReceivedData(response)\n            });\n            dispatch({\n              type: 'SET_STATUS',\n              status: 'resolved'\n            });\n            _context6.next = 17;\n            break;\n\n          case 13:\n            _context6.prev = 13;\n            _context6.t0 = _context6[\"catch\"](2);\n            dispatch({\n              type: 'SET_STATUS',\n              status: 'resolved'\n            });\n            displayErrors(_context6.t0);\n\n          case 17:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6, null, [[2, 13]]);\n  })), [cleanReceivedData, displayErrors, id, slug]);\n  return children({\n    componentsDataStructure: componentsDataStructure,\n    contentTypeDataStructure: contentTypeDataStructure,\n    data: data,\n    isCreatingEntry: isCreatingEntry,\n    isLoadingForData: isLoading,\n    onDelete: onDelete,\n    onDeleteSucceeded: onDeleteSucceeded,\n    onPost: onPost,\n    onPublish: onPublish,\n    onPut: onPut,\n    onUnpublish: onUnpublish,\n    status: status\n  });\n};\n\nCollectionTypeFormWrapper.defaultProps = {\n  from: '/',\n  origin: null\n};\nCollectionTypeFormWrapper.propTypes = {\n  allLayoutData: _propTypes[\"default\"].exact({\n    components: _propTypes[\"default\"].object.isRequired,\n    contentType: _propTypes[\"default\"].exact({\n      apiID: _propTypes[\"default\"].string.isRequired,\n      attributes: _propTypes[\"default\"].object.isRequired,\n      info: _propTypes[\"default\"].object.isRequired,\n      isDisplayed: _propTypes[\"default\"].bool.isRequired,\n      kind: _propTypes[\"default\"].string.isRequired,\n      layouts: _propTypes[\"default\"].object.isRequired,\n      metadatas: _propTypes[\"default\"].object.isRequired,\n      options: _propTypes[\"default\"].object.isRequired,\n      settings: _propTypes[\"default\"].object.isRequired,\n      uid: _propTypes[\"default\"].string.isRequired\n    }).isRequired\n  }).isRequired,\n  children: _propTypes[\"default\"].func.isRequired,\n  from: _propTypes[\"default\"].string,\n  id: _propTypes[\"default\"].string.isRequired,\n  origin: _propTypes[\"default\"].string,\n  slug: _propTypes[\"default\"].string.isRequired\n};\n\nvar _default = /*#__PURE__*/(0, _react.memo)(CollectionTypeFormWrapper);\n\nexports[\"default\"] = _default;","map":{"version":3,"sources":["D:/webstorm_projects/redcat_backend/.cache/plugins/strapi-plugin-content-manager/admin/src/containers/CollectionTypeFormWrapper/index.js"],"names":["CollectionTypeFormWrapper","allLayoutData","children","from","slug","id","origin","emitEvent","push","replace","crudReducer","crudInitialState","componentsDataStructure","contentTypeDataStructure","data","isLoading","status","dispatch","emitEventRef","isCreatingEntry","requestURL","cleanClonedData","cleaned","contentType","components","cleanReceivedData","Object","keys","reduce","acc","current","defaultComponentForm","attributes","type","abortController","AbortController","signal","getData","method","name","console","error","resStatus","strapi","notification","info","abort","displayErrors","err","errorPayload","response","payload","errorMessage","Array","isArray","onDelete","trackerProperty","success","Promise","resolve","reject","onDeleteSucceeded","onPost","body","endPoint","toggle","message","pluginId","onPublish","onPut","onUnpublish","isLoadingForData","defaultProps","propTypes","PropTypes","exact","object","isRequired","apiID","string","isDisplayed","bool","kind","layouts","metadatas","options","settings","uid","func"],"mappings":"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","sourcesContent":["import { memo, useCallback, useEffect, useMemo, useRef, useReducer } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { get } from 'lodash';\nimport { request, useGlobalContext } from 'strapi-helper-plugin';\nimport PropTypes from 'prop-types';\nimport {\n  createDefaultForm,\n  formatComponentData,\n  getTrad,\n  removePasswordFieldsFromData,\n  removeFieldsFromClonedData,\n} from '../../utils';\nimport pluginId from '../../pluginId';\nimport { crudInitialState, crudReducer } from '../../sharedReducers';\nimport { getRequestUrl } from './utils';\n\n// This container is used to handle the CRUD\nconst CollectionTypeFormWrapper = ({ allLayoutData, children, from, slug, id, origin }) => {\n  const { emitEvent } = useGlobalContext();\n  const { push, replace } = useHistory();\n\n  const [\n    { componentsDataStructure, contentTypeDataStructure, data, isLoading, status },\n    dispatch,\n  ] = useReducer(crudReducer, crudInitialState);\n  const emitEventRef = useRef(emitEvent);\n\n  const isCreatingEntry = id === 'create';\n\n  const requestURL = useMemo(() => {\n    if (isCreatingEntry && !origin) {\n      return null;\n    }\n\n    return getRequestUrl(`${slug}/${origin || id}`);\n  }, [slug, id, isCreatingEntry, origin]);\n\n  const cleanClonedData = useCallback(\n    data => {\n      if (!origin) {\n        return data;\n      }\n\n      const cleaned = removeFieldsFromClonedData(\n        data,\n        allLayoutData.contentType,\n        allLayoutData.components\n      );\n\n      return cleaned;\n    },\n    [allLayoutData, origin]\n  );\n\n  const cleanReceivedData = useCallback(\n    data => {\n      const cleaned = removePasswordFieldsFromData(\n        data,\n        allLayoutData.contentType,\n        allLayoutData.components\n      );\n\n      return formatComponentData(cleaned, allLayoutData.contentType, allLayoutData.components);\n    },\n    [allLayoutData]\n  );\n\n  // SET THE DEFAULT LAYOUT the effect is applied when the slug changes\n  useEffect(() => {\n    const componentsDataStructure = Object.keys(allLayoutData.components).reduce((acc, current) => {\n      const defaultComponentForm = createDefaultForm(\n        get(allLayoutData, ['components', current, 'attributes'], {}),\n        allLayoutData.components\n      );\n\n      acc[current] = formatComponentData(\n        defaultComponentForm,\n        allLayoutData.components[current],\n        allLayoutData.components\n      );\n\n      return acc;\n    }, {});\n\n    const contentTypeDataStructure = createDefaultForm(\n      allLayoutData.contentType.attributes,\n      allLayoutData.components\n    );\n\n    dispatch({\n      type: 'SET_DATA_STRUCTURES',\n      componentsDataStructure,\n      contentTypeDataStructure: formatComponentData(\n        contentTypeDataStructure,\n        allLayoutData.contentType,\n        allLayoutData.components\n      ),\n    });\n  }, [allLayoutData]);\n\n  useEffect(() => {\n    const abortController = new AbortController();\n    const { signal } = abortController;\n\n    const getData = async signal => {\n      dispatch({ type: 'GET_DATA' });\n\n      try {\n        const data = await request(requestURL, { method: 'GET', signal });\n\n        dispatch({\n          type: 'GET_DATA_SUCCEEDED',\n          data: cleanReceivedData(cleanClonedData(data)),\n        });\n      } catch (err) {\n        if (err.name === 'AbortError') {\n          return;\n        }\n\n        console.error(err);\n\n        const resStatus = get(err, 'response.status', null);\n\n        if (resStatus === 404) {\n          push(from);\n\n          return;\n        }\n\n        // Not allowed to read a document\n        if (resStatus === 403) {\n          strapi.notification.info(getTrad('permissions.not-allowed.update'));\n\n          push(from);\n        }\n      }\n    };\n\n    if (requestURL) {\n      getData(signal);\n    } else {\n      dispatch({ type: 'INIT_FORM' });\n    }\n\n    return () => {\n      abortController.abort();\n    };\n  }, [requestURL, push, from, cleanReceivedData, cleanClonedData]);\n\n  const displayErrors = useCallback(err => {\n    const errorPayload = err.response.payload;\n    console.error(errorPayload);\n\n    let errorMessage = get(errorPayload, ['message'], 'Bad Request');\n\n    // TODO handle errors correctly when back-end ready\n    if (Array.isArray(errorMessage)) {\n      errorMessage = get(errorMessage, ['0', 'messages', '0', 'id']);\n    }\n\n    if (typeof errorMessage === 'string') {\n      strapi.notification.error(errorMessage);\n    }\n  }, []);\n\n  const onDelete = useCallback(\n    async trackerProperty => {\n      try {\n        emitEventRef.current('willDeleteEntry', trackerProperty);\n\n        const response = await request(getRequestUrl(`${slug}/${id}`), {\n          method: 'DELETE',\n        });\n\n        strapi.notification.success(getTrad('success.record.delete'));\n\n        emitEventRef.current('didDeleteEntry', trackerProperty);\n\n        return Promise.resolve(response);\n      } catch (err) {\n        emitEventRef.current('didNotDeleteEntry', { error: err, ...trackerProperty });\n\n        return Promise.reject(err);\n      }\n    },\n    [id, slug]\n  );\n\n  const onDeleteSucceeded = useCallback(() => {\n    replace(from);\n  }, [from, replace]);\n\n  const onPost = useCallback(\n    async (body, trackerProperty) => {\n      const endPoint = getRequestUrl(slug);\n\n      try {\n        // Show a loading button in the EditView/Header.js && lock the app => no navigation\n        dispatch({ type: 'SET_STATUS', status: 'submit-pending' });\n\n        const response = await request(endPoint, { method: 'POST', body });\n\n        emitEventRef.current('didCreateEntry', trackerProperty);\n        strapi.notification.toggle({\n          type: 'success',\n          message: { id: getTrad('success.record.save') },\n        });\n\n        dispatch({ type: 'SUBMIT_SUCCEEDED', data: cleanReceivedData(response) });\n        // Enable navigation and remove loaders\n        dispatch({ type: 'SET_STATUS', status: 'resolved' });\n\n        replace(`/plugins/${pluginId}/collectionType/${slug}/${response.id}`);\n      } catch (err) {\n        emitEventRef.current('didNotCreateEntry', { error: err, trackerProperty });\n        displayErrors(err);\n        dispatch({ type: 'SET_STATUS', status: 'resolved' });\n      }\n    },\n    [cleanReceivedData, displayErrors, replace, slug]\n  );\n\n  const onPublish = useCallback(async () => {\n    try {\n      emitEventRef.current('willPublishEntry');\n      const endPoint = getRequestUrl(`${slug}/${id}/actions/publish`);\n\n      dispatch({ type: 'SET_STATUS', status: 'publish-pending' });\n\n      const data = await request(endPoint, { method: 'POST' });\n\n      emitEventRef.current('didPublishEntry');\n\n      dispatch({ type: 'SUBMIT_SUCCEEDED', data: cleanReceivedData(data) });\n      dispatch({ type: 'SET_STATUS', status: 'resolved' });\n\n      strapi.notification.toggle({\n        type: 'success',\n        message: { id: getTrad('success.record.publish') },\n      });\n    } catch (err) {\n      displayErrors(err);\n      dispatch({ type: 'SET_STATUS', status: 'resolved' });\n    }\n  }, [cleanReceivedData, displayErrors, id, slug]);\n\n  const onPut = useCallback(\n    async (body, trackerProperty) => {\n      const endPoint = getRequestUrl(`${slug}/${id}`);\n\n      try {\n        emitEventRef.current('willEditEntry', trackerProperty);\n\n        dispatch({ type: 'SET_STATUS', status: 'submit-pending' });\n\n        const response = await request(endPoint, { method: 'PUT', body });\n\n        emitEventRef.current('didEditEntry', { trackerProperty });\n        strapi.notification.toggle({\n          type: 'success',\n          message: { id: getTrad('success.record.save') },\n        });\n\n        dispatch({ type: 'SUBMIT_SUCCEEDED', data: cleanReceivedData(response) });\n        dispatch({ type: 'SET_STATUS', status: 'resolved' });\n      } catch (err) {\n        emitEventRef.current('didNotEditEntry', { error: err, trackerProperty });\n        displayErrors(err);\n        dispatch({ type: 'SET_STATUS', status: 'resolved' });\n      }\n    },\n    [cleanReceivedData, displayErrors, slug, id]\n  );\n\n  const onUnpublish = useCallback(async () => {\n    const endPoint = getRequestUrl(`${slug}/${id}/actions/unpublish`);\n\n    dispatch({ type: 'SET_STATUS', status: 'unpublish-pending' });\n\n    try {\n      emitEventRef.current('willUnpublishEntry');\n\n      const response = await request(endPoint, { method: 'POST' });\n\n      emitEventRef.current('didUnpublishEntry');\n      strapi.notification.success(getTrad('success.record.unpublish'));\n\n      dispatch({ type: 'SUBMIT_SUCCEEDED', data: cleanReceivedData(response) });\n      dispatch({ type: 'SET_STATUS', status: 'resolved' });\n    } catch (err) {\n      dispatch({ type: 'SET_STATUS', status: 'resolved' });\n      displayErrors(err);\n    }\n  }, [cleanReceivedData, displayErrors, id, slug]);\n\n  return children({\n    componentsDataStructure,\n    contentTypeDataStructure,\n    data,\n    isCreatingEntry,\n    isLoadingForData: isLoading,\n    onDelete,\n    onDeleteSucceeded,\n    onPost,\n    onPublish,\n    onPut,\n    onUnpublish,\n    status,\n  });\n};\n\nCollectionTypeFormWrapper.defaultProps = {\n  from: '/',\n  origin: null,\n};\n\nCollectionTypeFormWrapper.propTypes = {\n  allLayoutData: PropTypes.exact({\n    components: PropTypes.object.isRequired,\n    contentType: PropTypes.exact({\n      apiID: PropTypes.string.isRequired,\n      attributes: PropTypes.object.isRequired,\n      info: PropTypes.object.isRequired,\n      isDisplayed: PropTypes.bool.isRequired,\n      kind: PropTypes.string.isRequired,\n      layouts: PropTypes.object.isRequired,\n      metadatas: PropTypes.object.isRequired,\n      options: PropTypes.object.isRequired,\n      settings: PropTypes.object.isRequired,\n      uid: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n  children: PropTypes.func.isRequired,\n  from: PropTypes.string,\n  id: PropTypes.string.isRequired,\n  origin: PropTypes.string,\n  slug: PropTypes.string.isRequired,\n};\n\nexport default memo(CollectionTypeFormWrapper);\n"]},"metadata":{},"sourceType":"script"}