{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _core = require(\"@buffetjs/core\");\n\nvar _reactIntl = require(\"react-intl\");\n\nvar _hooks = require(\"../../../../../hooks\");\n\nvar _PermissionCheckbox = _interopRequireDefault(require(\"../PermissionCheckbox\"));\n\nvar _utils = require(\"../../utils\");\n\nvar _Wrapper = _interopRequireDefault(require(\"./Wrapper\"));\n\nvar PermissionsHeader = function PermissionsHeader(_ref) {\n  var allAttributes = _ref.allAttributes,\n      contentTypes = _ref.contentTypes;\n\n  var _useIntl = (0, _reactIntl.useIntl)(),\n      formatMessage = _useIntl.formatMessage;\n\n  var _usePermissionsContex = (0, _hooks.usePermissionsContext)(),\n      permissionsLayout = _usePermissionsContex.permissionsLayout,\n      contentTypesPermissions = _usePermissionsContex.contentTypesPermissions; // Get the count of content type contentTypesPermissions by action.\n\n\n  var countContentTypesActionPermissions = (0, _react.useCallback)(function (action) {\n    return (0, _utils.getContentTypesActionsSize)(contentTypes, contentTypesPermissions, action);\n  }, [contentTypes, contentTypesPermissions]);\n  var getNumberOfPermissionByAction = (0, _react.useCallback)(function (action) {\n    return (0, _utils.getPermissionsCountByAction)(contentTypes, contentTypesPermissions, action);\n  }, [contentTypes, contentTypesPermissions]);\n\n  var hasSomeActions = function hasSomeActions(permission) {\n    if (!(0, _utils.isAttributeAction)(permission.action)) {\n      return countContentTypesActionPermissions(permission.action) > 0 && countContentTypesActionPermissions(permission.action) < filteredContentTypes(permission.subjects).length;\n    }\n\n    var numberOfPermission = getNumberOfPermissionByAction(permission.action);\n    return numberOfPermission > 0 && numberOfPermission < allAttributes.length;\n  };\n\n  var hasAllActions = function hasAllActions(permission) {\n    if (!(0, _utils.isAttributeAction)(permission.action)) {\n      return countContentTypesActionPermissions(permission.action) === filteredContentTypes(permission.subjects).length;\n    }\n\n    var numberOfPermission = getNumberOfPermissionByAction(permission.action);\n    return numberOfPermission === allAttributes.length;\n  };\n\n  var filteredContentTypes = (0, _react.useCallback)(function (subjects) {\n    return contentTypes.filter(function (contentType) {\n      return subjects.includes(contentType.uid);\n    });\n  }, [contentTypes]);\n  var permissionsToDisplay = (0, _react.useMemo)(function () {\n    return permissionsLayout.sections.contentTypes.filter(function (permission) {\n      return filteredContentTypes(permission.subjects).length > 0;\n    });\n  }, [filteredContentTypes, permissionsLayout.sections.contentTypes]);\n  return /*#__PURE__*/_react[\"default\"].createElement(_Wrapper[\"default\"], {\n    disabled: true\n  }, /*#__PURE__*/_react[\"default\"].createElement(_core.Flex, null, permissionsToDisplay.map(function (permissionLayout) {\n    return /*#__PURE__*/_react[\"default\"].createElement(_PermissionCheckbox[\"default\"], {\n      key: permissionLayout.action,\n      name: permissionLayout.action,\n      disabled: true,\n      value: hasAllActions(permissionLayout),\n      someChecked: hasSomeActions(permissionLayout),\n      message: formatMessage({\n        id: \"Settings.roles.form.permissions.\".concat(permissionLayout.displayName.toLowerCase()),\n        defaultMessage: permissionLayout.displayName\n      })\n    });\n  })));\n};\n\nPermissionsHeader.propTypes = {\n  allAttributes: _propTypes[\"default\"].array.isRequired,\n  contentTypes: _propTypes[\"default\"].array.isRequired\n};\nvar _default = PermissionsHeader;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["D:/webstorm_projects/redcat_backend/.cache/admin/src/components/Roles/Permissions/ContentTypes/PermissionsHeader/index.js"],"names":["PermissionsHeader","allAttributes","contentTypes","formatMessage","permissionsLayout","contentTypesPermissions","countContentTypesActionPermissions","action","getNumberOfPermissionByAction","hasSomeActions","permission","filteredContentTypes","subjects","length","numberOfPermission","hasAllActions","filter","contentType","includes","uid","permissionsToDisplay","sections","map","permissionLayout","id","displayName","toLowerCase","defaultMessage","propTypes","PropTypes","array","isRequired"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AAEA;;AACA;;AACA;;AAKA;;AAEA,IAAMA,iBAAiB,GAAG,SAApBA,iBAAoB,OAAqC;AAAA,MAAlCC,aAAkC,QAAlCA,aAAkC;AAAA,MAAnBC,YAAmB,QAAnBA,YAAmB;;AAAA,iBACnC,yBADmC;AAAA,MACrDC,aADqD,YACrDA,aADqD;;AAAA,8BAEN,mCAFM;AAAA,MAErDC,iBAFqD,yBAErDA,iBAFqD;AAAA,MAElCC,uBAFkC,yBAElCA,uBAFkC,EAI7D;;;AACA,MAAMC,kCAAkC,GAAG,wBACzC,UAAAC,MAAM,EAAI;AACR,WAAO,uCAA2BL,YAA3B,EAAyCG,uBAAzC,EAAkEE,MAAlE,CAAP;AACD,GAHwC,EAIzC,CAACL,YAAD,EAAeG,uBAAf,CAJyC,CAA3C;AAOA,MAAMG,6BAA6B,GAAG,wBACpC,UAAAD,MAAM,EAAI;AACR,WAAO,wCAA4BL,YAA5B,EAA0CG,uBAA1C,EAAmEE,MAAnE,CAAP;AACD,GAHmC,EAIpC,CAACL,YAAD,EAAeG,uBAAf,CAJoC,CAAtC;;AAOA,MAAMI,cAAc,GAAG,SAAjBA,cAAiB,CAAAC,UAAU,EAAI;AACnC,QAAI,CAAC,8BAAkBA,UAAU,CAACH,MAA7B,CAAL,EAA2C;AACzC,aACED,kCAAkC,CAACI,UAAU,CAACH,MAAZ,CAAlC,GAAwD,CAAxD,IACAD,kCAAkC,CAACI,UAAU,CAACH,MAAZ,CAAlC,GACEI,oBAAoB,CAACD,UAAU,CAACE,QAAZ,CAApB,CAA0CC,MAH9C;AAKD;;AAED,QAAMC,kBAAkB,GAAGN,6BAA6B,CAACE,UAAU,CAACH,MAAZ,CAAxD;AAEA,WAAOO,kBAAkB,GAAG,CAArB,IAA0BA,kBAAkB,GAAGb,aAAa,CAACY,MAApE;AACD,GAZD;;AAcA,MAAME,aAAa,GAAG,SAAhBA,aAAgB,CAAAL,UAAU,EAAI;AAClC,QAAI,CAAC,8BAAkBA,UAAU,CAACH,MAA7B,CAAL,EAA2C;AACzC,aACED,kCAAkC,CAACI,UAAU,CAACH,MAAZ,CAAlC,KACAI,oBAAoB,CAACD,UAAU,CAACE,QAAZ,CAApB,CAA0CC,MAF5C;AAID;;AAED,QAAMC,kBAAkB,GAAGN,6BAA6B,CAACE,UAAU,CAACH,MAAZ,CAAxD;AAEA,WAAOO,kBAAkB,KAAKb,aAAa,CAACY,MAA5C;AACD,GAXD;;AAaA,MAAMF,oBAAoB,GAAG,wBAC3B,UAAAC,QAAQ;AAAA,WAAIV,YAAY,CAACc,MAAb,CAAoB,UAAAC,WAAW;AAAA,aAAIL,QAAQ,CAACM,QAAT,CAAkBD,WAAW,CAACE,GAA9B,CAAJ;AAAA,KAA/B,CAAJ;AAAA,GADmB,EAE3B,CAACjB,YAAD,CAF2B,CAA7B;AAKA,MAAMkB,oBAAoB,GAAG,oBAAQ,YAAM;AACzC,WAAOhB,iBAAiB,CAACiB,QAAlB,CAA2BnB,YAA3B,CAAwCc,MAAxC,CACL,UAAAN,UAAU;AAAA,aAAIC,oBAAoB,CAACD,UAAU,CAACE,QAAZ,CAApB,CAA0CC,MAA1C,GAAmD,CAAvD;AAAA,KADL,CAAP;AAGD,GAJ4B,EAI1B,CAACF,oBAAD,EAAuBP,iBAAiB,CAACiB,QAAlB,CAA2BnB,YAAlD,CAJ0B,CAA7B;AAMA,sBACE,gCAAC,mBAAD;AAAS,IAAA,QAAQ;AAAjB,kBACE,gCAAC,UAAD,QACGkB,oBAAoB,CAACE,GAArB,CAAyB,UAAAC,gBAAgB;AAAA,wBACxC,gCAAC,8BAAD;AACE,MAAA,GAAG,EAAEA,gBAAgB,CAAChB,MADxB;AAEE,MAAA,IAAI,EAAEgB,gBAAgB,CAAChB,MAFzB;AAGE,MAAA,QAAQ,MAHV;AAIE,MAAA,KAAK,EAAEQ,aAAa,CAACQ,gBAAD,CAJtB;AAKE,MAAA,WAAW,EAAEd,cAAc,CAACc,gBAAD,CAL7B;AAME,MAAA,OAAO,EAAEpB,aAAa,CAAC;AACrBqB,QAAAA,EAAE,4CAAqCD,gBAAgB,CAACE,WAAjB,CAA6BC,WAA7B,EAArC,CADmB;AAErBC,QAAAA,cAAc,EAAEJ,gBAAgB,CAACE;AAFZ,OAAD;AANxB,MADwC;AAAA,GAAzC,CADH,CADF,CADF;AAmBD,CA5ED;;AA8EAzB,iBAAiB,CAAC4B,SAAlB,GAA8B;AAC5B3B,EAAAA,aAAa,EAAE4B,sBAAUC,KAAV,CAAgBC,UADH;AAE5B7B,EAAAA,YAAY,EAAE2B,sBAAUC,KAAV,CAAgBC;AAFF,CAA9B;eAKe/B,iB","sourcesContent":["import React, { useCallback, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { Flex } from '@buffetjs/core';\nimport { useIntl } from 'react-intl';\n\nimport { usePermissionsContext } from '../../../../../hooks';\nimport PermissionCheckbox from '../PermissionCheckbox';\nimport {\n  getContentTypesActionsSize,\n  getPermissionsCountByAction,\n  isAttributeAction,\n} from '../../utils';\nimport Wrapper from './Wrapper';\n\nconst PermissionsHeader = ({ allAttributes, contentTypes }) => {\n  const { formatMessage } = useIntl();\n  const { permissionsLayout, contentTypesPermissions } = usePermissionsContext();\n\n  // Get the count of content type contentTypesPermissions by action.\n  const countContentTypesActionPermissions = useCallback(\n    action => {\n      return getContentTypesActionsSize(contentTypes, contentTypesPermissions, action);\n    },\n    [contentTypes, contentTypesPermissions]\n  );\n\n  const getNumberOfPermissionByAction = useCallback(\n    action => {\n      return getPermissionsCountByAction(contentTypes, contentTypesPermissions, action);\n    },\n    [contentTypes, contentTypesPermissions]\n  );\n\n  const hasSomeActions = permission => {\n    if (!isAttributeAction(permission.action)) {\n      return (\n        countContentTypesActionPermissions(permission.action) > 0 &&\n        countContentTypesActionPermissions(permission.action) <\n          filteredContentTypes(permission.subjects).length\n      );\n    }\n\n    const numberOfPermission = getNumberOfPermissionByAction(permission.action);\n\n    return numberOfPermission > 0 && numberOfPermission < allAttributes.length;\n  };\n\n  const hasAllActions = permission => {\n    if (!isAttributeAction(permission.action)) {\n      return (\n        countContentTypesActionPermissions(permission.action) ===\n        filteredContentTypes(permission.subjects).length\n      );\n    }\n\n    const numberOfPermission = getNumberOfPermissionByAction(permission.action);\n\n    return numberOfPermission === allAttributes.length;\n  };\n\n  const filteredContentTypes = useCallback(\n    subjects => contentTypes.filter(contentType => subjects.includes(contentType.uid)),\n    [contentTypes]\n  );\n\n  const permissionsToDisplay = useMemo(() => {\n    return permissionsLayout.sections.contentTypes.filter(\n      permission => filteredContentTypes(permission.subjects).length > 0\n    );\n  }, [filteredContentTypes, permissionsLayout.sections.contentTypes]);\n\n  return (\n    <Wrapper disabled>\n      <Flex>\n        {permissionsToDisplay.map(permissionLayout => (\n          <PermissionCheckbox\n            key={permissionLayout.action}\n            name={permissionLayout.action}\n            disabled\n            value={hasAllActions(permissionLayout)}\n            someChecked={hasSomeActions(permissionLayout)}\n            message={formatMessage({\n              id: `Settings.roles.form.permissions.${permissionLayout.displayName.toLowerCase()}`,\n              defaultMessage: permissionLayout.displayName,\n            })}\n          />\n        ))}\n      </Flex>\n    </Wrapper>\n  );\n};\n\nPermissionsHeader.propTypes = {\n  allAttributes: PropTypes.array.isRequired,\n  contentTypes: PropTypes.array.isRequired,\n};\n\nexport default PermissionsHeader;\n"]},"metadata":{},"sourceType":"script"}