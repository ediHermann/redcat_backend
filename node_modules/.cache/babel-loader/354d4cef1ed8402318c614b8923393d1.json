{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _core = require(\"@buffetjs/core\");\n\nvar _ContentTypesRow = _interopRequireDefault(require(\"ee_else_ce/components/Roles/Permissions/ContentTypes/ContentTypesRow\"));\n\nvar _PermissionsHeader = _interopRequireDefault(require(\"ee_else_ce/components/Roles/Permissions/ContentTypes/PermissionsHeader\"));\n\nvar _Wrapper = _interopRequireDefault(require(\"./Wrapper\"));\n\nvar _hooks = require(\"../../../../hooks\");\n\nvar ContentTypesPermissions = function ContentTypesPermissions(_ref) {\n  var contentTypes = _ref.contentTypes,\n      allContentTypesAttributes = _ref.allContentTypesAttributes;\n\n  var _usePermissionsContex = (0, _hooks.usePermissionsContext)(),\n      permissionsLayout = _usePermissionsContex.permissionsLayout;\n\n  return /*#__PURE__*/_react[\"default\"].createElement(_Wrapper[\"default\"], null, /*#__PURE__*/_react[\"default\"].createElement(_core.Padded, {\n    left: true,\n    right: true,\n    bottom: true,\n    size: \"md\"\n  }, /*#__PURE__*/_react[\"default\"].createElement(_PermissionsHeader[\"default\"], {\n    allAttributes: allContentTypesAttributes,\n    contentTypes: contentTypes\n  }), contentTypes && contentTypes.map(function (contentType, index) {\n    return /*#__PURE__*/_react[\"default\"].createElement(_ContentTypesRow[\"default\"], {\n      permissionsLayout: permissionsLayout.sections.contentTypes,\n      key: contentType.uid,\n      index: index,\n      contentType: contentType\n    });\n  })));\n};\n\nContentTypesPermissions.propTypes = {\n  contentTypes: _propTypes[\"default\"].array.isRequired,\n  allContentTypesAttributes: _propTypes[\"default\"].array.isRequired\n};\nvar _default = ContentTypesPermissions;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["D:/webstorm_projects/redcat_backend/.cache/admin/src/components/Roles/Permissions/ContentTypes/index.js"],"names":["ContentTypesPermissions","contentTypes","allContentTypesAttributes","permissionsLayout","map","contentType","index","sections","uid","propTypes","PropTypes","array","isRequired"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AAEA;;AACA;;AAEA,IAAMA,uBAAuB,GAAG,SAA1BA,uBAA0B,OAAiD;AAAA,MAA9CC,YAA8C,QAA9CA,YAA8C;AAAA,MAAhCC,yBAAgC,QAAhCA,yBAAgC;;AAAA,8BACjD,mCADiD;AAAA,MACvEC,iBADuE,yBACvEA,iBADuE;;AAG/E,sBACE,gCAAC,mBAAD,qBACE,gCAAC,YAAD;AAAQ,IAAA,IAAI,MAAZ;AAAa,IAAA,KAAK,MAAlB;AAAmB,IAAA,MAAM,MAAzB;AAA0B,IAAA,IAAI,EAAC;AAA/B,kBACE,gCAAC,6BAAD;AAAmB,IAAA,aAAa,EAAED,yBAAlC;AAA6D,IAAA,YAAY,EAAED;AAA3E,IADF,EAEGA,YAAY,IACXA,YAAY,CAACG,GAAb,CAAiB,UAACC,WAAD,EAAcC,KAAd;AAAA,wBACf,gCAAC,2BAAD;AACE,MAAA,iBAAiB,EAAEH,iBAAiB,CAACI,QAAlB,CAA2BN,YADhD;AAEE,MAAA,GAAG,EAAEI,WAAW,CAACG,GAFnB;AAGE,MAAA,KAAK,EAAEF,KAHT;AAIE,MAAA,WAAW,EAAED;AAJf,MADe;AAAA,GAAjB,CAHJ,CADF,CADF;AAgBD,CAnBD;;AAqBAL,uBAAuB,CAACS,SAAxB,GAAoC;AAClCR,EAAAA,YAAY,EAAES,sBAAUC,KAAV,CAAgBC,UADI;AAElCV,EAAAA,yBAAyB,EAAEQ,sBAAUC,KAAV,CAAgBC;AAFT,CAApC;eAKeZ,uB","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Padded } from '@buffetjs/core';\nimport ContentTypeRow from 'ee_else_ce/components/Roles/Permissions/ContentTypes/ContentTypesRow';\nimport PermissionsHeader from 'ee_else_ce/components/Roles/Permissions/ContentTypes/PermissionsHeader';\n\nimport Wrapper from './Wrapper';\nimport { usePermissionsContext } from '../../../../hooks';\n\nconst ContentTypesPermissions = ({ contentTypes, allContentTypesAttributes }) => {\n  const { permissionsLayout } = usePermissionsContext();\n\n  return (\n    <Wrapper>\n      <Padded left right bottom size=\"md\">\n        <PermissionsHeader allAttributes={allContentTypesAttributes} contentTypes={contentTypes} />\n        {contentTypes &&\n          contentTypes.map((contentType, index) => (\n            <ContentTypeRow\n              permissionsLayout={permissionsLayout.sections.contentTypes}\n              key={contentType.uid}\n              index={index}\n              contentType={contentType}\n            />\n          ))}\n      </Padded>\n    </Wrapper>\n  );\n};\n\nContentTypesPermissions.propTypes = {\n  contentTypes: PropTypes.array.isRequired,\n  allContentTypesAttributes: PropTypes.array.isRequired,\n};\n\nexport default ContentTypesPermissions;\n"]},"metadata":{},"sourceType":"script"}