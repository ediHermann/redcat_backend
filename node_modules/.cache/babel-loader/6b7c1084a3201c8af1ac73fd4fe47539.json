{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _taggedTemplateLiteral2 = _interopRequireDefault(require(\"@babel/runtime/helpers/taggedTemplateLiteral\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _lodash = require(\"lodash\");\n\nvar _core = require(\"@buffetjs/core\");\n\nvar _styledComponents = _interopRequireDefault(require(\"styled-components\"));\n\nvar _hooks = require(\"../../../../../../hooks\");\n\nvar _utils = require(\"../../../../../../utils\");\n\nvar _utils2 = require(\"../../../utils\");\n\nvar _Chevron = _interopRequireDefault(require(\"../Chevron\"));\n\nvar _CollapseLabel = _interopRequireDefault(require(\"../../CollapseLabel\"));\n\nvar _Curve = _interopRequireDefault(require(\"./Curve\"));\n\nvar _PermissionCheckbox = _interopRequireDefault(require(\"../../PermissionCheckbox\"));\n\nvar _PermissionWrapper = _interopRequireDefault(require(\"../PermissionWrapper\"));\n\nvar _Required = _interopRequireDefault(require(\"../Required\"));\n\nvar _index = _interopRequireDefault(require(\"./index\"));\n\nvar _RowStyle = _interopRequireDefault(require(\"./RowStyle\"));\n\nvar _templateObject, _templateObject2, _templateObject3;\n\n// Those styles will be used only in this file.\nvar LeftBorderTimeline = _styledComponents[\"default\"].div(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2[\"default\"])([\"\\n  border-left: \", \";\\n\"])), function (_ref) {\n  var isVisible = _ref.isVisible;\n  return isVisible ? '3px solid #a5d5ff' : '3px solid transparent';\n});\n\nvar SubLevelWrapper = _styledComponents[\"default\"].div(_templateObject2 || (_templateObject2 = (0, _taggedTemplateLiteral2[\"default\"])([\"\\n  padding-bottom: 8px;\\n\"])));\n\nvar AttributeRowWrapper = (0, _styledComponents[\"default\"])(_core.Flex)(_templateObject3 || (_templateObject3 = (0, _taggedTemplateLiteral2[\"default\"])([\"\\n  height: \", \";\\n\"])), function (_ref2) {\n  var isSmall = _ref2.isSmall;\n  return isSmall ? '28px' : '36px';\n});\n\nvar ComponentAttributeRow = function ComponentAttributeRow(_ref3) {\n  var attribute = _ref3.attribute,\n      index = _ref3.index,\n      numberOfAttributes = _ref3.numberOfAttributes,\n      recursiveLevel = _ref3.recursiveLevel;\n\n  var _usePermissionsContex = (0, _hooks.usePermissionsContext)(),\n      components = _usePermissionsContex.components,\n      dispatch = _usePermissionsContex.dispatch,\n      contentTypesPermissions = _usePermissionsContex.contentTypesPermissions,\n      collapsePath = _usePermissionsContex.collapsePath;\n\n  var isCollapsable = attribute.type === 'component';\n  var contentTypeUid = collapsePath[0];\n  var isActive = collapsePath[recursiveLevel + 2] === attribute.attributeName;\n  var attributePermissionName = (0, _react.useMemo)(function () {\n    return [].concat((0, _toConsumableArray2[\"default\"])(collapsePath.slice(1)), [attribute.attributeName]).join('.');\n  }, // eslint-disable-next-line react-hooks/exhaustive-deps\n  [attribute]);\n  var attributeActions = (0, _lodash.get)(contentTypesPermissions, [contentTypeUid, 'attributes', attributePermissionName, 'actions'], []);\n  var recursiveAttributes = (0, _react.useMemo)(function () {\n    var component = components.find(function (component) {\n      return component.uid === attribute.component;\n    });\n    return isCollapsable ? (0, _utils2.getAttributesByModel)(component, components, attributePermissionName) : [attribute];\n  }, [components, isCollapsable, attributePermissionName, attribute]);\n  var getRecursiveAttributesPermissions = (0, _react.useCallback)(function (action) {\n    var number = (0, _utils2.getNumberOfRecursivePermissionsByAction)(contentTypeUid, action, isCollapsable ? \"\".concat(attributePermissionName, \".\") : attributePermissionName, contentTypesPermissions);\n    return number;\n  }, [attributePermissionName, contentTypeUid, isCollapsable, contentTypesPermissions]);\n  var checkPermission = (0, _react.useCallback)(function (action) {\n    return attributeActions.findIndex(function (permAction) {\n      return permAction === action;\n    }) !== -1;\n  }, // eslint-disable-next-line react-hooks/exhaustive-deps\n  [contentTypesPermissions, attribute]);\n  var attributesToDisplay = (0, _react.useMemo)(function () {\n    return (0, _utils.getAttributesToDisplay)(components.find(function (comp) {\n      return comp.uid === attribute.component;\n    })); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [attribute]);\n\n  var handleToggleAttributes = function handleToggleAttributes() {\n    if (isCollapsable) {\n      dispatch({\n        type: 'COLLAPSE_PATH',\n        index: recursiveLevel + 2,\n        value: attribute.attributeName\n      });\n    }\n  };\n\n  var someChecked = function someChecked(action) {\n    var recursivePermissions = getRecursiveAttributesPermissions(action);\n    return isCollapsable && recursivePermissions > 0 && recursivePermissions < recursiveAttributes.length;\n  };\n\n  var allRecursiveChecked = function allRecursiveChecked(action) {\n    var recursivePermissions = getRecursiveAttributesPermissions(action);\n    return isCollapsable && recursivePermissions === recursiveAttributes.length;\n  };\n\n  return /*#__PURE__*/_react[\"default\"].createElement(LeftBorderTimeline, {\n    isVisible: index + 1 < numberOfAttributes\n  }, /*#__PURE__*/_react[\"default\"].createElement(AttributeRowWrapper, {\n    isSmall: attribute.component || index + 1 === numberOfAttributes\n  }, /*#__PURE__*/_react[\"default\"].createElement(_Curve[\"default\"], {\n    fill: \"#a5d5ff\"\n  }), /*#__PURE__*/_react[\"default\"].createElement(_core.Flex, {\n    style: {\n      flex: 1\n    }\n  }, /*#__PURE__*/_react[\"default\"].createElement(_RowStyle[\"default\"], {\n    isActive: isActive,\n    isCollapsable: attribute.component,\n    isRequired: attribute.required && !isCollapsable,\n    level: recursiveLevel\n  }, /*#__PURE__*/_react[\"default\"].createElement(_CollapseLabel[\"default\"], {\n    alignItems: \"center\",\n    isCollapsable: attribute.component,\n    onClick: handleToggleAttributes,\n    title: attribute.attributeName\n  }, /*#__PURE__*/_react[\"default\"].createElement(_core.Text, {\n    color: isActive ? 'mediumBlue' : 'grey',\n    ellipsis: true,\n    fontSize: \"xs\",\n    fontWeight: \"bold\",\n    lineHeight: \"20px\",\n    textTransform: \"uppercase\"\n  }, attribute.attributeName), attribute.required && /*#__PURE__*/_react[\"default\"].createElement(_Required[\"default\"], null, \"*\"), /*#__PURE__*/_react[\"default\"].createElement(_Chevron[\"default\"], {\n    icon: isActive ? 'caret-up' : 'caret-down'\n  }))), /*#__PURE__*/_react[\"default\"].createElement(_PermissionWrapper[\"default\"], {\n    disabled: true\n  }, _utils2.ATTRIBUTES_PERMISSIONS_ACTIONS.map(function (action) {\n    return /*#__PURE__*/_react[\"default\"].createElement(_PermissionCheckbox[\"default\"], {\n      disabled: true,\n      key: \"\".concat(attribute.attributeName, \"-\").concat(action),\n      someChecked: someChecked(\"\".concat(_utils2.CONTENT_MANAGER_PREFIX, \".\").concat(action)),\n      value: attribute.required || allRecursiveChecked(\"\".concat(_utils2.CONTENT_MANAGER_PREFIX, \".\").concat(action)) || checkPermission(\"\".concat(_utils2.CONTENT_MANAGER_PREFIX, \".\").concat(action)),\n      name: \"\".concat(attribute.attributeName, \"-\").concat(action)\n    });\n  })))), isActive && isCollapsable && /*#__PURE__*/_react[\"default\"].createElement(SubLevelWrapper, null, /*#__PURE__*/_react[\"default\"].createElement(_index[\"default\"], {\n    recursiveLevel: recursiveLevel + 1,\n    attributes: attributesToDisplay\n  })));\n};\n\nComponentAttributeRow.propTypes = {\n  attribute: _propTypes[\"default\"].object.isRequired,\n  index: _propTypes[\"default\"].number.isRequired,\n  numberOfAttributes: _propTypes[\"default\"].number.isRequired,\n  recursiveLevel: _propTypes[\"default\"].number.isRequired\n};\nvar _default = ComponentAttributeRow;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["D:/webstorm_projects/redcat_backend/.cache/admin/src/components/Roles/Permissions/ContentTypes/ContentTypesRow/ComponentsAttributes/ComponentAttributeRow.js"],"names":["LeftBorderTimeline","styled","div","isVisible","SubLevelWrapper","AttributeRowWrapper","Flex","isSmall","ComponentAttributeRow","attribute","index","numberOfAttributes","recursiveLevel","components","dispatch","contentTypesPermissions","collapsePath","isCollapsable","type","contentTypeUid","isActive","attributeName","attributePermissionName","slice","join","attributeActions","recursiveAttributes","component","find","uid","getRecursiveAttributesPermissions","action","number","checkPermission","findIndex","permAction","attributesToDisplay","comp","handleToggleAttributes","value","someChecked","recursivePermissions","length","allRecursiveChecked","flex","required","ATTRIBUTES_PERMISSIONS_ACTIONS","map","CONTENT_MANAGER_PREFIX","propTypes","PropTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, { useMemo, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { get } from 'lodash';\nimport { Flex, Text } from '@buffetjs/core';\nimport styled from 'styled-components';\n\nimport { usePermissionsContext } from '../../../../../../hooks';\nimport { getAttributesToDisplay } from '../../../../../../utils';\nimport {\n  ATTRIBUTES_PERMISSIONS_ACTIONS,\n  CONTENT_MANAGER_PREFIX,\n  getAttributesByModel,\n  getNumberOfRecursivePermissionsByAction,\n} from '../../../utils';\nimport Chevron from '../Chevron';\nimport CollapseLabel from '../../CollapseLabel';\nimport Curve from './Curve';\nimport PermissionCheckbox from '../../PermissionCheckbox';\nimport PermissionWrapper from '../PermissionWrapper';\nimport Required from '../Required';\n// eslint-disable-next-line import/no-cycle\nimport ComponentsAttributes from './index';\nimport RowStyle from './RowStyle';\n\n// Those styles will be used only in this file.\nconst LeftBorderTimeline = styled.div`\n  border-left: ${({ isVisible }) => (isVisible ? '3px solid #a5d5ff' : '3px solid transparent')};\n`;\nconst SubLevelWrapper = styled.div`\n  padding-bottom: 8px;\n`;\nconst AttributeRowWrapper = styled(Flex)`\n  height: ${({ isSmall }) => (isSmall ? '28px' : '36px')};\n`;\n\nconst ComponentAttributeRow = ({ attribute, index, numberOfAttributes, recursiveLevel }) => {\n  const { components, dispatch, contentTypesPermissions, collapsePath } = usePermissionsContext();\n  const isCollapsable = attribute.type === 'component';\n  const contentTypeUid = collapsePath[0];\n  const isActive = collapsePath[recursiveLevel + 2] === attribute.attributeName;\n\n  const attributePermissionName = useMemo(\n    () => [...collapsePath.slice(1), attribute.attributeName].join('.'),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [attribute]\n  );\n\n  const attributeActions = get(\n    contentTypesPermissions,\n    [contentTypeUid, 'attributes', attributePermissionName, 'actions'],\n    []\n  );\n\n  const recursiveAttributes = useMemo(() => {\n    const component = components.find(component => component.uid === attribute.component);\n\n    return isCollapsable\n      ? getAttributesByModel(component, components, attributePermissionName)\n      : [attribute];\n  }, [components, isCollapsable, attributePermissionName, attribute]);\n\n  const getRecursiveAttributesPermissions = useCallback(\n    action => {\n      const number = getNumberOfRecursivePermissionsByAction(\n        contentTypeUid,\n        action,\n        isCollapsable ? `${attributePermissionName}.` : attributePermissionName,\n        contentTypesPermissions\n      );\n\n      return number;\n    },\n    [attributePermissionName, contentTypeUid, isCollapsable, contentTypesPermissions]\n  );\n\n  const checkPermission = useCallback(\n    action => {\n      return attributeActions.findIndex(permAction => permAction === action) !== -1;\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [contentTypesPermissions, attribute]\n  );\n\n  const attributesToDisplay = useMemo(() => {\n    return getAttributesToDisplay(components.find(comp => comp.uid === attribute.component));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [attribute]);\n\n  const handleToggleAttributes = () => {\n    if (isCollapsable) {\n      dispatch({\n        type: 'COLLAPSE_PATH',\n        index: recursiveLevel + 2,\n        value: attribute.attributeName,\n      });\n    }\n  };\n\n  const someChecked = action => {\n    const recursivePermissions = getRecursiveAttributesPermissions(action);\n\n    return (\n      isCollapsable && recursivePermissions > 0 && recursivePermissions < recursiveAttributes.length\n    );\n  };\n\n  const allRecursiveChecked = action => {\n    const recursivePermissions = getRecursiveAttributesPermissions(action);\n\n    return isCollapsable && recursivePermissions === recursiveAttributes.length;\n  };\n\n  return (\n    <LeftBorderTimeline isVisible={index + 1 < numberOfAttributes}>\n      <AttributeRowWrapper isSmall={attribute.component || index + 1 === numberOfAttributes}>\n        <Curve fill=\"#a5d5ff\" />\n        <Flex style={{ flex: 1 }}>\n          <RowStyle\n            isActive={isActive}\n            isCollapsable={attribute.component}\n            isRequired={attribute.required && !isCollapsable}\n            level={recursiveLevel}\n          >\n            <CollapseLabel\n              alignItems=\"center\"\n              isCollapsable={attribute.component}\n              onClick={handleToggleAttributes}\n              title={attribute.attributeName}\n            >\n              <Text\n                color={isActive ? 'mediumBlue' : 'grey'}\n                ellipsis\n                fontSize=\"xs\"\n                fontWeight=\"bold\"\n                lineHeight=\"20px\"\n                textTransform=\"uppercase\"\n              >\n                {attribute.attributeName}\n              </Text>\n              {attribute.required && <Required>*</Required>}\n              <Chevron icon={isActive ? 'caret-up' : 'caret-down'} />\n            </CollapseLabel>\n          </RowStyle>\n          <PermissionWrapper disabled>\n            {ATTRIBUTES_PERMISSIONS_ACTIONS.map(action => (\n              <PermissionCheckbox\n                disabled\n                key={`${attribute.attributeName}-${action}`}\n                someChecked={someChecked(`${CONTENT_MANAGER_PREFIX}.${action}`)}\n                value={\n                  attribute.required ||\n                  allRecursiveChecked(`${CONTENT_MANAGER_PREFIX}.${action}`) ||\n                  checkPermission(`${CONTENT_MANAGER_PREFIX}.${action}`)\n                }\n                name={`${attribute.attributeName}-${action}`}\n              />\n            ))}\n          </PermissionWrapper>\n        </Flex>\n      </AttributeRowWrapper>\n      {isActive && isCollapsable && (\n        <SubLevelWrapper>\n          <ComponentsAttributes\n            recursiveLevel={recursiveLevel + 1}\n            attributes={attributesToDisplay}\n          />\n        </SubLevelWrapper>\n      )}\n    </LeftBorderTimeline>\n  );\n};\n\nComponentAttributeRow.propTypes = {\n  attribute: PropTypes.object.isRequired,\n  index: PropTypes.number.isRequired,\n  numberOfAttributes: PropTypes.number.isRequired,\n  recursiveLevel: PropTypes.number.isRequired,\n};\nexport default ComponentAttributeRow;\n"]},"metadata":{},"sourceType":"script"}