{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.initialState = void 0;\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _immer = _interopRequireWildcard(require(\"immer\"));\n\nvar _lodash = require(\"lodash\");\n\nvar _utils = require(\"./utils\");\n\n/* eslint-disable indent */\n\n/* eslint-disable consistent-return */\nvar initialState = {\n  collapsePath: [],\n  permissionsLayout: {},\n  contentTypesPermissions: {},\n  pluginsAndSettingsPermissions: [],\n  initialData: {},\n  isSuperAdmin: false\n}; // This is the community edition RBAC reducer\n\nexports.initialState = initialState;\n\nvar reducer = function reducer(state, action) {\n  return (0, _immer[\"default\"])(state, function (draftState) {\n    switch (action.type) {\n      case 'COLLAPSE_PATH':\n        {\n          var index = action.index,\n              value = action.value;\n\n          if (state.collapsePath[index] === value) {\n            draftState.collapsePath = state.collapsePath.slice().splice(0, index);\n          } else {\n            draftState.collapsePath = [].concat((0, _toConsumableArray2[\"default\"])(state.collapsePath.slice().splice(0, index)), [value]);\n          }\n\n          break;\n        }\n      // This reducer action is used to enable/disable a single attribute action\n\n      case 'ALL_ATTRIBUTE_ACTIONS_SELECT':\n        {\n          var subject = action.subject,\n              attribute = action.attribute,\n              shouldEnable = action.shouldEnable;\n          var attributePath = ['contentTypesPermissions', subject, 'attributes', attribute.attributeName, 'actions'];\n          var contentTypeActionPath = ['contentTypesPermissions', subject, 'contentTypeActions'];\n\n          if (shouldEnable) {\n            var shouldSetContentTypeActions = Object.values((0, _lodash.get)(state, contentTypeActionPath, {})).filter(Boolean).length === 0;\n            var contentTypeActionToSet = (0, _lodash.get)(state.permissionsLayout, ['sections', 'contentTypes'], []).filter(function (_ref) {\n              var subjects = _ref.subjects,\n                  action = _ref.action;\n              return subjects.includes(subject) && !(0, _utils.isAttributeAction)(action);\n            }).map(function (contentTypeAction) {\n              return contentTypeAction.action;\n            });\n\n            if (shouldSetContentTypeActions) {\n              contentTypeActionToSet.forEach(function (action) {\n                (0, _lodash.set)(draftState, [].concat(contentTypeActionPath, [action]), true);\n              });\n            }\n\n            (0, _lodash.set)(draftState, attributePath, _utils.STATIC_ATTRIBUTE_ACTIONS);\n          } else {\n            (0, _lodash.set)(draftState, attributePath, []);\n            var permissionsCount = (0, _utils.getRecursivePermissionsBySubject)(subject, (0, _immer.current)(draftState).contentTypesPermissions);\n\n            if (permissionsCount === 0) {\n              (0, _lodash.set)(draftState, ['contentTypesPermissions', subject, 'contentTypeActions'], {});\n            }\n          }\n\n          break;\n        }\n      // This reducer action is used to enable/disable all\n      // content type attributes actions recursively\n\n      case 'ALL_CONTENT_TYPE_PERMISSIONS_SELECT':\n        {\n          var _subject = action.subject,\n              attributes = action.attributes,\n              _shouldEnable = action.shouldEnable,\n              shouldSetAllContentTypes = action.shouldSetAllContentTypes;\n          var _contentTypeActionPath = ['contentTypesPermissions', _subject, 'contentTypeActions'];\n\n          var _shouldSetContentTypeActions = Object.values((0, _lodash.get)(state, _contentTypeActionPath, {})).filter(Boolean).length === 0;\n\n          var staticActionsName = (0, _lodash.get)(state.permissionsLayout, ['sections', 'contentTypes'], []).filter(function (_ref2) {\n            var subjects = _ref2.subjects,\n                action = _ref2.action;\n            return subjects.includes(_subject) && !(0, _utils.isAttributeAction)(action);\n          }).map(function (contentTypeAction) {\n            return contentTypeAction.action;\n          });\n          attributes.forEach(function (attribute) {\n            (0, _lodash.set)(draftState, ['contentTypesPermissions', _subject, 'attributes', attribute.attributeName, 'actions'], _shouldEnable ? _utils.STATIC_ATTRIBUTE_ACTIONS : []);\n          });\n\n          if (shouldSetAllContentTypes || _shouldSetContentTypeActions) {\n            staticActionsName.forEach(function (action) {\n              (0, _lodash.set)(draftState, ['contentTypesPermissions', _subject, 'contentTypeActions', action], _shouldEnable);\n            });\n          }\n\n          var _permissionsCount = (0, _utils.getRecursivePermissionsBySubject)(_subject, (0, _immer.current)(draftState).contentTypesPermissions);\n\n          if (_permissionsCount === 0) {\n            (0, _lodash.set)(draftState, ['contentTypesPermissions', _subject, 'contentTypeActions'], {});\n          }\n\n          break;\n        }\n\n      case 'SELECT_MULTIPLE_ATTRIBUTE':\n        {\n          var _attributes = action.attributes,\n              _subject2 = action.subject;\n\n          _attributes.forEach(function (attribute) {\n            var attributeActionPath = ['contentTypesPermissions', _subject2, 'attributes', attribute.attributeName, 'actions'];\n            (0, _lodash.set)(draftState, attributeActionPath, _utils.STATIC_ATTRIBUTE_ACTIONS);\n          });\n\n          break;\n        }\n\n      case 'ON_RESET':\n        {\n          var initialPermissions = action.initialPermissions;\n          draftState.contentTypesPermissions = initialPermissions.contentTypesPermissions;\n          draftState.pluginsAndSettingsPermissions = initialPermissions.pluginsAndSettingsPermissions;\n          break;\n        }\n\n      default:\n        return draftState;\n    }\n  });\n};\n\nvar _default = reducer;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["D:/webstorm_projects/redcat_backend/.cache/admin/src/components/Roles/Permissions/reducer.js"],"names":["initialState","collapsePath","permissionsLayout","contentTypesPermissions","pluginsAndSettingsPermissions","initialData","isSuperAdmin","reducer","state","action","draftState","type","index","value","slice","splice","subject","attribute","shouldEnable","attributePath","attributeName","contentTypeActionPath","shouldSetContentTypeActions","Object","values","filter","Boolean","length","contentTypeActionToSet","subjects","includes","map","contentTypeAction","forEach","STATIC_ATTRIBUTE_ACTIONS","permissionsCount","attributes","shouldSetAllContentTypes","staticActionsName","attributeActionPath","initialPermissions"],"mappings":"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","sourcesContent":["/* eslint-disable indent */\n/* eslint-disable consistent-return */\nimport produce, { current } from 'immer';\nimport { get, set } from 'lodash';\n\nimport {\n  getRecursivePermissionsBySubject,\n  isAttributeAction,\n  STATIC_ATTRIBUTE_ACTIONS,\n} from './utils';\n\nexport const initialState = {\n  collapsePath: [],\n  permissionsLayout: {},\n  contentTypesPermissions: {},\n  pluginsAndSettingsPermissions: [],\n  initialData: {},\n  isSuperAdmin: false,\n};\n\n// This is the community edition RBAC reducer\nconst reducer = (state, action) =>\n  produce(state, draftState => {\n    switch (action.type) {\n      case 'COLLAPSE_PATH': {\n        const { index, value } = action;\n\n        if (state.collapsePath[index] === value) {\n          draftState.collapsePath = state.collapsePath.slice().splice(0, index);\n        } else {\n          draftState.collapsePath = [...state.collapsePath.slice().splice(0, index), value];\n        }\n        break;\n      }\n      // This reducer action is used to enable/disable a single attribute action\n      case 'ALL_ATTRIBUTE_ACTIONS_SELECT': {\n        const { subject, attribute, shouldEnable } = action;\n        const attributePath = [\n          'contentTypesPermissions',\n          subject,\n          'attributes',\n          attribute.attributeName,\n          'actions',\n        ];\n        const contentTypeActionPath = ['contentTypesPermissions', subject, 'contentTypeActions'];\n\n        if (shouldEnable) {\n          const shouldSetContentTypeActions =\n            Object.values(get(state, contentTypeActionPath, {})).filter(Boolean).length === 0;\n          const contentTypeActionToSet = get(\n            state.permissionsLayout,\n            ['sections', 'contentTypes'],\n            []\n          )\n            .filter(\n              ({ subjects, action }) => subjects.includes(subject) && !isAttributeAction(action)\n            )\n            .map(contentTypeAction => contentTypeAction.action);\n\n          if (shouldSetContentTypeActions) {\n            contentTypeActionToSet.forEach(action => {\n              set(draftState, [...contentTypeActionPath, action], true);\n            });\n          }\n          set(draftState, attributePath, STATIC_ATTRIBUTE_ACTIONS);\n        } else {\n          set(draftState, attributePath, []);\n          const permissionsCount = getRecursivePermissionsBySubject(\n            subject,\n            current(draftState).contentTypesPermissions\n          );\n\n          if (permissionsCount === 0) {\n            set(draftState, ['contentTypesPermissions', subject, 'contentTypeActions'], {});\n          }\n        }\n\n        break;\n      }\n      // This reducer action is used to enable/disable all\n      // content type attributes actions recursively\n      case 'ALL_CONTENT_TYPE_PERMISSIONS_SELECT': {\n        const { subject, attributes, shouldEnable, shouldSetAllContentTypes } = action;\n        const contentTypeActionPath = ['contentTypesPermissions', subject, 'contentTypeActions'];\n        const shouldSetContentTypeActions =\n          Object.values(get(state, contentTypeActionPath, {})).filter(Boolean).length === 0;\n\n        const staticActionsName = get(state.permissionsLayout, ['sections', 'contentTypes'], [])\n          .filter(\n            ({ subjects, action }) => subjects.includes(subject) && !isAttributeAction(action)\n          )\n          .map(contentTypeAction => contentTypeAction.action);\n\n        attributes.forEach(attribute => {\n          set(\n            draftState,\n            ['contentTypesPermissions', subject, 'attributes', attribute.attributeName, 'actions'],\n            shouldEnable ? STATIC_ATTRIBUTE_ACTIONS : []\n          );\n        });\n\n        if (shouldSetAllContentTypes || shouldSetContentTypeActions) {\n          staticActionsName.forEach(action => {\n            set(\n              draftState,\n              ['contentTypesPermissions', subject, 'contentTypeActions', action],\n              shouldEnable\n            );\n          });\n        }\n\n        const permissionsCount = getRecursivePermissionsBySubject(\n          subject,\n          current(draftState).contentTypesPermissions\n        );\n\n        if (permissionsCount === 0) {\n          set(draftState, ['contentTypesPermissions', subject, 'contentTypeActions'], {});\n        }\n\n        break;\n      }\n\n      case 'SELECT_MULTIPLE_ATTRIBUTE': {\n        const { attributes, subject } = action;\n\n        attributes.forEach(attribute => {\n          const attributeActionPath = [\n            'contentTypesPermissions',\n            subject,\n            'attributes',\n            attribute.attributeName,\n            'actions',\n          ];\n\n          set(draftState, attributeActionPath, STATIC_ATTRIBUTE_ACTIONS);\n        });\n        break;\n      }\n      case 'ON_RESET': {\n        const { initialPermissions } = action;\n        draftState.contentTypesPermissions = initialPermissions.contentTypesPermissions;\n        draftState.pluginsAndSettingsPermissions = initialPermissions.pluginsAndSettingsPermissions;\n        break;\n      }\n      default:\n        return draftState;\n    }\n  });\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"script"}