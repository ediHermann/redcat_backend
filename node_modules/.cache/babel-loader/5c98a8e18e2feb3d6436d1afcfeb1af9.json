{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _taggedTemplateLiteral2 = _interopRequireDefault(require(\"@babel/runtime/helpers/taggedTemplateLiteral\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _styledComponents = _interopRequireDefault(require(\"styled-components\"));\n\nvar _reactSelect = _interopRequireDefault(require(\"react-select\"));\n\nvar _reactIntl = require(\"react-intl\");\n\nvar _lodash = require(\"lodash\");\n\nvar _MenuList = _interopRequireDefault(require(\"ee_else_ce/components/Roles/ConditionsSelect/MenuList\"));\n\nvar _ClearIndicator = _interopRequireDefault(require(\"./ClearIndicator\"));\n\nvar _CustomDropdownIndicator = _interopRequireDefault(require(\"./CustomDropdownIndicator\"));\n\nvar _IndicatorSeparator = _interopRequireDefault(require(\"./IndicatorSeparator\"));\n\nvar _hooks = require(\"../../../hooks\");\n\nvar _SingleValue = _interopRequireDefault(require(\"./SingleValue\"));\n\nvar _selectStyle = _interopRequireDefault(require(\"./selectStyle\"));\n\nvar _templateObject;\n\nvar Wrapper = _styledComponents[\"default\"].div(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2[\"default\"])([\"\\n  padding-left: 30px;\\n  width: 60%;\\n  cursor: \", \";\\n\"])), function (_ref) {\n  var disabled = _ref.disabled;\n  return disabled ? 'not-allowed' : 'default';\n});\n\nvar ConditionsSelect = function ConditionsSelect(_ref2) {\n  var onChange = _ref2.onChange,\n      value = _ref2.value;\n\n  var _usePermissionsContex = (0, _hooks.usePermissionsContext)(),\n      isSuperAdmin = _usePermissionsContex.isSuperAdmin,\n      permissionsLayout = _usePermissionsContex.permissionsLayout;\n\n  var _useIntl = (0, _reactIntl.useIntl)(),\n      formatMessage = _useIntl.formatMessage;\n\n  var handleChange = function handleChange(action) {\n    var hasValue = value.findIndex(function (option) {\n      return option === action;\n    }) !== -1;\n\n    if (hasValue) {\n      onChange(value.filter(function (val) {\n        return val !== action;\n      }));\n    } else {\n      onChange([].concat((0, _toConsumableArray2[\"default\"])(value), [action]));\n    }\n  };\n\n  var handleCategoryChange = function handleCategoryChange(categoryActions) {\n    var missingActions = (0, _lodash.intersectionWith)(value, categoryActions, function (val, catAction) {\n      return val === catAction;\n    });\n    var hasAllValue = missingActions.length === categoryActions.length;\n\n    if (hasAllValue) {\n      onChange((0, _lodash.differenceWith)(value, categoryActions, function (val, catAction) {\n        return val === catAction;\n      }));\n    } else {\n      onChange([].concat((0, _toConsumableArray2[\"default\"])((0, _lodash.differenceWith)(value, categoryActions, function (val, catAction) {\n        return val === catAction;\n      })), (0, _toConsumableArray2[\"default\"])(categoryActions)));\n    }\n  };\n\n  return /*#__PURE__*/_react[\"default\"].createElement(Wrapper, {\n    disabled: isSuperAdmin\n  }, /*#__PURE__*/_react[\"default\"].createElement(_reactSelect[\"default\"], {\n    components: {\n      ClearIndicator: _ClearIndicator[\"default\"],\n      DropdownIndicator: _CustomDropdownIndicator[\"default\"],\n      IndicatorSeparator: _IndicatorSeparator[\"default\"],\n      SingleValue: _SingleValue[\"default\"],\n      MenuList: _MenuList[\"default\"]\n    },\n    isDisabled: isSuperAdmin,\n    onChange: handleChange,\n    isClearable: false,\n    isLoading: false,\n    closeMenuOnSelect: false,\n    isSearchable: false,\n    hideSelectedOptions: false,\n    placeholder: formatMessage({\n      id: 'Settings.permissions.conditions.anytime'\n    }),\n    onCategoryChange: handleCategoryChange,\n    options: permissionsLayout.conditions,\n    styles: _selectStyle[\"default\"],\n    value: value\n  }));\n};\n\nConditionsSelect.defaultProps = {\n  value: null\n};\nConditionsSelect.propTypes = {\n  onChange: _propTypes[\"default\"].func.isRequired,\n  value: _propTypes[\"default\"].array\n};\nvar _default = ConditionsSelect;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["D:/webstorm_projects/redcat_backend/.cache/admin/src/components/Roles/ConditionsSelect/index.js"],"names":["Wrapper","styled","div","disabled","ConditionsSelect","onChange","value","isSuperAdmin","permissionsLayout","formatMessage","handleChange","action","hasValue","findIndex","option","filter","val","handleCategoryChange","categoryActions","missingActions","catAction","hasAllValue","length","ClearIndicator","DropdownIndicator","IndicatorSeparator","SingleValue","MenuList","id","conditions","selectStyle","defaultProps","propTypes","PropTypes","func","isRequired","array"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Select from 'react-select';\nimport { useIntl } from 'react-intl';\nimport { intersectionWith, differenceWith } from 'lodash';\nimport MenuList from 'ee_else_ce/components/Roles/ConditionsSelect/MenuList';\nimport ClearIndicator from './ClearIndicator';\nimport DropdownIndicator from './CustomDropdownIndicator';\nimport IndicatorSeparator from './IndicatorSeparator';\n\nimport { usePermissionsContext } from '../../../hooks';\nimport SingleValue from './SingleValue';\nimport selectStyle from './selectStyle';\n\nconst Wrapper = styled.div`\n  padding-left: 30px;\n  width: 60%;\n  cursor: ${({ disabled }) => (disabled ? 'not-allowed' : 'default')};\n`;\n\nconst ConditionsSelect = ({ onChange, value }) => {\n  const { isSuperAdmin, permissionsLayout } = usePermissionsContext();\n  const { formatMessage } = useIntl();\n\n  const handleChange = action => {\n    const hasValue = value.findIndex(option => option === action) !== -1;\n\n    if (hasValue) {\n      onChange(value.filter(val => val !== action));\n    } else {\n      onChange([...value, action]);\n    }\n  };\n\n  const handleCategoryChange = categoryActions => {\n    const missingActions = intersectionWith(\n      value,\n      categoryActions,\n      (val, catAction) => val === catAction\n    );\n    const hasAllValue = missingActions.length === categoryActions.length;\n\n    if (hasAllValue) {\n      onChange(differenceWith(value, categoryActions, (val, catAction) => val === catAction));\n    } else {\n      onChange([\n        ...differenceWith(value, categoryActions, (val, catAction) => val === catAction),\n        ...categoryActions,\n      ]);\n    }\n  };\n\n  return (\n    <Wrapper disabled={isSuperAdmin}>\n      <Select\n        components={{\n          ClearIndicator,\n          DropdownIndicator,\n          IndicatorSeparator,\n          SingleValue,\n          MenuList,\n        }}\n        isDisabled={isSuperAdmin}\n        onChange={handleChange}\n        isClearable={false}\n        isLoading={false}\n        closeMenuOnSelect={false}\n        isSearchable={false}\n        hideSelectedOptions={false}\n        placeholder={formatMessage({ id: 'Settings.permissions.conditions.anytime' })}\n        onCategoryChange={handleCategoryChange}\n        options={permissionsLayout.conditions}\n        styles={selectStyle}\n        value={value}\n      />\n    </Wrapper>\n  );\n};\n\nConditionsSelect.defaultProps = {\n  value: null,\n};\n\nConditionsSelect.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  value: PropTypes.array,\n};\n\nexport default ConditionsSelect;\n"]},"metadata":{},"sourceType":"script"}