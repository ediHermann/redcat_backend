{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _lodash = require(\"lodash\");\n\nvar getPermissionsCountByAction = function getPermissionsCountByAction(contentTypes, contentTypesPermissions, action) {\n  var count = contentTypes.reduce(function (contentTypeAcc, currentContentType) {\n    var attributeCount = Object.values((0, _lodash.get)(contentTypesPermissions, [currentContentType.uid, 'attributes'], [])).reduce(function (attributeAcc, currentAttribute) {\n      return attributeAcc + (0, _lodash.get)(currentAttribute, 'actions', []).filter(function (permAction) {\n        return permAction === action;\n      }).length;\n    }, 0);\n    return contentTypeAcc + attributeCount;\n  }, 0);\n  return count;\n};\n\nvar _default = getPermissionsCountByAction;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["D:/webstorm_projects/redcat_backend/.cache/admin/src/components/Roles/Permissions/utils/getPermissionsCountByAction.js"],"names":["getPermissionsCountByAction","contentTypes","contentTypesPermissions","action","count","reduce","contentTypeAcc","currentContentType","attributeCount","Object","values","uid","attributeAcc","currentAttribute","filter","permAction","length"],"mappings":";;;;;;;AAAA;;AAEA,IAAMA,2BAA2B,GAAG,SAA9BA,2BAA8B,CAACC,YAAD,EAAeC,uBAAf,EAAwCC,MAAxC,EAAmD;AACrF,MAAMC,KAAK,GAAGH,YAAY,CAACI,MAAb,CAAoB,UAACC,cAAD,EAAiBC,kBAAjB,EAAwC;AACxE,QAAMC,cAAc,GAAGC,MAAM,CAACC,MAAP,CACrB,iBAAIR,uBAAJ,EAA6B,CAACK,kBAAkB,CAACI,GAApB,EAAyB,YAAzB,CAA7B,EAAqE,EAArE,CADqB,EAErBN,MAFqB,CAEd,UAACO,YAAD,EAAeC,gBAAf,EAAoC;AAC3C,aACED,YAAY,GACZ,iBAAIC,gBAAJ,EAAsB,SAAtB,EAAiC,EAAjC,EAAqCC,MAArC,CAA4C,UAAAC,UAAU;AAAA,eAAIA,UAAU,KAAKZ,MAAnB;AAAA,OAAtD,EAAiFa,MAFnF;AAID,KAPsB,EAOpB,CAPoB,CAAvB;AASA,WAAOV,cAAc,GAAGE,cAAxB;AACD,GAXa,EAWX,CAXW,CAAd;AAaA,SAAOJ,KAAP;AACD,CAfD;;eAiBeJ,2B","sourcesContent":["import { get } from 'lodash';\n\nconst getPermissionsCountByAction = (contentTypes, contentTypesPermissions, action) => {\n  const count = contentTypes.reduce((contentTypeAcc, currentContentType) => {\n    const attributeCount = Object.values(\n      get(contentTypesPermissions, [currentContentType.uid, 'attributes'], [])\n    ).reduce((attributeAcc, currentAttribute) => {\n      return (\n        attributeAcc +\n        get(currentAttribute, 'actions', []).filter(permAction => permAction === action).length\n      );\n    }, 0);\n\n    return contentTypeAcc + attributeCount;\n  }, 0);\n\n  return count;\n};\n\nexport default getPermissionsCountByAction;\n"]},"metadata":{},"sourceType":"script"}