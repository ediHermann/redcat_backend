{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _lodash = require(\"lodash\");\n\nvar getRecursivePermissions = function getRecursivePermissions(subject, attributeName, contentTypesPermissions) {\n  return Object.entries((0, _lodash.get)(contentTypesPermissions, [subject, 'attributes'], {})).reduce(function (acc, current) {\n    var shouldAddActions = current[0].includes('.') ? current[0].startsWith(\"\".concat(attributeName, \".\")) : current[0] === attributeName;\n\n    if (shouldAddActions) {\n      return acc + current[1].actions.length;\n    }\n\n    return acc;\n  }, 0);\n};\n\nvar _default = getRecursivePermissions;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["D:/webstorm_projects/redcat_backend/.cache/admin/src/components/Roles/Permissions/utils/getRecursivePermissions.js"],"names":["getRecursivePermissions","subject","attributeName","contentTypesPermissions","Object","entries","reduce","acc","current","shouldAddActions","includes","startsWith","actions","length"],"mappings":";;;;;;;AAAA;;AAEA,IAAMA,uBAAuB,GAAG,SAA1BA,uBAA0B,CAACC,OAAD,EAAUC,aAAV,EAAyBC,uBAAzB,EAAqD;AACnF,SAAOC,MAAM,CAACC,OAAP,CAAe,iBAAIF,uBAAJ,EAA6B,CAACF,OAAD,EAAU,YAAV,CAA7B,EAAsD,EAAtD,CAAf,EAA0EK,MAA1E,CACL,UAACC,GAAD,EAAMC,OAAN,EAAkB;AAChB,QAAMC,gBAAgB,GAAGD,OAAO,CAAC,CAAD,CAAP,CAAWE,QAAX,CAAoB,GAApB,IACrBF,OAAO,CAAC,CAAD,CAAP,CAAWG,UAAX,WAAyBT,aAAzB,OADqB,GAErBM,OAAO,CAAC,CAAD,CAAP,KAAeN,aAFnB;;AAIA,QAAIO,gBAAJ,EAAsB;AACpB,aAAOF,GAAG,GAAGC,OAAO,CAAC,CAAD,CAAP,CAAWI,OAAX,CAAmBC,MAAhC;AACD;;AAED,WAAON,GAAP;AACD,GAXI,EAYL,CAZK,CAAP;AAcD,CAfD;;eAiBeP,uB","sourcesContent":["import { get } from 'lodash';\n\nconst getRecursivePermissions = (subject, attributeName, contentTypesPermissions) => {\n  return Object.entries(get(contentTypesPermissions, [subject, 'attributes'], {})).reduce(\n    (acc, current) => {\n      const shouldAddActions = current[0].includes('.')\n        ? current[0].startsWith(`${attributeName}.`)\n        : current[0] === attributeName;\n\n      if (shouldAddActions) {\n        return acc + current[1].actions.length;\n      }\n\n      return acc;\n    },\n    0\n  );\n};\n\nexport default getRecursivePermissions;\n"]},"metadata":{},"sourceType":"script"}