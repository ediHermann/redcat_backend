{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.EditView = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _lodash = require(\"lodash\");\n\nvar _strapiHelperPlugin = require(\"strapi-helper-plugin\");\n\nvar _core = require(\"@buffetjs/core\");\n\nvar _pluginId = _interopRequireDefault(require(\"../../pluginId\"));\n\nvar _permissions = _interopRequireDefault(require(\"../../permissions\"));\n\nvar _Container = _interopRequireDefault(require(\"../../components/Container\"));\n\nvar _DynamicZone = _interopRequireDefault(require(\"../../components/DynamicZone\"));\n\nvar _FormWrapper = _interopRequireDefault(require(\"../../components/FormWrapper\"));\n\nvar _FieldComponent = _interopRequireDefault(require(\"../../components/FieldComponent\"));\n\nvar _Inputs = _interopRequireDefault(require(\"../../components/Inputs\"));\n\nvar _SelectWrapper = _interopRequireDefault(require(\"../../components/SelectWrapper\"));\n\nvar _utils = require(\"../../utils\");\n\nvar _CollectionTypeFormWrapper = _interopRequireDefault(require(\"../CollectionTypeFormWrapper\"));\n\nvar _EditViewDataManagerProvider = _interopRequireDefault(require(\"../EditViewDataManagerProvider\"));\n\nvar _SingleTypeFormWrapper = _interopRequireDefault(require(\"../SingleTypeFormWrapper\"));\n\nvar _Header = _interopRequireDefault(require(\"./Header\"));\n\nvar _utils2 = require(\"./utils\");\n\nvar _components = require(\"./components\");\n\nvar _DeleteLink = _interopRequireDefault(require(\"./DeleteLink\"));\n\nvar _InformationCard = _interopRequireDefault(require(\"./InformationCard\"));\n\n/* eslint-disable  react/no-array-index-key */\nvar EditView = function EditView(_ref) {\n  var isSingleType = _ref.isSingleType,\n      goBack = _ref.goBack,\n      layout = _ref.layout,\n      slug = _ref.slug,\n      state = _ref.state,\n      id = _ref.id,\n      origin = _ref.origin;\n\n  var _useGlobalContext = (0, _strapiHelperPlugin.useGlobalContext)(),\n      currentEnvironment = _useGlobalContext.currentEnvironment,\n      plugins = _useGlobalContext.plugins; // Permissions\n\n\n  var viewPermissions = (0, _react.useMemo)(function () {\n    return (0, _utils.generatePermissionsObject)(slug);\n  }, [slug]);\n\n  var _useUserPermissions = (0, _strapiHelperPlugin.useUserPermissions)(viewPermissions),\n      allowedActions = _useUserPermissions.allowedActions,\n      isLoadingForPermissions = _useUserPermissions.isLoading;\n\n  var userPermissions = (0, _strapiHelperPlugin.useUser)(); // Here in case of a 403 response when fetching data we will either redirect to the previous page\n  // Or to the homepage if there's no state in the history stack\n\n  var from = (0, _lodash.get)(state, 'from', '/');\n\n  var _useMemo = (0, _react.useMemo)(function () {\n    return (0, _utils2.getFieldsActionMatchingPermissions)(userPermissions, slug);\n  }, [userPermissions, slug]),\n      createActionAllowedFields = _useMemo.createActionAllowedFields,\n      readActionAllowedFields = _useMemo.readActionAllowedFields,\n      updateActionAllowedFields = _useMemo.updateActionAllowedFields;\n\n  var configurationPermissions = (0, _react.useMemo)(function () {\n    return isSingleType ? _permissions[\"default\"].singleTypesConfigurations : _permissions[\"default\"].collectionTypesConfigurations;\n  }, [isSingleType]);\n  var configurationsURL = \"/plugins/\".concat(_pluginId[\"default\"], \"/\").concat(isSingleType ? 'singleType' : 'collectionType', \"/\").concat(slug, \"/configurations/edit\");\n  var currentContentTypeLayoutData = (0, _react.useMemo)(function () {\n    return (0, _lodash.get)(layout, ['contentType'], {});\n  }, [layout]);\n  var DataManagementWrapper = (0, _react.useMemo)(function () {\n    return isSingleType ? _SingleTypeFormWrapper[\"default\"] : _CollectionTypeFormWrapper[\"default\"];\n  }, [isSingleType]); // Check if a block is a dynamic zone\n\n  var isDynamicZone = (0, _react.useCallback)(function (block) {\n    return block.every(function (subBlock) {\n      return subBlock.every(function (obj) {\n        return obj.fieldSchema.type === 'dynamiczone';\n      });\n    });\n  }, []);\n  var formattedContentTypeLayout = (0, _react.useMemo)(function () {\n    if (!currentContentTypeLayoutData.layouts) {\n      return [];\n    }\n\n    return (0, _utils2.createAttributesLayout)(currentContentTypeLayoutData.layouts.edit, currentContentTypeLayoutData.attributes);\n  }, [currentContentTypeLayoutData]);\n\n  if (isLoadingForPermissions) {\n    return /*#__PURE__*/_react[\"default\"].createElement(_strapiHelperPlugin.LoadingIndicatorPage, null);\n  } // TODO: create a hook to handle/provide the permissions this should be done for the i18n feature\n\n\n  return /*#__PURE__*/_react[\"default\"].createElement(DataManagementWrapper, {\n    allLayoutData: layout,\n    from: from,\n    slug: slug,\n    id: id,\n    origin: origin\n  }, function (_ref2) {\n    var componentsDataStructure = _ref2.componentsDataStructure,\n        contentTypeDataStructure = _ref2.contentTypeDataStructure,\n        data = _ref2.data,\n        isCreatingEntry = _ref2.isCreatingEntry,\n        isLoadingForData = _ref2.isLoadingForData,\n        onDelete = _ref2.onDelete,\n        onDeleteSucceeded = _ref2.onDeleteSucceeded,\n        onPost = _ref2.onPost,\n        onPublish = _ref2.onPublish,\n        onPut = _ref2.onPut,\n        onUnpublish = _ref2.onUnpublish,\n        status = _ref2.status;\n    return /*#__PURE__*/_react[\"default\"].createElement(_EditViewDataManagerProvider[\"default\"], {\n      allowedActions: allowedActions,\n      allLayoutData: layout,\n      createActionAllowedFields: createActionAllowedFields,\n      componentsDataStructure: componentsDataStructure,\n      contentTypeDataStructure: contentTypeDataStructure,\n      from: from,\n      initialValues: data,\n      isCreatingEntry: isCreatingEntry,\n      isLoadingForData: isLoadingForData,\n      isSingleType: isSingleType,\n      onPost: onPost,\n      onPublish: onPublish,\n      onPut: onPut,\n      onUnpublish: onUnpublish,\n      readActionAllowedFields: readActionAllowedFields,\n      redirectToPreviousPage: goBack,\n      slug: slug,\n      status: status,\n      updateActionAllowedFields: updateActionAllowedFields\n    }, /*#__PURE__*/_react[\"default\"].createElement(_strapiHelperPlugin.BackHeader, {\n      onClick: goBack\n    }), /*#__PURE__*/_react[\"default\"].createElement(_Container[\"default\"], {\n      className: \"container-fluid\"\n    }, /*#__PURE__*/_react[\"default\"].createElement(_Header[\"default\"], {\n      allowedActions: allowedActions\n    }), /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n      className: \"row\",\n      style: {\n        paddingTop: 3\n      }\n    }, /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n      className: \"col-md-12 col-lg-9\",\n      style: {\n        marginBottom: 13\n      }\n    }, formattedContentTypeLayout.map(function (block, blockIndex) {\n      if (isDynamicZone(block)) {\n        var _block$0$ = block[0][0],\n            name = _block$0$.name,\n            fieldSchema = _block$0$.fieldSchema,\n            metadatas = _block$0$.metadatas;\n        var baselineAlignementSize = blockIndex === 0 ? '3px' : '0';\n        return /*#__PURE__*/_react[\"default\"].createElement(_strapiHelperPlugin.BaselineAlignment, {\n          key: blockIndex,\n          top: true,\n          size: baselineAlignementSize\n        }, /*#__PURE__*/_react[\"default\"].createElement(_DynamicZone[\"default\"], {\n          name: name,\n          fieldSchema: fieldSchema,\n          metadatas: metadatas\n        }));\n      }\n\n      return /*#__PURE__*/_react[\"default\"].createElement(_FormWrapper[\"default\"], {\n        key: blockIndex\n      }, block.map(function (fieldsBlock, fieldsBlockIndex) {\n        return /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n          className: \"row\",\n          key: fieldsBlockIndex\n        }, fieldsBlock.map(function (_ref3, fieldIndex) {\n          var name = _ref3.name,\n              size = _ref3.size,\n              fieldSchema = _ref3.fieldSchema,\n              metadatas = _ref3.metadatas;\n          var isComponent = fieldSchema.type === 'component';\n\n          if (isComponent) {\n            var component = fieldSchema.component,\n                max = fieldSchema.max,\n                min = fieldSchema.min,\n                _fieldSchema$repeatab = fieldSchema.repeatable,\n                repeatable = _fieldSchema$repeatab === void 0 ? false : _fieldSchema$repeatab;\n            var componentUid = fieldSchema.component;\n            return /*#__PURE__*/_react[\"default\"].createElement(_FieldComponent[\"default\"], {\n              key: componentUid,\n              componentUid: component,\n              isRepeatable: repeatable,\n              label: metadatas.label,\n              max: max,\n              min: min,\n              name: name\n            });\n          }\n\n          return /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n            className: \"col-\".concat(size),\n            key: name\n          }, /*#__PURE__*/_react[\"default\"].createElement(_Inputs[\"default\"], {\n            autoFocus: blockIndex === 0 && fieldsBlockIndex === 0 && fieldIndex === 0,\n            fieldSchema: fieldSchema,\n            keys: name,\n            metadatas: metadatas\n          }));\n        }));\n      }));\n    })), /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n      className: \"col-md-12 col-lg-3\"\n    }, /*#__PURE__*/_react[\"default\"].createElement(_InformationCard[\"default\"], null), /*#__PURE__*/_react[\"default\"].createElement(_core.Padded, {\n      size: \"smd\",\n      top: true\n    }), currentContentTypeLayoutData.layouts.editRelations.length > 0 && /*#__PURE__*/_react[\"default\"].createElement(_components.SubWrapper, {\n      style: {\n        padding: '0 20px 1px',\n        marginBottom: '25px'\n      }\n    }, /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n      style: {\n        paddingTop: '22px'\n      }\n    }, currentContentTypeLayoutData.layouts.editRelations.map(function (_ref4) {\n      var name = _ref4.name,\n          fieldSchema = _ref4.fieldSchema,\n          metadatas = _ref4.metadatas,\n          queryInfos = _ref4.queryInfos;\n      return /*#__PURE__*/_react[\"default\"].createElement(_SelectWrapper[\"default\"], (0, _extends2[\"default\"])({}, fieldSchema, metadatas, {\n        queryInfos: queryInfos,\n        key: name,\n        name: name,\n        relationsType: fieldSchema.relationType\n      }));\n    }))), /*#__PURE__*/_react[\"default\"].createElement(_components.LinkWrapper, null, /*#__PURE__*/_react[\"default\"].createElement(\"ul\", null, /*#__PURE__*/_react[\"default\"].createElement(_strapiHelperPlugin.CheckPermissions, {\n      permissions: configurationPermissions\n    }, /*#__PURE__*/_react[\"default\"].createElement(_strapiHelperPlugin.LiLink, {\n      message: {\n        id: 'app.links.configure-view'\n      },\n      icon: \"layout\",\n      url: configurationsURL,\n      onClick: function onClick() {// emitEvent('willEditContentTypeLayoutFromEditView');\n      }\n    })), (0, _utils.getInjectedComponents)('editView', 'right.links', plugins, currentEnvironment, slug), allowedActions.canDelete && /*#__PURE__*/_react[\"default\"].createElement(_DeleteLink[\"default\"], {\n      isCreatingEntry: isCreatingEntry,\n      onDelete: onDelete,\n      onDeleteSucceeded: onDeleteSucceeded\n    })))))));\n  });\n};\n\nexports.EditView = EditView;\nEditView.defaultProps = {\n  id: null,\n  isSingleType: false,\n  origin: null,\n  state: {}\n};\nEditView.propTypes = {\n  layout: _propTypes[\"default\"].shape({\n    components: _propTypes[\"default\"].object.isRequired,\n    contentType: _propTypes[\"default\"].shape({\n      uid: _propTypes[\"default\"].string.isRequired,\n      settings: _propTypes[\"default\"].object.isRequired,\n      metadatas: _propTypes[\"default\"].object.isRequired,\n      options: _propTypes[\"default\"].object.isRequired,\n      attributes: _propTypes[\"default\"].object.isRequired\n    }).isRequired\n  }).isRequired,\n  id: _propTypes[\"default\"].string,\n  isSingleType: _propTypes[\"default\"].bool,\n  goBack: _propTypes[\"default\"].func.isRequired,\n  origin: _propTypes[\"default\"].string,\n  state: _propTypes[\"default\"].object,\n  slug: _propTypes[\"default\"].string.isRequired\n};\n\nvar _default = /*#__PURE__*/(0, _react.memo)(EditView);\n\nexports[\"default\"] = _default;","map":{"version":3,"sources":["D:/webstorm_projects/redcat_backend/.cache/plugins/strapi-plugin-content-manager/admin/src/containers/EditView/index.js"],"names":["EditView","isSingleType","goBack","layout","slug","state","id","origin","currentEnvironment","plugins","viewPermissions","allowedActions","isLoadingForPermissions","isLoading","userPermissions","from","createActionAllowedFields","readActionAllowedFields","updateActionAllowedFields","configurationPermissions","pluginPermissions","singleTypesConfigurations","collectionTypesConfigurations","configurationsURL","pluginId","currentContentTypeLayoutData","DataManagementWrapper","SingleTypeFormWrapper","CollectionTypeFormWrapper","isDynamicZone","block","every","subBlock","obj","fieldSchema","type","formattedContentTypeLayout","layouts","edit","attributes","componentsDataStructure","contentTypeDataStructure","data","isCreatingEntry","isLoadingForData","onDelete","onDeleteSucceeded","onPost","onPublish","onPut","onUnpublish","status","paddingTop","marginBottom","map","blockIndex","name","metadatas","baselineAlignementSize","fieldsBlock","fieldsBlockIndex","fieldIndex","size","isComponent","component","max","min","repeatable","componentUid","label","editRelations","length","padding","queryInfos","relationType","canDelete","defaultProps","propTypes","PropTypes","shape","components","object","isRequired","contentType","uid","string","settings","options","bool","func"],"mappings":"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","sourcesContent":["import React, { memo, useCallback, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { get } from 'lodash';\nimport {\n  BackHeader,\n  BaselineAlignment,\n  LiLink,\n  LoadingIndicatorPage,\n  CheckPermissions,\n  useUser,\n  useUserPermissions,\n  useGlobalContext,\n} from 'strapi-helper-plugin';\nimport { Padded } from '@buffetjs/core';\nimport pluginId from '../../pluginId';\nimport pluginPermissions from '../../permissions';\nimport Container from '../../components/Container';\nimport DynamicZone from '../../components/DynamicZone';\nimport FormWrapper from '../../components/FormWrapper';\nimport FieldComponent from '../../components/FieldComponent';\nimport Inputs from '../../components/Inputs';\nimport SelectWrapper from '../../components/SelectWrapper';\nimport { generatePermissionsObject, getInjectedComponents } from '../../utils';\nimport CollectionTypeFormWrapper from '../CollectionTypeFormWrapper';\nimport EditViewDataManagerProvider from '../EditViewDataManagerProvider';\nimport SingleTypeFormWrapper from '../SingleTypeFormWrapper';\nimport Header from './Header';\nimport { createAttributesLayout, getFieldsActionMatchingPermissions } from './utils';\nimport { LinkWrapper, SubWrapper } from './components';\nimport DeleteLink from './DeleteLink';\nimport InformationCard from './InformationCard';\n\n/* eslint-disable  react/no-array-index-key */\nconst EditView = ({ isSingleType, goBack, layout, slug, state, id, origin }) => {\n  const { currentEnvironment, plugins } = useGlobalContext();\n  // Permissions\n  const viewPermissions = useMemo(() => generatePermissionsObject(slug), [slug]);\n  const { allowedActions, isLoading: isLoadingForPermissions } = useUserPermissions(\n    viewPermissions\n  );\n  const userPermissions = useUser();\n\n  // Here in case of a 403 response when fetching data we will either redirect to the previous page\n  // Or to the homepage if there's no state in the history stack\n  const from = get(state, 'from', '/');\n\n  const {\n    createActionAllowedFields,\n    readActionAllowedFields,\n    updateActionAllowedFields,\n  } = useMemo(() => {\n    return getFieldsActionMatchingPermissions(userPermissions, slug);\n  }, [userPermissions, slug]);\n  const configurationPermissions = useMemo(() => {\n    return isSingleType\n      ? pluginPermissions.singleTypesConfigurations\n      : pluginPermissions.collectionTypesConfigurations;\n  }, [isSingleType]);\n\n  const configurationsURL = `/plugins/${pluginId}/${\n    isSingleType ? 'singleType' : 'collectionType'\n  }/${slug}/configurations/edit`;\n  const currentContentTypeLayoutData = useMemo(() => get(layout, ['contentType'], {}), [layout]);\n\n  const DataManagementWrapper = useMemo(\n    () => (isSingleType ? SingleTypeFormWrapper : CollectionTypeFormWrapper),\n    [isSingleType]\n  );\n\n  // Check if a block is a dynamic zone\n  const isDynamicZone = useCallback(block => {\n    return block.every(subBlock => {\n      return subBlock.every(obj => obj.fieldSchema.type === 'dynamiczone');\n    });\n  }, []);\n\n  const formattedContentTypeLayout = useMemo(() => {\n    if (!currentContentTypeLayoutData.layouts) {\n      return [];\n    }\n\n    return createAttributesLayout(\n      currentContentTypeLayoutData.layouts.edit,\n      currentContentTypeLayoutData.attributes\n    );\n  }, [currentContentTypeLayoutData]);\n\n  if (isLoadingForPermissions) {\n    return <LoadingIndicatorPage />;\n  }\n\n  // TODO: create a hook to handle/provide the permissions this should be done for the i18n feature\n  return (\n    <DataManagementWrapper allLayoutData={layout} from={from} slug={slug} id={id} origin={origin}>\n      {({\n        componentsDataStructure,\n        contentTypeDataStructure,\n        data,\n        isCreatingEntry,\n        isLoadingForData,\n        onDelete,\n        onDeleteSucceeded,\n        onPost,\n        onPublish,\n        onPut,\n        onUnpublish,\n        status,\n      }) => {\n        return (\n          <EditViewDataManagerProvider\n            allowedActions={allowedActions}\n            allLayoutData={layout}\n            createActionAllowedFields={createActionAllowedFields}\n            componentsDataStructure={componentsDataStructure}\n            contentTypeDataStructure={contentTypeDataStructure}\n            from={from}\n            initialValues={data}\n            isCreatingEntry={isCreatingEntry}\n            isLoadingForData={isLoadingForData}\n            isSingleType={isSingleType}\n            onPost={onPost}\n            onPublish={onPublish}\n            onPut={onPut}\n            onUnpublish={onUnpublish}\n            readActionAllowedFields={readActionAllowedFields}\n            redirectToPreviousPage={goBack}\n            slug={slug}\n            status={status}\n            updateActionAllowedFields={updateActionAllowedFields}\n          >\n            <BackHeader onClick={goBack} />\n            <Container className=\"container-fluid\">\n              <Header allowedActions={allowedActions} />\n              <div className=\"row\" style={{ paddingTop: 3 }}>\n                <div className=\"col-md-12 col-lg-9\" style={{ marginBottom: 13 }}>\n                  {formattedContentTypeLayout.map((block, blockIndex) => {\n                    if (isDynamicZone(block)) {\n                      const {\n                        0: {\n                          0: { name, fieldSchema, metadatas },\n                        },\n                      } = block;\n                      const baselineAlignementSize = blockIndex === 0 ? '3px' : '0';\n\n                      return (\n                        <BaselineAlignment key={blockIndex} top size={baselineAlignementSize}>\n                          <DynamicZone\n                            name={name}\n                            fieldSchema={fieldSchema}\n                            metadatas={metadatas}\n                          />\n                        </BaselineAlignment>\n                      );\n                    }\n\n                    return (\n                      <FormWrapper key={blockIndex}>\n                        {block.map((fieldsBlock, fieldsBlockIndex) => {\n                          return (\n                            <div className=\"row\" key={fieldsBlockIndex}>\n                              {fieldsBlock.map(\n                                ({ name, size, fieldSchema, metadatas }, fieldIndex) => {\n                                  const isComponent = fieldSchema.type === 'component';\n\n                                  if (isComponent) {\n                                    const { component, max, min, repeatable = false } = fieldSchema;\n                                    const componentUid = fieldSchema.component;\n\n                                    return (\n                                      <FieldComponent\n                                        key={componentUid}\n                                        componentUid={component}\n                                        isRepeatable={repeatable}\n                                        label={metadatas.label}\n                                        max={max}\n                                        min={min}\n                                        name={name}\n                                      />\n                                    );\n                                  }\n\n                                  return (\n                                    <div className={`col-${size}`} key={name}>\n                                      <Inputs\n                                        autoFocus={\n                                          blockIndex === 0 &&\n                                          fieldsBlockIndex === 0 &&\n                                          fieldIndex === 0\n                                        }\n                                        fieldSchema={fieldSchema}\n                                        keys={name}\n                                        metadatas={metadatas}\n                                      />\n                                    </div>\n                                  );\n                                }\n                              )}\n                            </div>\n                          );\n                        })}\n                      </FormWrapper>\n                    );\n                  })}\n                </div>\n                <div className=\"col-md-12 col-lg-3\">\n                  <InformationCard />\n                  <Padded size=\"smd\" top />\n                  {currentContentTypeLayoutData.layouts.editRelations.length > 0 && (\n                    <SubWrapper style={{ padding: '0 20px 1px', marginBottom: '25px' }}>\n                      <div style={{ paddingTop: '22px' }}>\n                        {currentContentTypeLayoutData.layouts.editRelations.map(\n                          ({ name, fieldSchema, metadatas, queryInfos }) => {\n                            return (\n                              <SelectWrapper\n                                {...fieldSchema}\n                                {...metadatas}\n                                queryInfos={queryInfos}\n                                key={name}\n                                name={name}\n                                relationsType={fieldSchema.relationType}\n                              />\n                            );\n                          }\n                        )}\n                      </div>\n                    </SubWrapper>\n                  )}\n                  <LinkWrapper>\n                    <ul>\n                      <CheckPermissions permissions={configurationPermissions}>\n                        <LiLink\n                          message={{\n                            id: 'app.links.configure-view',\n                          }}\n                          icon=\"layout\"\n                          url={configurationsURL}\n                          onClick={() => {\n                            // emitEvent('willEditContentTypeLayoutFromEditView');\n                          }}\n                        />\n                      </CheckPermissions>\n                      {getInjectedComponents(\n                        'editView',\n                        'right.links',\n                        plugins,\n                        currentEnvironment,\n                        slug\n                      )}\n                      {allowedActions.canDelete && (\n                        <DeleteLink\n                          isCreatingEntry={isCreatingEntry}\n                          onDelete={onDelete}\n                          onDeleteSucceeded={onDeleteSucceeded}\n                        />\n                      )}\n                    </ul>\n                  </LinkWrapper>\n                </div>\n              </div>\n            </Container>\n          </EditViewDataManagerProvider>\n        );\n      }}\n    </DataManagementWrapper>\n  );\n};\n\nEditView.defaultProps = {\n  id: null,\n  isSingleType: false,\n  origin: null,\n  state: {},\n};\n\nEditView.propTypes = {\n  layout: PropTypes.shape({\n    components: PropTypes.object.isRequired,\n    contentType: PropTypes.shape({\n      uid: PropTypes.string.isRequired,\n      settings: PropTypes.object.isRequired,\n      metadatas: PropTypes.object.isRequired,\n      options: PropTypes.object.isRequired,\n      attributes: PropTypes.object.isRequired,\n    }).isRequired,\n  }).isRequired,\n  id: PropTypes.string,\n  isSingleType: PropTypes.bool,\n  goBack: PropTypes.func.isRequired,\n  origin: PropTypes.string,\n  state: PropTypes.object,\n  slug: PropTypes.string.isRequired,\n};\n\nexport { EditView };\nexport default memo(EditView);\n"]},"metadata":{},"sourceType":"script"}