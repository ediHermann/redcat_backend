{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _core = require(\"@buffetjs/core\");\n\nvar _reactFontawesome = require(\"@fortawesome/react-fontawesome\");\n\nvar _strapiHelperPlugin = require(\"strapi-helper-plugin\");\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _reactIntl = require(\"react-intl\");\n\nvar _SubCategory = _interopRequireDefault(require(\"ee_else_ce/components/Roles/Permissions/PluginsAndSettingsPermissions/PermissionRow/SubCategory\"));\n\nvar _RowStyle = _interopRequireDefault(require(\"./RowStyle\"));\n\nvar PermissionRow = function PermissionRow(_ref) {\n  var openedCategory = _ref.openedCategory,\n      onOpenCategory = _ref.onOpenCategory,\n      permissions = _ref.permissions,\n      isWhite = _ref.isWhite,\n      permissionType = _ref.permissionType;\n\n  var _useIntl = (0, _reactIntl.useIntl)(),\n      formatMessage = _useIntl.formatMessage;\n\n  var categoryName = (0, _react.useMemo)(function () {\n    return permissions.category.includes('::') ? \"\".concat(permissions.category.split('::')[1]) : permissions.category;\n  }, [permissions]);\n  return /*#__PURE__*/_react[\"default\"].createElement(_strapiHelperPlugin.RowContainer, {\n    isWhite: isWhite\n  }, /*#__PURE__*/_react[\"default\"].createElement(_RowStyle[\"default\"], {\n    isWhite: isWhite,\n    isActive: openedCategory === permissions.category,\n    key: permissions.category,\n    onClick: onOpenCategory\n  }, /*#__PURE__*/_react[\"default\"].createElement(_core.Flex, {\n    alignItems: \"center\",\n    justifyContent: \"space-between\"\n  }, /*#__PURE__*/_react[\"default\"].createElement(\"div\", null, /*#__PURE__*/_react[\"default\"].createElement(_core.Text, {\n    color: \"grey\",\n    fontWeight: \"bold\",\n    fontSize: \"xs\",\n    textTransform: \"uppercase\"\n  }, categoryName), /*#__PURE__*/_react[\"default\"].createElement(_core.Text, {\n    lineHeight: \"22px\",\n    color: \"grey\"\n  }, formatMessage({\n    id: 'Settings.permissions.category'\n  }, {\n    category: categoryName\n  }), \"\\xA0\", permissionType)), /*#__PURE__*/_react[\"default\"].createElement(\"div\", null, /*#__PURE__*/_react[\"default\"].createElement(_reactFontawesome.FontAwesomeIcon, {\n    style: {\n      width: '11px'\n    },\n    color: \"#9EA7B8\",\n    icon: \"chevron-down\"\n  })))), openedCategory === permissions.category && /*#__PURE__*/_react[\"default\"].createElement(_strapiHelperPlugin.PermissionsWrapper, {\n    isWhite: isWhite\n  }, permissions.subCategories.map(function (subCategory) {\n    return /*#__PURE__*/_react[\"default\"].createElement(_SubCategory[\"default\"], {\n      categoryName: categoryName,\n      key: subCategory.subCategory,\n      subCategory: subCategory\n    });\n  })));\n};\n\nPermissionRow.defaultProps = {\n  openedCategory: null,\n  permissionType: null\n};\nPermissionRow.propTypes = {\n  openedCategory: _propTypes[\"default\"].string,\n  onOpenCategory: _propTypes[\"default\"].func.isRequired,\n  permissions: _propTypes[\"default\"].object.isRequired,\n  isWhite: _propTypes[\"default\"].bool.isRequired,\n  permissionType: _propTypes[\"default\"].string\n};\nvar _default = PermissionRow;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["D:/webstorm_projects/redcat_backend/.cache/admin/src/components/Roles/Permissions/PluginsAndSettingsPermissions/PermissionRow/index.js"],"names":["PermissionRow","openedCategory","onOpenCategory","permissions","isWhite","permissionType","formatMessage","categoryName","category","includes","split","id","width","subCategories","map","subCategory","defaultProps","propTypes","PropTypes","string","func","isRequired","object","bool"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA;;AAEA,IAAMA,aAAa,GAAG,SAAhBA,aAAgB,OAMhB;AAAA,MALJC,cAKI,QALJA,cAKI;AAAA,MAJJC,cAII,QAJJA,cAII;AAAA,MAHJC,WAGI,QAHJA,WAGI;AAAA,MAFJC,OAEI,QAFJA,OAEI;AAAA,MADJC,cACI,QADJA,cACI;;AAAA,iBACsB,yBADtB;AAAA,MACIC,aADJ,YACIA,aADJ;;AAGJ,MAAMC,YAAY,GAAG,oBAAQ,YAAM;AACjC,WAAOJ,WAAW,CAACK,QAAZ,CAAqBC,QAArB,CAA8B,IAA9B,cACAN,WAAW,CAACK,QAAZ,CAAqBE,KAArB,CAA2B,IAA3B,EAAiC,CAAjC,CADA,IAEHP,WAAW,CAACK,QAFhB;AAGD,GAJoB,EAIlB,CAACL,WAAD,CAJkB,CAArB;AAMA,sBACE,gCAAC,gCAAD;AAAc,IAAA,OAAO,EAAEC;AAAvB,kBACE,gCAAC,oBAAD;AACE,IAAA,OAAO,EAAEA,OADX;AAEE,IAAA,QAAQ,EAAEH,cAAc,KAAKE,WAAW,CAACK,QAF3C;AAGE,IAAA,GAAG,EAAEL,WAAW,CAACK,QAHnB;AAIE,IAAA,OAAO,EAAEN;AAJX,kBAME,gCAAC,UAAD;AAAM,IAAA,UAAU,EAAC,QAAjB;AAA0B,IAAA,cAAc,EAAC;AAAzC,kBACE,0DACE,gCAAC,UAAD;AAAM,IAAA,KAAK,EAAC,MAAZ;AAAmB,IAAA,UAAU,EAAC,MAA9B;AAAqC,IAAA,QAAQ,EAAC,IAA9C;AAAmD,IAAA,aAAa,EAAC;AAAjE,KACGK,YADH,CADF,eAIE,gCAAC,UAAD;AAAM,IAAA,UAAU,EAAC,MAAjB;AAAwB,IAAA,KAAK,EAAC;AAA9B,KACGD,aAAa,CAAC;AAAEK,IAAAA,EAAE,EAAE;AAAN,GAAD,EAA0C;AAAEH,IAAAA,QAAQ,EAAED;AAAZ,GAA1C,CADhB,UAESF,cAFT,CAJF,CADF,eAUE,0DACE,gCAAC,iCAAD;AAAiB,IAAA,KAAK,EAAE;AAAEO,MAAAA,KAAK,EAAE;AAAT,KAAxB;AAA2C,IAAA,KAAK,EAAC,SAAjD;AAA2D,IAAA,IAAI,EAAC;AAAhE,IADF,CAVF,CANF,CADF,EAsBGX,cAAc,KAAKE,WAAW,CAACK,QAA/B,iBACC,gCAAC,sCAAD;AAAoB,IAAA,OAAO,EAAEJ;AAA7B,KACGD,WAAW,CAACU,aAAZ,CAA0BC,GAA1B,CAA8B,UAAAC,WAAW;AAAA,wBACxC,gCAAC,uBAAD;AACE,MAAA,YAAY,EAAER,YADhB;AAEE,MAAA,GAAG,EAAEQ,WAAW,CAACA,WAFnB;AAGE,MAAA,WAAW,EAAEA;AAHf,MADwC;AAAA,GAAzC,CADH,CAvBJ,CADF;AAoCD,CAnDD;;AAqDAf,aAAa,CAACgB,YAAd,GAA6B;AAC3Bf,EAAAA,cAAc,EAAE,IADW;AAE3BI,EAAAA,cAAc,EAAE;AAFW,CAA7B;AAIAL,aAAa,CAACiB,SAAd,GAA0B;AACxBhB,EAAAA,cAAc,EAAEiB,sBAAUC,MADF;AAExBjB,EAAAA,cAAc,EAAEgB,sBAAUE,IAAV,CAAeC,UAFP;AAGxBlB,EAAAA,WAAW,EAAEe,sBAAUI,MAAV,CAAiBD,UAHN;AAIxBjB,EAAAA,OAAO,EAAEc,sBAAUK,IAAV,CAAeF,UAJA;AAKxBhB,EAAAA,cAAc,EAAEa,sBAAUC;AALF,CAA1B;eAQenB,a","sourcesContent":["import React, { useMemo } from 'react';\nimport { Flex, Text } from '@buffetjs/core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { PermissionsWrapper, RowContainer } from 'strapi-helper-plugin';\nimport PropTypes from 'prop-types';\nimport { useIntl } from 'react-intl';\nimport SubCategory from 'ee_else_ce/components/Roles/Permissions/PluginsAndSettingsPermissions/PermissionRow/SubCategory';\n\nimport RowStyle from './RowStyle';\n\nconst PermissionRow = ({\n  openedCategory,\n  onOpenCategory,\n  permissions,\n  isWhite,\n  permissionType,\n}) => {\n  const { formatMessage } = useIntl();\n\n  const categoryName = useMemo(() => {\n    return permissions.category.includes('::')\n      ? `${permissions.category.split('::')[1]}`\n      : permissions.category;\n  }, [permissions]);\n\n  return (\n    <RowContainer isWhite={isWhite}>\n      <RowStyle\n        isWhite={isWhite}\n        isActive={openedCategory === permissions.category}\n        key={permissions.category}\n        onClick={onOpenCategory}\n      >\n        <Flex alignItems=\"center\" justifyContent=\"space-between\">\n          <div>\n            <Text color=\"grey\" fontWeight=\"bold\" fontSize=\"xs\" textTransform=\"uppercase\">\n              {categoryName}\n            </Text>\n            <Text lineHeight=\"22px\" color=\"grey\">\n              {formatMessage({ id: 'Settings.permissions.category' }, { category: categoryName })}\n              &nbsp;{permissionType}\n            </Text>\n          </div>\n          <div>\n            <FontAwesomeIcon style={{ width: '11px' }} color=\"#9EA7B8\" icon=\"chevron-down\" />\n          </div>\n        </Flex>\n      </RowStyle>\n      {openedCategory === permissions.category && (\n        <PermissionsWrapper isWhite={isWhite}>\n          {permissions.subCategories.map(subCategory => (\n            <SubCategory\n              categoryName={categoryName}\n              key={subCategory.subCategory}\n              subCategory={subCategory}\n            />\n          ))}\n        </PermissionsWrapper>\n      )}\n    </RowContainer>\n  );\n};\n\nPermissionRow.defaultProps = {\n  openedCategory: null,\n  permissionType: null,\n};\nPermissionRow.propTypes = {\n  openedCategory: PropTypes.string,\n  onOpenCategory: PropTypes.func.isRequired,\n  permissions: PropTypes.object.isRequired,\n  isWhite: PropTypes.bool.isRequired,\n  permissionType: PropTypes.string,\n};\n\nexport default PermissionRow;\n"]},"metadata":{},"sourceType":"script"}