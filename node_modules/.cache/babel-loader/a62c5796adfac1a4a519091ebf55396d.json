{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _lodash = require(\"lodash\");\n\nvar _strapiHelperPlugin = require(\"strapi-helper-plugin\");\n\nvar _reactRouterDom = require(\"react-router-dom\");\n\nvar _DataManagerContext = _interopRequireDefault(require(\"../../contexts/DataManagerContext\"));\n\nvar _getTrad = _interopRequireDefault(require(\"../../utils/getTrad\"));\n\nvar _makeUnique = _interopRequireDefault(require(\"../../utils/makeUnique\"));\n\nvar _pluginId = _interopRequireDefault(require(\"../../pluginId\"));\n\nvar _FormModal = _interopRequireDefault(require(\"../FormModal\"));\n\nvar _init = _interopRequireDefault(require(\"./init\"));\n\nvar _reducer = _interopRequireWildcard(require(\"./reducer\"));\n\nvar _createDataObject = _interopRequireDefault(require(\"./utils/createDataObject\"));\n\nvar _createModifiedDataSchema = _interopRequireWildcard(require(\"./utils/createModifiedDataSchema\"));\n\nvar _retrieveSpecificInfoFromComponents = _interopRequireDefault(require(\"./utils/retrieveSpecificInfoFromComponents\"));\n\nvar _retrieveComponentsFromSchema = _interopRequireDefault(require(\"./utils/retrieveComponentsFromSchema\"));\n\nvar _retrieveNestedComponents = _interopRequireDefault(require(\"./utils/retrieveNestedComponents\"));\n\nvar _retrieveComponentsThatHaveComponents = require(\"./utils/retrieveComponentsThatHaveComponents\");\n\nvar _cleanData = require(\"./utils/cleanData\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2[\"default\"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar DataManagerProvider = function DataManagerProvider(_ref) {\n  var allIcons = _ref.allIcons,\n      children = _ref.children;\n\n  var _useReducer = (0, _react.useReducer)(_reducer[\"default\"], _reducer.initialState, _init[\"default\"]),\n      _useReducer2 = (0, _slicedToArray2[\"default\"])(_useReducer, 2),\n      reducerState = _useReducer2[0],\n      dispatch = _useReducer2[1];\n\n  var _useState = (0, _react.useState)({\n    cancel: false\n  }),\n      _useState2 = (0, _slicedToArray2[\"default\"])(_useState, 2),\n      infoModals = _useState2[0],\n      toggleInfoModal = _useState2[1];\n\n  var _useGlobalContext = (0, _strapiHelperPlugin.useGlobalContext)(),\n      autoReload = _useGlobalContext.autoReload,\n      emitEvent = _useGlobalContext.emitEvent,\n      fetchUserPermissions = _useGlobalContext.fetchUserPermissions,\n      formatMessage = _useGlobalContext.formatMessage,\n      menu = _useGlobalContext.menu;\n\n  var _reducerState$toJS = reducerState.toJS(),\n      components = _reducerState$toJS.components,\n      contentTypes = _reducerState$toJS.contentTypes,\n      isLoading = _reducerState$toJS.isLoading,\n      isLoadingForDataToBeSet = _reducerState$toJS.isLoadingForDataToBeSet,\n      initialData = _reducerState$toJS.initialData,\n      modifiedData = _reducerState$toJS.modifiedData,\n      reservedNames = _reducerState$toJS.reservedNames;\n\n  var _useLocation = (0, _reactRouterDom.useLocation)(),\n      pathname = _useLocation.pathname;\n\n  var _useHistory = (0, _reactRouterDom.useHistory)(),\n      push = _useHistory.push;\n\n  var contentTypeMatch = (0, _reactRouterDom.useRouteMatch)(\"/plugins/\".concat(_pluginId[\"default\"], \"/content-types/:uid\"));\n  var componentMatch = (0, _reactRouterDom.useRouteMatch)(\"/plugins/\".concat(_pluginId[\"default\"], \"/component-categories/:categoryUid/:componentUid\"));\n  var formatMessageRef = (0, _react.useRef)();\n  formatMessageRef.current = formatMessage;\n  var isInDevelopmentMode = autoReload;\n  var isInContentTypeView = contentTypeMatch !== null;\n  var firstKeyToMainSchema = isInContentTypeView ? 'contentType' : 'component';\n  var currentUid = isInContentTypeView ? (0, _lodash.get)(contentTypeMatch, 'params.uid', null) : (0, _lodash.get)(componentMatch, 'params.componentUid', null);\n  var abortController = new AbortController();\n  var signal = abortController.signal;\n  var getDataRef = (0, _react.useRef)();\n  var endPoint = isInContentTypeView ? 'content-types' : 'components';\n  getDataRef.current = /*#__PURE__*/(0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee() {\n    var _yield$Promise$all, _yield$Promise$all2, componentsArray, contentTypesArray, _reservedNames, _components, _contentTypes, orderedComponents, orderedContenTypes;\n\n    return _regenerator[\"default\"].wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return Promise.all(['components', 'content-types', 'reserved-names'].map(function (endPoint) {\n              return (0, _strapiHelperPlugin.request)(\"/\".concat(_pluginId[\"default\"], \"/\").concat(endPoint), {\n                method: 'GET',\n                signal: signal\n              });\n            }));\n\n          case 3:\n            _yield$Promise$all = _context.sent;\n            _yield$Promise$all2 = (0, _slicedToArray2[\"default\"])(_yield$Promise$all, 3);\n            componentsArray = _yield$Promise$all2[0].data;\n            contentTypesArray = _yield$Promise$all2[1].data;\n            _reservedNames = _yield$Promise$all2[2];\n            _components = (0, _createDataObject[\"default\"])(componentsArray);\n            _contentTypes = (0, _createDataObject[\"default\"])(contentTypesArray);\n            orderedComponents = (0, _createModifiedDataSchema.orderAllDataAttributesWithImmutable)({\n              components: _components\n            });\n            orderedContenTypes = (0, _createModifiedDataSchema.orderAllDataAttributesWithImmutable)({\n              components: _contentTypes\n            });\n            dispatch({\n              type: 'GET_DATA_SUCCEEDED',\n              components: orderedComponents.get('components'),\n              contentTypes: orderedContenTypes.get('components'),\n              reservedNames: _reservedNames\n            });\n            _context.next = 19;\n            break;\n\n          case 15:\n            _context.prev = 15;\n            _context.t0 = _context[\"catch\"](0);\n            console.error({\n              err: _context.t0\n            });\n            strapi.notification.toggle({\n              type: 'warning',\n              message: {\n                id: 'notification.error'\n              }\n            });\n\n          case 19:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 15]]);\n  }));\n  (0, _react.useEffect)(function () {\n    getDataRef.current();\n  }, []);\n  (0, _react.useEffect)(function () {\n    // We need to set the modifiedData after the data has been retrieved\n    // and also on pathname change\n    if (!isLoading && currentUid) {\n      setModifiedData();\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [isLoading, pathname, currentUid]);\n  (0, _react.useEffect)(function () {\n    if (!autoReload) {\n      strapi.notification.toggle({\n        type: 'info',\n        message: {\n          id: (0, _getTrad[\"default\"])('notification.info.autoreaload-disable')\n        }\n      });\n    }\n  }, [autoReload]);\n  var didModifiedComponents = (0, _cleanData.getCreatedAndModifiedComponents)(modifiedData.components || {}, components).length > 0;\n\n  var addAttribute = function addAttribute(attributeToSet, forTarget, targetUid) {\n    var isEditing = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n    var initialAttribute = arguments.length > 4 ? arguments[4] : undefined;\n    var shouldAddComponentToData = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;\n    var actionType = isEditing ? 'EDIT_ATTRIBUTE' : 'ADD_ATTRIBUTE';\n    dispatch({\n      type: actionType,\n      attributeToSet: attributeToSet,\n      forTarget: forTarget,\n      targetUid: targetUid,\n      initialAttribute: initialAttribute,\n      shouldAddComponentToData: shouldAddComponentToData\n    });\n  };\n\n  var addCreatedComponentToDynamicZone = function addCreatedComponentToDynamicZone(dynamicZoneTarget, componentsToAdd) {\n    dispatch({\n      type: 'ADD_CREATED_COMPONENT_TO_DYNAMIC_ZONE',\n      dynamicZoneTarget: dynamicZoneTarget,\n      componentsToAdd: componentsToAdd\n    });\n  };\n\n  var cancelChanges = function cancelChanges() {\n    toggleModalCancel();\n    dispatch({\n      type: 'CANCEL_CHANGES'\n    });\n  };\n\n  var createSchema = function createSchema(data, schemaType, uid, componentCategory) {\n    var shouldAddComponentToData = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n    var type = schemaType === 'contentType' ? 'CREATE_SCHEMA' : 'CREATE_COMPONENT_SCHEMA';\n    dispatch({\n      type: type,\n      data: data,\n      componentCategory: componentCategory,\n      schemaType: schemaType,\n      uid: uid,\n      shouldAddComponentToData: shouldAddComponentToData\n    });\n  };\n\n  var changeDynamicZoneComponents = function changeDynamicZoneComponents(dynamicZoneTarget, newComponents) {\n    dispatch({\n      type: 'CHANGE_DYNAMIC_ZONE_COMPONENTS',\n      dynamicZoneTarget: dynamicZoneTarget,\n      newComponents: newComponents\n    });\n  };\n\n  var removeAttribute = function removeAttribute(mainDataKey, attributeToRemoveName) {\n    var componentUid = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n    var type = mainDataKey === 'components' ? 'REMOVE_FIELD_FROM_DISPLAYED_COMPONENT' : 'REMOVE_FIELD';\n\n    if (mainDataKey === 'contentType') {\n      emitEvent('willDeleteFieldOfContentType');\n    }\n\n    dispatch({\n      type: type,\n      mainDataKey: mainDataKey,\n      attributeToRemoveName: attributeToRemoveName,\n      componentUid: componentUid\n    });\n  };\n\n  var deleteCategory = /*#__PURE__*/function () {\n    var _ref3 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2(categoryUid) {\n      var requestURL, userConfirm;\n      return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              requestURL = \"/\".concat(_pluginId[\"default\"], \"/component-categories/\").concat(categoryUid); // eslint-disable-next-line no-alert\n\n              userConfirm = window.confirm(formatMessage({\n                id: (0, _getTrad[\"default\"])('popUpWarning.bodyMessage.category.delete')\n              })); // Close the modal\n\n              push({\n                search: ''\n              });\n\n              if (!userConfirm) {\n                _context2.next = 12;\n                break;\n              }\n\n              strapi.lockApp();\n              _context2.next = 8;\n              return (0, _strapiHelperPlugin.request)(requestURL, {\n                method: 'DELETE'\n              }, true);\n\n            case 8:\n              _context2.next = 10;\n              return updatePermissions();\n\n            case 10:\n              // Reload the plugin so the cycle is new again\n              dispatch({\n                type: 'RELOAD_PLUGIN'\n              }); // Refetch all the data\n\n              getDataRef.current();\n\n            case 12:\n              _context2.next = 18;\n              break;\n\n            case 14:\n              _context2.prev = 14;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.error({\n                err: _context2.t0\n              });\n              strapi.notification.toggle({\n                type: 'warning',\n                message: {\n                  id: 'notification.error'\n                }\n              });\n\n            case 18:\n              _context2.prev = 18;\n              strapi.unlockApp();\n              return _context2.finish(18);\n\n            case 21:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 14, 18, 21]]);\n    }));\n\n    return function deleteCategory(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var deleteData = /*#__PURE__*/function () {\n    var _ref4 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee3() {\n      var requestURL, isTemporary, userConfirm;\n      return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              requestURL = \"/\".concat(_pluginId[\"default\"], \"/\").concat(endPoint, \"/\").concat(currentUid);\n              isTemporary = (0, _lodash.get)(modifiedData, [firstKeyToMainSchema, 'isTemporary'], false); // eslint-disable-next-line no-alert\n\n              userConfirm = window.confirm(formatMessage({\n                id: (0, _getTrad[\"default\"])(\"popUpWarning.bodyMessage.\".concat(isInContentTypeView ? 'contentType' : 'component', \".delete\"))\n              })); // Close the modal\n\n              push({\n                search: ''\n              });\n\n              if (!userConfirm) {\n                _context3.next = 18;\n                break;\n              }\n\n              if (!isTemporary) {\n                _context3.next = 9;\n                break;\n              }\n\n              // Delete the not saved type\n              // Here we just need to reset the components to the initial ones and also the content types\n              // Doing so will trigging a url change since the type doesn't exist in either the contentTypes or the components\n              // so the modified and the initial data will also be reset in the useEffect...\n              dispatch({\n                type: 'DELETE_NOT_SAVED_TYPE'\n              });\n              return _context3.abrupt(\"return\");\n\n            case 9:\n              strapi.lockApp();\n              _context3.next = 12;\n              return (0, _strapiHelperPlugin.request)(requestURL, {\n                method: 'DELETE'\n              }, true);\n\n            case 12:\n              // Reload the plugin so the cycle is new again\n              dispatch({\n                type: 'RELOAD_PLUGIN'\n              }); // Refetch the permissions\n\n              _context3.next = 15;\n              return updatePermissions();\n\n            case 15:\n              _context3.next = 17;\n              return updateAppMenu();\n\n            case 17:\n              // Refetch all the data\n              getDataRef.current();\n\n            case 18:\n              _context3.next = 24;\n              break;\n\n            case 20:\n              _context3.prev = 20;\n              _context3.t0 = _context3[\"catch\"](0);\n              console.error({\n                err: _context3.t0\n              });\n              strapi.notification.toggle({\n                type: 'warning',\n                message: {\n                  id: 'notification.error'\n                }\n              });\n\n            case 24:\n              _context3.prev = 24;\n              strapi.unlockApp();\n              return _context3.finish(24);\n\n            case 27:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[0, 20, 24, 27]]);\n    }));\n\n    return function deleteData() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var editCategory = /*#__PURE__*/function () {\n    var _ref5 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee4(categoryUid, body) {\n      var requestURL;\n      return _regenerator[\"default\"].wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              requestURL = \"/\".concat(_pluginId[\"default\"], \"/component-categories/\").concat(categoryUid); // Close the modal\n\n              push({\n                search: ''\n              }); // Lock the app\n\n              strapi.lockApp(); // Update the category\n\n              _context4.next = 6;\n              return (0, _strapiHelperPlugin.request)(requestURL, {\n                method: 'PUT',\n                body: body\n              }, true);\n\n            case 6:\n              _context4.next = 8;\n              return updatePermissions();\n\n            case 8:\n              // Reload the plugin so the cycle is new again\n              dispatch({\n                type: 'RELOAD_PLUGIN'\n              }); // Refetch all the data\n\n              getDataRef.current();\n              _context4.next = 16;\n              break;\n\n            case 12:\n              _context4.prev = 12;\n              _context4.t0 = _context4[\"catch\"](0);\n              console.error({\n                err: _context4.t0\n              });\n              strapi.notification.toggle({\n                type: 'warning',\n                message: {\n                  id: 'notification.error'\n                }\n              });\n\n            case 16:\n              _context4.prev = 16;\n              strapi.unlockApp();\n              return _context4.finish(16);\n\n            case 19:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[0, 12, 16, 19]]);\n    }));\n\n    return function editCategory(_x2, _x3) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  var getAllComponentsThatHaveAComponentInTheirAttributes = function getAllComponentsThatHaveAComponentInTheirAttributes() {\n    // We need to create an object with all the non modified compos\n    // plus the ones that are created on the fly\n    var allCompos = Object.assign({}, components, modifiedData.components); // Since we apply the modification of a specific component only in the modified data\n    // we need to update all compos with the modifications\n\n    if (!isInContentTypeView) {\n      var currentEditedCompo = (0, _lodash.get)(modifiedData, 'component', {});\n      (0, _lodash.set)(allCompos, (0, _lodash.get)(currentEditedCompo, ['uid'], ''), currentEditedCompo);\n    }\n\n    var composWithCompos = (0, _retrieveComponentsThatHaveComponents.retrieveComponentsThatHaveComponents)(allCompos);\n    return (0, _makeUnique[\"default\"])(composWithCompos);\n  };\n\n  var getAllNestedComponents = function getAllNestedComponents() {\n    var appNestedCompo = (0, _retrieveNestedComponents[\"default\"])(components);\n    var editingDataNestedCompos = (0, _retrieveNestedComponents[\"default\"])(modifiedData.components || {});\n    return (0, _makeUnique[\"default\"])([].concat((0, _toConsumableArray2[\"default\"])(editingDataNestedCompos), (0, _toConsumableArray2[\"default\"])(appNestedCompo)));\n  };\n\n  var removeComponentFromDynamicZone = function removeComponentFromDynamicZone(dzName, componentToRemoveIndex) {\n    dispatch({\n      type: 'REMOVE_COMPONENT_FROM_DYNAMIC_ZONE',\n      dzName: dzName,\n      componentToRemoveIndex: componentToRemoveIndex\n    });\n  };\n\n  var setModifiedData = function setModifiedData() {\n    var currentSchemas = isInContentTypeView ? contentTypes : components;\n    var schemaToSet = (0, _lodash.get)(currentSchemas, currentUid, {\n      schema: {\n        attributes: {}\n      }\n    });\n    var retrievedComponents = (0, _retrieveComponentsFromSchema[\"default\"])(schemaToSet.schema.attributes, components);\n    var newSchemaToSet = (0, _createModifiedDataSchema[\"default\"])(schemaToSet, retrievedComponents, components, isInContentTypeView);\n    var dataShape = (0, _createModifiedDataSchema.orderAllDataAttributesWithImmutable)(newSchemaToSet, isInContentTypeView); // This prevents from losing the created content type or component when clicking on the link from the left menu\n\n    var hasJustCreatedSchema = (0, _lodash.get)(schemaToSet, 'isTemporary', false) && (0, _lodash.size)((0, _lodash.get)(schemaToSet, 'schema.attributes', {})) === 0;\n    dispatch({\n      type: 'SET_MODIFIED_DATA',\n      schemaToSet: dataShape,\n      hasJustCreatedSchema: hasJustCreatedSchema\n    });\n  };\n\n  var shouldRedirect = (0, _react.useMemo)(function () {\n    var dataSet = isInContentTypeView ? contentTypes : components;\n    return !Object.keys(dataSet).includes(currentUid) && !isLoading;\n  }, [components, contentTypes, currentUid, isInContentTypeView, isLoading]);\n  var redirectEndpoint = (0, _react.useMemo)(function () {\n    var allowedEndpoints = Object.keys(contentTypes).filter(function (uid) {\n      return (0, _lodash.get)(contentTypes, [uid, 'schema', 'editable'], true);\n    }).sort();\n    return (0, _lodash.get)(allowedEndpoints, '0', '');\n  }, [contentTypes]);\n\n  if (shouldRedirect) {\n    return /*#__PURE__*/_react[\"default\"].createElement(_reactRouterDom.Redirect, {\n      to: \"/plugins/\".concat(_pluginId[\"default\"], \"/content-types/\").concat(redirectEndpoint)\n    });\n  }\n\n  var submitData = /*#__PURE__*/function () {\n    var _ref6 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee5(additionalContentTypeData) {\n      var isCreating, body, method, baseURL, requestURL, oldName, newName;\n      return _regenerator[\"default\"].wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              isCreating = (0, _lodash.get)(modifiedData, [firstKeyToMainSchema, 'isTemporary'], false);\n              body = {\n                components: (0, _cleanData.getComponentsToPost)(modifiedData.components, components, currentUid, isCreating)\n              };\n\n              if (isInContentTypeView) {\n                body.contentType = _objectSpread(_objectSpread({}, (0, _cleanData.formatMainDataType)(modifiedData.contentType)), additionalContentTypeData);\n                emitEvent('willSaveContentType');\n              } else {\n                body.component = (0, _cleanData.formatMainDataType)(modifiedData.component, true);\n                emitEvent('willSaveComponent');\n              }\n\n              method = isCreating ? 'POST' : 'PUT';\n              baseURL = \"/\".concat(_pluginId[\"default\"], \"/\").concat(endPoint);\n              requestURL = isCreating ? baseURL : \"\".concat(baseURL, \"/\").concat(currentUid); // Lock the app\n\n              strapi.lockApp();\n              _context5.next = 10;\n              return (0, _strapiHelperPlugin.request)(requestURL, {\n                method: method,\n                body: body\n              }, true);\n\n            case 10:\n              _context5.next = 12;\n              return updatePermissions();\n\n            case 12:\n              _context5.next = 14;\n              return updateAppMenu();\n\n            case 14:\n              // Submit ct tracking success\n              if (isInContentTypeView) {\n                emitEvent('didSaveContentType');\n                oldName = (0, _lodash.get)(body, ['contentType', 'schema', 'name'], '');\n                newName = (0, _lodash.get)(initialData, ['contentType', 'schema', 'name'], '');\n\n                if (!isCreating && oldName !== newName) {\n                  emitEvent('didEditNameOfContentType');\n                }\n              } else {\n                emitEvent('didSaveComponent');\n              } // Reload the plugin so the cycle is new again\n\n\n              dispatch({\n                type: 'RELOAD_PLUGIN'\n              }); // Refetch all the data\n\n              getDataRef.current();\n              _context5.next = 24;\n              break;\n\n            case 19:\n              _context5.prev = 19;\n              _context5.t0 = _context5[\"catch\"](0);\n\n              if (!isInContentTypeView) {\n                emitEvent('didNotSaveComponent');\n              }\n\n              console.error({\n                err: _context5.t0.response\n              });\n              strapi.notification.toggle({\n                type: 'warning',\n                message: {\n                  id: 'notification.error'\n                }\n              });\n\n            case 24:\n              _context5.prev = 24;\n              strapi.unlockApp();\n              return _context5.finish(24);\n\n            case 27:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, null, [[0, 19, 24, 27]]);\n    }));\n\n    return function submitData(_x4) {\n      return _ref6.apply(this, arguments);\n    };\n  }(); // Open the modal warning cancel changes\n\n\n  var toggleModalCancel = function toggleModalCancel() {\n    toggleInfoModal(function (prev) {\n      return _objectSpread(_objectSpread({}, prev), {}, {\n        cancel: !prev.cancel\n      });\n    });\n  }; // Update the menu using the internal API\n\n\n  var updateAppMenu = /*#__PURE__*/function () {\n    var _ref7 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee6() {\n      return _regenerator[\"default\"].wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              if (!menu.getModels) {\n                _context6.next = 3;\n                break;\n              }\n\n              _context6.next = 3;\n              return menu.getModels();\n\n            case 3:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n\n    return function updateAppMenu() {\n      return _ref7.apply(this, arguments);\n    };\n  }();\n\n  var updatePermissions = /*#__PURE__*/function () {\n    var _ref8 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee7() {\n      return _regenerator[\"default\"].wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.next = 2;\n              return fetchUserPermissions();\n\n            case 2:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7);\n    }));\n\n    return function updatePermissions() {\n      return _ref8.apply(this, arguments);\n    };\n  }();\n\n  var updateSchema = function updateSchema(data, schemaType, componentUID) {\n    dispatch({\n      type: 'UPDATE_SCHEMA',\n      data: data,\n      schemaType: schemaType,\n      uid: componentUID\n    });\n  };\n\n  return /*#__PURE__*/_react[\"default\"].createElement(_DataManagerContext[\"default\"].Provider, {\n    value: {\n      addAttribute: addAttribute,\n      addCreatedComponentToDynamicZone: addCreatedComponentToDynamicZone,\n      allComponentsCategories: (0, _retrieveSpecificInfoFromComponents[\"default\"])(components, ['category']),\n      allComponentsIconAlreadyTaken: (0, _retrieveSpecificInfoFromComponents[\"default\"])(components, ['schema', 'icon']),\n      allIcons: allIcons,\n      changeDynamicZoneComponents: changeDynamicZoneComponents,\n      components: components,\n      componentsGroupedByCategory: (0, _lodash.groupBy)(components, 'category'),\n      componentsThatHaveOtherComponentInTheirAttributes: getAllComponentsThatHaveAComponentInTheirAttributes(),\n      contentTypes: contentTypes,\n      createSchema: createSchema,\n      deleteCategory: deleteCategory,\n      deleteData: deleteData,\n      editCategory: editCategory,\n      isInDevelopmentMode: isInDevelopmentMode,\n      initialData: initialData,\n      isInContentTypeView: isInContentTypeView,\n      modifiedData: modifiedData,\n      nestedComponents: getAllNestedComponents(),\n      removeAttribute: removeAttribute,\n      removeComponentFromDynamicZone: removeComponentFromDynamicZone,\n      reservedNames: reservedNames,\n      setModifiedData: setModifiedData,\n      sortedContentTypesList: (0, _cleanData.sortContentType)(contentTypes),\n      submitData: submitData,\n      toggleModalCancel: toggleModalCancel,\n      updateSchema: updateSchema\n    }\n  }, isLoadingForDataToBeSet ? /*#__PURE__*/_react[\"default\"].createElement(_strapiHelperPlugin.LoadingIndicatorPage, null) : /*#__PURE__*/_react[\"default\"].createElement(_react[\"default\"].Fragment, null, children, isInDevelopmentMode && /*#__PURE__*/_react[\"default\"].createElement(_react[\"default\"].Fragment, null, /*#__PURE__*/_react[\"default\"].createElement(_FormModal[\"default\"], null), /*#__PURE__*/_react[\"default\"].createElement(_strapiHelperPlugin.PopUpWarning, {\n    isOpen: infoModals.cancel,\n    toggleModal: toggleModalCancel,\n    content: {\n      message: (0, _getTrad[\"default\"])(\"popUpWarning.bodyMessage.cancel-modifications\".concat(didModifiedComponents ? '.with-components' : ''))\n    },\n    popUpWarningType: \"danger\",\n    onConfirm: function onConfirm() {\n      cancelChanges();\n    }\n  }))));\n};\n\nDataManagerProvider.propTypes = {\n  allIcons: _propTypes[\"default\"].array.isRequired,\n  children: _propTypes[\"default\"].node.isRequired\n};\n\nvar _default = /*#__PURE__*/(0, _react.memo)(DataManagerProvider);\n\nexports[\"default\"] = _default;","map":{"version":3,"sources":["D:/webstorm_projects/redcat_backend/.cache/plugins/strapi-plugin-content-type-builder/admin/src/containers/DataManagerProvider/index.js"],"names":["DataManagerProvider","allIcons","children","reducer","initialState","init","reducerState","dispatch","cancel","infoModals","toggleInfoModal","autoReload","emitEvent","fetchUserPermissions","formatMessage","menu","toJS","components","contentTypes","isLoading","isLoadingForDataToBeSet","initialData","modifiedData","reservedNames","pathname","push","contentTypeMatch","pluginId","componentMatch","formatMessageRef","current","isInDevelopmentMode","isInContentTypeView","firstKeyToMainSchema","currentUid","abortController","AbortController","signal","getDataRef","endPoint","Promise","all","map","method","componentsArray","data","contentTypesArray","orderedComponents","orderedContenTypes","type","get","console","error","err","strapi","notification","toggle","message","id","setModifiedData","didModifiedComponents","length","addAttribute","attributeToSet","forTarget","targetUid","isEditing","initialAttribute","shouldAddComponentToData","actionType","addCreatedComponentToDynamicZone","dynamicZoneTarget","componentsToAdd","cancelChanges","toggleModalCancel","createSchema","schemaType","uid","componentCategory","changeDynamicZoneComponents","newComponents","removeAttribute","mainDataKey","attributeToRemoveName","componentUid","deleteCategory","categoryUid","requestURL","userConfirm","window","confirm","search","lockApp","updatePermissions","unlockApp","deleteData","isTemporary","updateAppMenu","editCategory","body","getAllComponentsThatHaveAComponentInTheirAttributes","allCompos","Object","assign","currentEditedCompo","composWithCompos","getAllNestedComponents","appNestedCompo","editingDataNestedCompos","removeComponentFromDynamicZone","dzName","componentToRemoveIndex","currentSchemas","schemaToSet","schema","attributes","retrievedComponents","newSchemaToSet","dataShape","hasJustCreatedSchema","shouldRedirect","dataSet","keys","includes","redirectEndpoint","allowedEndpoints","filter","sort","submitData","additionalContentTypeData","isCreating","contentType","component","baseURL","oldName","newName","response","prev","getModels","updateSchema","componentUID","allComponentsCategories","allComponentsIconAlreadyTaken","componentsGroupedByCategory","componentsThatHaveOtherComponentInTheirAttributes","nestedComponents","sortedContentTypesList","propTypes","PropTypes","array","isRequired","node"],"mappings":"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","sourcesContent":["import React, { memo, useEffect, useMemo, useReducer, useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { get, groupBy, set, size } from 'lodash';\nimport {\n  request,\n  LoadingIndicatorPage,\n  useGlobalContext,\n  PopUpWarning,\n} from 'strapi-helper-plugin';\nimport { useHistory, useLocation, useRouteMatch, Redirect } from 'react-router-dom';\nimport DataManagerContext from '../../contexts/DataManagerContext';\nimport getTrad from '../../utils/getTrad';\nimport makeUnique from '../../utils/makeUnique';\nimport pluginId from '../../pluginId';\nimport FormModal from '../FormModal';\nimport init from './init';\nimport reducer, { initialState } from './reducer';\nimport createDataObject from './utils/createDataObject';\nimport createModifiedDataSchema, {\n  orderAllDataAttributesWithImmutable,\n} from './utils/createModifiedDataSchema';\nimport retrieveSpecificInfoFromComponents from './utils/retrieveSpecificInfoFromComponents';\nimport retrieveComponentsFromSchema from './utils/retrieveComponentsFromSchema';\nimport retrieveNestedComponents from './utils/retrieveNestedComponents';\nimport { retrieveComponentsThatHaveComponents } from './utils/retrieveComponentsThatHaveComponents';\nimport {\n  getComponentsToPost,\n  formatMainDataType,\n  getCreatedAndModifiedComponents,\n  sortContentType,\n} from './utils/cleanData';\n\nconst DataManagerProvider = ({ allIcons, children }) => {\n  const [reducerState, dispatch] = useReducer(reducer, initialState, init);\n  const [infoModals, toggleInfoModal] = useState({ cancel: false });\n  const { autoReload, emitEvent, fetchUserPermissions, formatMessage, menu } = useGlobalContext();\n  const {\n    components,\n    contentTypes,\n    isLoading,\n    isLoadingForDataToBeSet,\n    initialData,\n    modifiedData,\n    reservedNames,\n  } = reducerState.toJS();\n  const { pathname } = useLocation();\n  const { push } = useHistory();\n  const contentTypeMatch = useRouteMatch(`/plugins/${pluginId}/content-types/:uid`);\n  const componentMatch = useRouteMatch(\n    `/plugins/${pluginId}/component-categories/:categoryUid/:componentUid`\n  );\n\n  const formatMessageRef = useRef();\n  formatMessageRef.current = formatMessage;\n  const isInDevelopmentMode = autoReload;\n\n  const isInContentTypeView = contentTypeMatch !== null;\n  const firstKeyToMainSchema = isInContentTypeView ? 'contentType' : 'component';\n  const currentUid = isInContentTypeView\n    ? get(contentTypeMatch, 'params.uid', null)\n    : get(componentMatch, 'params.componentUid', null);\n  const abortController = new AbortController();\n  const { signal } = abortController;\n  const getDataRef = useRef();\n  const endPoint = isInContentTypeView ? 'content-types' : 'components';\n\n  getDataRef.current = async () => {\n    try {\n      const [\n        { data: componentsArray },\n        { data: contentTypesArray },\n        reservedNames,\n      ] = await Promise.all(\n        ['components', 'content-types', 'reserved-names'].map(endPoint => {\n          return request(`/${pluginId}/${endPoint}`, {\n            method: 'GET',\n            signal,\n          });\n        })\n      );\n\n      const components = createDataObject(componentsArray);\n      const contentTypes = createDataObject(contentTypesArray);\n      const orderedComponents = orderAllDataAttributesWithImmutable({\n        components,\n      });\n      const orderedContenTypes = orderAllDataAttributesWithImmutable({\n        components: contentTypes,\n      });\n\n      dispatch({\n        type: 'GET_DATA_SUCCEEDED',\n        components: orderedComponents.get('components'),\n        contentTypes: orderedContenTypes.get('components'),\n        reservedNames,\n      });\n    } catch (err) {\n      console.error({ err });\n      strapi.notification.toggle({\n        type: 'warning',\n        message: { id: 'notification.error' },\n      });\n    }\n  };\n\n  useEffect(() => {\n    getDataRef.current();\n  }, []);\n\n  useEffect(() => {\n    // We need to set the modifiedData after the data has been retrieved\n    // and also on pathname change\n    if (!isLoading && currentUid) {\n      setModifiedData();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isLoading, pathname, currentUid]);\n\n  useEffect(() => {\n    if (!autoReload) {\n      strapi.notification.toggle({\n        type: 'info',\n        message: { id: getTrad('notification.info.autoreaload-disable') },\n      });\n    }\n  }, [autoReload]);\n\n  const didModifiedComponents =\n    getCreatedAndModifiedComponents(modifiedData.components || {}, components).length > 0;\n\n  const addAttribute = (\n    attributeToSet,\n    forTarget,\n    targetUid,\n    isEditing = false,\n    initialAttribute,\n    shouldAddComponentToData = false\n  ) => {\n    const actionType = isEditing ? 'EDIT_ATTRIBUTE' : 'ADD_ATTRIBUTE';\n\n    dispatch({\n      type: actionType,\n      attributeToSet,\n      forTarget,\n      targetUid,\n      initialAttribute,\n      shouldAddComponentToData,\n    });\n  };\n\n  const addCreatedComponentToDynamicZone = (dynamicZoneTarget, componentsToAdd) => {\n    dispatch({\n      type: 'ADD_CREATED_COMPONENT_TO_DYNAMIC_ZONE',\n      dynamicZoneTarget,\n      componentsToAdd,\n    });\n  };\n\n  const cancelChanges = () => {\n    toggleModalCancel();\n    dispatch({ type: 'CANCEL_CHANGES' });\n  };\n\n  const createSchema = (\n    data,\n    schemaType,\n    uid,\n    componentCategory,\n    shouldAddComponentToData = false\n  ) => {\n    const type = schemaType === 'contentType' ? 'CREATE_SCHEMA' : 'CREATE_COMPONENT_SCHEMA';\n\n    dispatch({\n      type,\n      data,\n      componentCategory,\n      schemaType,\n      uid,\n      shouldAddComponentToData,\n    });\n  };\n\n  const changeDynamicZoneComponents = (dynamicZoneTarget, newComponents) => {\n    dispatch({\n      type: 'CHANGE_DYNAMIC_ZONE_COMPONENTS',\n      dynamicZoneTarget,\n      newComponents,\n    });\n  };\n\n  const removeAttribute = (mainDataKey, attributeToRemoveName, componentUid = '') => {\n    const type =\n      mainDataKey === 'components' ? 'REMOVE_FIELD_FROM_DISPLAYED_COMPONENT' : 'REMOVE_FIELD';\n\n    if (mainDataKey === 'contentType') {\n      emitEvent('willDeleteFieldOfContentType');\n    }\n\n    dispatch({\n      type,\n      mainDataKey,\n      attributeToRemoveName,\n      componentUid,\n    });\n  };\n\n  const deleteCategory = async categoryUid => {\n    try {\n      const requestURL = `/${pluginId}/component-categories/${categoryUid}`;\n      // eslint-disable-next-line no-alert\n      const userConfirm = window.confirm(\n        formatMessage({\n          id: getTrad('popUpWarning.bodyMessage.category.delete'),\n        })\n      );\n      // Close the modal\n      push({ search: '' });\n\n      if (userConfirm) {\n        strapi.lockApp();\n\n        await request(requestURL, { method: 'DELETE' }, true);\n\n        await updatePermissions();\n\n        // Reload the plugin so the cycle is new again\n        dispatch({ type: 'RELOAD_PLUGIN' });\n        // Refetch all the data\n        getDataRef.current();\n      }\n    } catch (err) {\n      console.error({ err });\n      strapi.notification.toggle({\n        type: 'warning',\n        message: { id: 'notification.error' },\n      });\n    } finally {\n      strapi.unlockApp();\n    }\n  };\n\n  const deleteData = async () => {\n    try {\n      const requestURL = `/${pluginId}/${endPoint}/${currentUid}`;\n      const isTemporary = get(modifiedData, [firstKeyToMainSchema, 'isTemporary'], false);\n      // eslint-disable-next-line no-alert\n      const userConfirm = window.confirm(\n        formatMessage({\n          id: getTrad(\n            `popUpWarning.bodyMessage.${isInContentTypeView ? 'contentType' : 'component'}.delete`\n          ),\n        })\n      );\n\n      // Close the modal\n      push({ search: '' });\n\n      if (userConfirm) {\n        if (isTemporary) {\n          // Delete the not saved type\n          // Here we just need to reset the components to the initial ones and also the content types\n          // Doing so will trigging a url change since the type doesn't exist in either the contentTypes or the components\n          // so the modified and the initial data will also be reset in the useEffect...\n          dispatch({ type: 'DELETE_NOT_SAVED_TYPE' });\n\n          return;\n        }\n\n        strapi.lockApp();\n\n        await request(requestURL, { method: 'DELETE' }, true);\n\n        // Reload the plugin so the cycle is new again\n        dispatch({ type: 'RELOAD_PLUGIN' });\n\n        // Refetch the permissions\n        await updatePermissions();\n\n        // Update the app menu\n        await updateAppMenu();\n        // Refetch all the data\n        getDataRef.current();\n      }\n    } catch (err) {\n      console.error({ err });\n      strapi.notification.toggle({\n        type: 'warning',\n        message: { id: 'notification.error' },\n      });\n    } finally {\n      strapi.unlockApp();\n    }\n  };\n\n  const editCategory = async (categoryUid, body) => {\n    try {\n      const requestURL = `/${pluginId}/component-categories/${categoryUid}`;\n\n      // Close the modal\n      push({ search: '' });\n\n      // Lock the app\n      strapi.lockApp();\n\n      // Update the category\n      await request(requestURL, { method: 'PUT', body }, true);\n\n      await updatePermissions();\n\n      // Reload the plugin so the cycle is new again\n      dispatch({ type: 'RELOAD_PLUGIN' });\n      // Refetch all the data\n      getDataRef.current();\n    } catch (err) {\n      console.error({ err });\n      strapi.notification.toggle({\n        type: 'warning',\n        message: { id: 'notification.error' },\n      });\n    } finally {\n      strapi.unlockApp();\n    }\n  };\n\n  const getAllComponentsThatHaveAComponentInTheirAttributes = () => {\n    // We need to create an object with all the non modified compos\n    // plus the ones that are created on the fly\n    const allCompos = Object.assign({}, components, modifiedData.components);\n\n    // Since we apply the modification of a specific component only in the modified data\n    // we need to update all compos with the modifications\n    if (!isInContentTypeView) {\n      const currentEditedCompo = get(modifiedData, 'component', {});\n\n      set(allCompos, get(currentEditedCompo, ['uid'], ''), currentEditedCompo);\n    }\n\n    const composWithCompos = retrieveComponentsThatHaveComponents(allCompos);\n\n    return makeUnique(composWithCompos);\n  };\n\n  const getAllNestedComponents = () => {\n    const appNestedCompo = retrieveNestedComponents(components);\n    const editingDataNestedCompos = retrieveNestedComponents(modifiedData.components || {});\n\n    return makeUnique([...editingDataNestedCompos, ...appNestedCompo]);\n  };\n\n  const removeComponentFromDynamicZone = (dzName, componentToRemoveIndex) => {\n    dispatch({\n      type: 'REMOVE_COMPONENT_FROM_DYNAMIC_ZONE',\n      dzName,\n      componentToRemoveIndex,\n    });\n  };\n\n  const setModifiedData = () => {\n    const currentSchemas = isInContentTypeView ? contentTypes : components;\n    const schemaToSet = get(currentSchemas, currentUid, {\n      schema: { attributes: {} },\n    });\n\n    const retrievedComponents = retrieveComponentsFromSchema(\n      schemaToSet.schema.attributes,\n      components\n    );\n    const newSchemaToSet = createModifiedDataSchema(\n      schemaToSet,\n      retrievedComponents,\n      components,\n      isInContentTypeView\n    );\n\n    const dataShape = orderAllDataAttributesWithImmutable(newSchemaToSet, isInContentTypeView);\n\n    // This prevents from losing the created content type or component when clicking on the link from the left menu\n    const hasJustCreatedSchema =\n      get(schemaToSet, 'isTemporary', false) &&\n      size(get(schemaToSet, 'schema.attributes', {})) === 0;\n\n    dispatch({\n      type: 'SET_MODIFIED_DATA',\n      schemaToSet: dataShape,\n      hasJustCreatedSchema,\n    });\n  };\n\n  const shouldRedirect = useMemo(() => {\n    const dataSet = isInContentTypeView ? contentTypes : components;\n\n    return !Object.keys(dataSet).includes(currentUid) && !isLoading;\n  }, [components, contentTypes, currentUid, isInContentTypeView, isLoading]);\n\n  const redirectEndpoint = useMemo(() => {\n    const allowedEndpoints = Object.keys(contentTypes)\n      .filter(uid => get(contentTypes, [uid, 'schema', 'editable'], true))\n      .sort();\n\n    return get(allowedEndpoints, '0', '');\n  }, [contentTypes]);\n\n  if (shouldRedirect) {\n    return <Redirect to={`/plugins/${pluginId}/content-types/${redirectEndpoint}`} />;\n  }\n\n  const submitData = async additionalContentTypeData => {\n    try {\n      const isCreating = get(modifiedData, [firstKeyToMainSchema, 'isTemporary'], false);\n      const body = {\n        components: getComponentsToPost(\n          modifiedData.components,\n          components,\n          currentUid,\n          isCreating\n        ),\n      };\n\n      if (isInContentTypeView) {\n        body.contentType = {\n          ...formatMainDataType(modifiedData.contentType),\n          ...additionalContentTypeData,\n        };\n\n        emitEvent('willSaveContentType');\n      } else {\n        body.component = formatMainDataType(modifiedData.component, true);\n\n        emitEvent('willSaveComponent');\n      }\n\n      const method = isCreating ? 'POST' : 'PUT';\n\n      const baseURL = `/${pluginId}/${endPoint}`;\n      const requestURL = isCreating ? baseURL : `${baseURL}/${currentUid}`;\n\n      // Lock the app\n      strapi.lockApp();\n\n      await request(requestURL, { method, body }, true);\n\n      await updatePermissions();\n\n      // Update the app menu\n      await updateAppMenu();\n\n      // Submit ct tracking success\n      if (isInContentTypeView) {\n        emitEvent('didSaveContentType');\n\n        const oldName = get(body, ['contentType', 'schema', 'name'], '');\n        const newName = get(initialData, ['contentType', 'schema', 'name'], '');\n\n        if (!isCreating && oldName !== newName) {\n          emitEvent('didEditNameOfContentType');\n        }\n      } else {\n        emitEvent('didSaveComponent');\n      }\n\n      // Reload the plugin so the cycle is new again\n      dispatch({ type: 'RELOAD_PLUGIN' });\n      // Refetch all the data\n      getDataRef.current();\n    } catch (err) {\n      if (!isInContentTypeView) {\n        emitEvent('didNotSaveComponent');\n      }\n\n      console.error({ err: err.response });\n      strapi.notification.toggle({\n        type: 'warning',\n        message: { id: 'notification.error' },\n      });\n    } finally {\n      strapi.unlockApp();\n    }\n  };\n\n  // Open the modal warning cancel changes\n  const toggleModalCancel = () => {\n    toggleInfoModal(prev => ({ ...prev, cancel: !prev.cancel }));\n  };\n\n  // Update the menu using the internal API\n  const updateAppMenu = async () => {\n    if (menu.getModels) {\n      await menu.getModels();\n    }\n  };\n\n  const updatePermissions = async () => {\n    await fetchUserPermissions();\n  };\n\n  const updateSchema = (data, schemaType, componentUID) => {\n    dispatch({\n      type: 'UPDATE_SCHEMA',\n      data,\n      schemaType,\n      uid: componentUID,\n    });\n  };\n\n  return (\n    <DataManagerContext.Provider\n      value={{\n        addAttribute,\n        addCreatedComponentToDynamicZone,\n        allComponentsCategories: retrieveSpecificInfoFromComponents(components, ['category']),\n        allComponentsIconAlreadyTaken: retrieveSpecificInfoFromComponents(components, [\n          'schema',\n          'icon',\n        ]),\n        allIcons,\n        changeDynamicZoneComponents,\n        components,\n        componentsGroupedByCategory: groupBy(components, 'category'),\n        componentsThatHaveOtherComponentInTheirAttributes: getAllComponentsThatHaveAComponentInTheirAttributes(),\n        contentTypes,\n        createSchema,\n        deleteCategory,\n        deleteData,\n        editCategory,\n        isInDevelopmentMode,\n        initialData,\n        isInContentTypeView,\n        modifiedData,\n        nestedComponents: getAllNestedComponents(),\n        removeAttribute,\n        removeComponentFromDynamicZone,\n        reservedNames,\n        setModifiedData,\n        sortedContentTypesList: sortContentType(contentTypes),\n        submitData,\n        toggleModalCancel,\n        updateSchema,\n      }}\n    >\n      {isLoadingForDataToBeSet ? (\n        <LoadingIndicatorPage />\n      ) : (\n        <>\n          {children}\n          {isInDevelopmentMode && (\n            <>\n              <FormModal />\n              <PopUpWarning\n                isOpen={infoModals.cancel}\n                toggleModal={toggleModalCancel}\n                content={{\n                  message: getTrad(\n                    `popUpWarning.bodyMessage.cancel-modifications${\n                      didModifiedComponents ? '.with-components' : ''\n                    }`\n                  ),\n                }}\n                popUpWarningType=\"danger\"\n                onConfirm={() => {\n                  cancelChanges();\n                }}\n              />\n            </>\n          )}\n        </>\n      )}\n    </DataManagerContext.Provider>\n  );\n};\n\nDataManagerProvider.propTypes = {\n  allIcons: PropTypes.array.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nexport default memo(DataManagerProvider);\n"]},"metadata":{},"sourceType":"script"}