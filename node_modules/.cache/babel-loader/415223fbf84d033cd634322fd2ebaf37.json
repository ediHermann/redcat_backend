{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactRouterDom = require(\"react-router-dom\");\n\nvar _lodash = require(\"lodash\");\n\nvar _strapiHelperPlugin = require(\"strapi-helper-plugin\");\n\nvar _custom = require(\"@buffetjs/custom\");\n\nvar _core = require(\"@buffetjs/core\");\n\nvar _formik = require(\"formik\");\n\nvar _reactIntl = require(\"react-intl\");\n\nvar _SettingsPageTitle = _interopRequireDefault(require(\"../../../components/SettingsPageTitle\"));\n\nvar _ContainerFluid = _interopRequireDefault(require(\"../../../components/ContainerFluid\"));\n\nvar _Roles = require(\"../../../components/Roles\");\n\nvar _hooks = require(\"../../../hooks\");\n\nvar _utils = require(\"../../../utils\");\n\nvar _schema = _interopRequireDefault(require(\"./utils/schema\"));\n\nvar EditPage = function EditPage() {\n  var _useIntl = (0, _reactIntl.useIntl)(),\n      formatMessage = _useIntl.formatMessage;\n\n  var _useGlobalContext = (0, _strapiHelperPlugin.useGlobalContext)(),\n      emitEvent = _useGlobalContext.emitEvent,\n      settingsBaseURL = _useGlobalContext.settingsBaseURL;\n\n  var _useRouteMatch = (0, _reactRouterDom.useRouteMatch)(\"\".concat(settingsBaseURL, \"/roles/:id\")),\n      id = _useRouteMatch.params.id;\n\n  var _useState = (0, _react.useState)(false),\n      _useState2 = (0, _slicedToArray2[\"default\"])(_useState, 2),\n      isSubmiting = _useState2[0],\n      setIsSubmiting = _useState2[1];\n\n  var permissionsRef = (0, _react.useRef)();\n\n  var _useFetchPermissionsL = (0, _hooks.useFetchPermissionsLayout)(id),\n      isLayoutLoading = _useFetchPermissionsL.isLoading,\n      permissionsLayout = _useFetchPermissionsL.data;\n\n  var _useFetchRole = (0, _hooks.useFetchRole)(id),\n      role = _useFetchRole.role,\n      rolePermissions = _useFetchRole.permissions,\n      isRoleLoading = _useFetchRole.isLoading,\n      onSubmitSucceeded = _useFetchRole.onSubmitSucceeded;\n  /* eslint-disable indent */\n\n\n  var headerActions = function headerActions(handleSubmit, handleReset) {\n    return isLayoutLoading && isRoleLoading ? [] : [{\n      label: formatMessage({\n        id: 'app.components.Button.reset',\n        defaultMessage: 'Reset'\n      }),\n      disabled: role.code === 'strapi-super-admin',\n      onClick: function onClick() {\n        handleReset();\n        permissionsRef.current.resetForm();\n      },\n      color: 'cancel',\n      type: 'button'\n    }, {\n      label: formatMessage({\n        id: 'app.components.Button.save',\n        defaultMessage: 'Save'\n      }),\n      disabled: role.code === 'strapi-super-admin',\n      onClick: handleSubmit,\n      color: 'success',\n      type: 'submit',\n      isLoading: isSubmiting\n    }];\n  };\n  /* eslint-enable indent */\n\n\n  var handleEditRoleSubmit = /*#__PURE__*/function () {\n    var _ref = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(data) {\n      var permissionsToSend, checkConditionsDiff, message;\n      return _regenerator[\"default\"].wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              strapi.lockAppWithOverlay();\n              setIsSubmiting(true);\n              permissionsToSend = permissionsRef.current.getPermissions();\n\n              checkConditionsDiff = function checkConditionsDiff() {\n                var diff = (0, _strapiHelperPlugin.difference)((0, _lodash.get)(permissionsToSend, 'contentTypesPermissions', {}), (0, _lodash.get)(rolePermissions, 'contentTypesPermissions', {}));\n\n                if ((0, _lodash.isEmpty)(diff)) {\n                  return false;\n                }\n\n                return Object.keys(diff).some(function (key) {\n                  return (0, _lodash.has)(diff, [key, 'conditions']);\n                });\n              };\n\n              _context.next = 7;\n              return (0, _strapiHelperPlugin.request)(\"/admin/roles/\".concat(id), {\n                method: 'PUT',\n                body: data\n              });\n\n            case 7:\n              if (!(role.code !== 'strapi-super-admin' && !(0, _lodash.isEmpty)(permissionsToSend))) {\n                _context.next = 11;\n                break;\n              }\n\n              _context.next = 10;\n              return (0, _strapiHelperPlugin.request)(\"/admin/roles/\".concat(id, \"/permissions\"), {\n                method: 'PUT',\n                body: {\n                  permissions: (0, _utils.formatPermissionsToApi)(permissionsToSend)\n                }\n              });\n\n            case 10:\n              if (checkConditionsDiff()) {\n                emitEvent('didUpdateConditions');\n              }\n\n            case 11:\n              permissionsRef.current.setFormAfterSubmit();\n              onSubmitSucceeded({\n                name: data.name,\n                description: data.description\n              });\n              strapi.notification.toggle({\n                type: 'success',\n                message: {\n                  id: 'notification.success.saved'\n                }\n              });\n              _context.next = 21;\n              break;\n\n            case 16:\n              _context.prev = 16;\n              _context.t0 = _context[\"catch\"](0);\n              console.error(_context.t0.response);\n              message = (0, _lodash.get)(_context.t0, 'response.payload.message', 'An error occured');\n              strapi.notification.toggle({\n                type: 'warning',\n                message: message\n              });\n\n            case 21:\n              _context.prev = 21;\n              setIsSubmiting(false);\n              strapi.unlockApp();\n              return _context.finish(21);\n\n            case 25:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 16, 21, 25]]);\n    }));\n\n    return function handleEditRoleSubmit(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_react[\"default\"].createElement(_react[\"default\"].Fragment, null, /*#__PURE__*/_react[\"default\"].createElement(_SettingsPageTitle[\"default\"], {\n    name: \"Roles\"\n  }), /*#__PURE__*/_react[\"default\"].createElement(_formik.Formik, {\n    enableReinitialize: true,\n    initialValues: {\n      name: role.name,\n      description: role.description\n    },\n    onSubmit: handleEditRoleSubmit,\n    validationSchema: _schema[\"default\"],\n    validateOnChange: false\n  }, function (_ref2) {\n    var handleSubmit = _ref2.handleSubmit,\n        values = _ref2.values,\n        errors = _ref2.errors,\n        handleReset = _ref2.handleReset,\n        handleChange = _ref2.handleChange,\n        handleBlur = _ref2.handleBlur;\n    return /*#__PURE__*/_react[\"default\"].createElement(\"form\", {\n      onSubmit: handleSubmit\n    }, /*#__PURE__*/_react[\"default\"].createElement(_ContainerFluid[\"default\"], {\n      padding: \"0\"\n    }, /*#__PURE__*/_react[\"default\"].createElement(_custom.Header, {\n      title: {\n        label: formatMessage({\n          id: 'Settings.roles.edit.title',\n          defaultMessage: 'Edit a role'\n        })\n      },\n      content: formatMessage({\n        id: 'Settings.roles.create.description',\n        defaultMessage: 'Define the rights given to the role'\n      }),\n      actions: headerActions(handleSubmit, handleReset),\n      isLoading: isLayoutLoading || isRoleLoading\n    }), /*#__PURE__*/_react[\"default\"].createElement(_strapiHelperPlugin.BaselineAlignment, {\n      top: true,\n      size: \"3px\"\n    }), /*#__PURE__*/_react[\"default\"].createElement(_Roles.RoleForm, {\n      isLoading: isRoleLoading,\n      disabled: role.code === 'strapi-super-admin',\n      errors: errors,\n      values: values,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      role: role\n    }), !isLayoutLoading && !isRoleLoading && /*#__PURE__*/_react[\"default\"].createElement(_core.Padded, {\n      top: true,\n      bottom: true,\n      size: \"md\"\n    }, /*#__PURE__*/_react[\"default\"].createElement(_Roles.Permissions, {\n      permissionsLayout: permissionsLayout,\n      rolePermissions: rolePermissions,\n      role: role,\n      ref: permissionsRef\n    }))));\n  }));\n};\n\nvar _default = EditPage;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["D:/webstorm_projects/redcat_backend/.cache/admin/src/containers/Roles/EditPage/index.js"],"names":["EditPage","formatMessage","emitEvent","settingsBaseURL","id","params","isSubmiting","setIsSubmiting","permissionsRef","isLayoutLoading","isLoading","permissionsLayout","data","role","rolePermissions","permissions","isRoleLoading","onSubmitSucceeded","headerActions","handleSubmit","handleReset","label","defaultMessage","disabled","code","onClick","current","resetForm","color","type","handleEditRoleSubmit","strapi","lockAppWithOverlay","permissionsToSend","getPermissions","checkConditionsDiff","diff","Object","keys","some","key","method","body","setFormAfterSubmit","name","description","notification","toggle","message","console","error","response","unlockApp","schema","values","errors","handleChange","handleBlur"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from 'react';\nimport { useRouteMatch } from 'react-router-dom';\nimport { get, has, isEmpty } from 'lodash';\nimport { BaselineAlignment, useGlobalContext, request, difference } from 'strapi-helper-plugin';\nimport { Header } from '@buffetjs/custom';\nimport { Padded } from '@buffetjs/core';\nimport { Formik } from 'formik';\nimport { useIntl } from 'react-intl';\nimport PageTitle from '../../../components/SettingsPageTitle';\nimport ContainerFluid from '../../../components/ContainerFluid';\nimport { Permissions, RoleForm } from '../../../components/Roles';\nimport { useFetchRole, useFetchPermissionsLayout } from '../../../hooks';\nimport { formatPermissionsToApi } from '../../../utils';\nimport schema from './utils/schema';\n\nconst EditPage = () => {\n  const { formatMessage } = useIntl();\n  const { emitEvent, settingsBaseURL } = useGlobalContext();\n  const {\n    params: { id },\n  } = useRouteMatch(`${settingsBaseURL}/roles/:id`);\n  const [isSubmiting, setIsSubmiting] = useState(false);\n  const permissionsRef = useRef();\n\n  const { isLoading: isLayoutLoading, data: permissionsLayout } = useFetchPermissionsLayout(id);\n  const {\n    role,\n    permissions: rolePermissions,\n    isLoading: isRoleLoading,\n    onSubmitSucceeded,\n  } = useFetchRole(id);\n\n  /* eslint-disable indent */\n  const headerActions = (handleSubmit, handleReset) =>\n    isLayoutLoading && isRoleLoading\n      ? []\n      : [\n          {\n            label: formatMessage({\n              id: 'app.components.Button.reset',\n              defaultMessage: 'Reset',\n            }),\n            disabled: role.code === 'strapi-super-admin',\n            onClick: () => {\n              handleReset();\n              permissionsRef.current.resetForm();\n            },\n            color: 'cancel',\n            type: 'button',\n          },\n          {\n            label: formatMessage({\n              id: 'app.components.Button.save',\n              defaultMessage: 'Save',\n            }),\n            disabled: role.code === 'strapi-super-admin',\n            onClick: handleSubmit,\n            color: 'success',\n            type: 'submit',\n            isLoading: isSubmiting,\n          },\n        ];\n  /* eslint-enable indent */\n\n  const handleEditRoleSubmit = async data => {\n    try {\n      strapi.lockAppWithOverlay();\n      setIsSubmiting(true);\n\n      const permissionsToSend = permissionsRef.current.getPermissions();\n\n      const checkConditionsDiff = () => {\n        const diff = difference(\n          get(permissionsToSend, 'contentTypesPermissions', {}),\n          get(rolePermissions, 'contentTypesPermissions', {})\n        );\n\n        if (isEmpty(diff)) {\n          return false;\n        }\n\n        return Object.keys(diff).some(key => {\n          return has(diff, [key, 'conditions']);\n        });\n      };\n\n      await request(`/admin/roles/${id}`, {\n        method: 'PUT',\n        body: data,\n      });\n\n      if (role.code !== 'strapi-super-admin' && !isEmpty(permissionsToSend)) {\n        await request(`/admin/roles/${id}/permissions`, {\n          method: 'PUT',\n          body: {\n            permissions: formatPermissionsToApi(permissionsToSend),\n          },\n        });\n\n        if (checkConditionsDiff()) {\n          emitEvent('didUpdateConditions');\n        }\n      }\n\n      permissionsRef.current.setFormAfterSubmit();\n      onSubmitSucceeded({ name: data.name, description: data.description });\n\n      strapi.notification.toggle({\n        type: 'success',\n        message: { id: 'notification.success.saved' },\n      });\n    } catch (err) {\n      console.error(err.response);\n      const message = get(err, 'response.payload.message', 'An error occured');\n\n      strapi.notification.toggle({\n        type: 'warning',\n        message,\n      });\n    } finally {\n      setIsSubmiting(false);\n      strapi.unlockApp();\n    }\n  };\n\n  return (\n    <>\n      <PageTitle name=\"Roles\" />\n      <Formik\n        enableReinitialize\n        initialValues={{\n          name: role.name,\n          description: role.description,\n        }}\n        onSubmit={handleEditRoleSubmit}\n        validationSchema={schema}\n        validateOnChange={false}\n      >\n        {({ handleSubmit, values, errors, handleReset, handleChange, handleBlur }) => (\n          <form onSubmit={handleSubmit}>\n            <ContainerFluid padding=\"0\">\n              <Header\n                title={{\n                  label: formatMessage({\n                    id: 'Settings.roles.edit.title',\n                    defaultMessage: 'Edit a role',\n                  }),\n                }}\n                content={formatMessage({\n                  id: 'Settings.roles.create.description',\n                  defaultMessage: 'Define the rights given to the role',\n                })}\n                actions={headerActions(handleSubmit, handleReset)}\n                isLoading={isLayoutLoading || isRoleLoading}\n              />\n              <BaselineAlignment top size=\"3px\" />\n              <RoleForm\n                isLoading={isRoleLoading}\n                disabled={role.code === 'strapi-super-admin'}\n                errors={errors}\n                values={values}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                role={role}\n              />\n              {!isLayoutLoading && !isRoleLoading && (\n                <Padded top bottom size=\"md\">\n                  <Permissions\n                    permissionsLayout={permissionsLayout}\n                    rolePermissions={rolePermissions}\n                    role={role}\n                    ref={permissionsRef}\n                  />\n                </Padded>\n              )}\n            </ContainerFluid>\n          </form>\n        )}\n      </Formik>\n    </>\n  );\n};\n\nexport default EditPage;\n"]},"metadata":{},"sourceType":"script"}