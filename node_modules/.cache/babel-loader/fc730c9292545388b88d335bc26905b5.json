{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _reactSelect = require(\"react-select\");\n\nvar _core = require(\"@buffetjs/core\");\n\nvar _reactIntl = require(\"react-intl\");\n\n/* eslint-disable indent */\nvar Value = function Value(_ref) {\n  var children = _ref.children,\n      selectProps = _ref.selectProps,\n      props = (0, _objectWithoutProperties2[\"default\"])(_ref, [\"children\", \"selectProps\"]);\n\n  var _useIntl = (0, _reactIntl.useIntl)(),\n      formatMessage = _useIntl.formatMessage;\n\n  var SingleValue = _reactSelect.components.SingleValue;\n  return /*#__PURE__*/_react[\"default\"].createElement(SingleValue, props, /*#__PURE__*/_react[\"default\"].createElement(_core.Text, {\n    style: {\n      paddingTop: 1\n    }\n  }, selectProps.value.length === 0 ? 'Anytime' : formatMessage({\n    id: \"Settings.permissions.conditions.selected.\".concat(selectProps.value.length > 1 ? 'plural' : 'singular')\n  }, {\n    number: selectProps.value.length\n  })));\n};\n\nValue.defaultProps = {\n  children: null,\n  selectProps: {\n    value: []\n  }\n};\nValue.propTypes = {\n  children: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].string, _propTypes[\"default\"].arrayOf(_propTypes[\"default\"].string)]),\n  selectProps: _propTypes[\"default\"].shape({\n    value: _propTypes[\"default\"].array\n  })\n};\nvar _default = Value;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["D:/webstorm_projects/redcat_backend/.cache/admin/src/components/Roles/ConditionsSelect/SingleValue.js"],"names":["Value","children","selectProps","props","formatMessage","SingleValue","components","paddingTop","value","length","id","number","defaultProps","propTypes","PropTypes","oneOfType","string","arrayOf","shape","array"],"mappings":";;;;;;;;;;;AACA;;AACA;;AACA;;AACA;;AACA;;AALA;AAOA,IAAMA,KAAK,GAAG,SAARA,KAAQ,OAAyC;AAAA,MAAtCC,QAAsC,QAAtCA,QAAsC;AAAA,MAA5BC,WAA4B,QAA5BA,WAA4B;AAAA,MAAZC,KAAY;;AAAA,iBAC3B,yBAD2B;AAAA,MAC7CC,aAD6C,YAC7CA,aAD6C;;AAErD,MAAMC,WAAW,GAAGC,wBAAWD,WAA/B;AAEA,sBACE,gCAAC,WAAD,EAAiBF,KAAjB,eACE,gCAAC,UAAD;AAAM,IAAA,KAAK,EAAE;AAAEI,MAAAA,UAAU,EAAE;AAAd;AAAb,KACGL,WAAW,CAACM,KAAZ,CAAkBC,MAAlB,KAA6B,CAA7B,GACG,SADH,GAEGL,aAAa,CACX;AACEM,IAAAA,EAAE,qDACAR,WAAW,CAACM,KAAZ,CAAkBC,MAAlB,GAA2B,CAA3B,GAA+B,QAA/B,GAA0C,UAD1C;AADJ,GADW,EAMX;AAAEE,IAAAA,MAAM,EAAET,WAAW,CAACM,KAAZ,CAAkBC;AAA5B,GANW,CAHnB,CADF,CADF;AAgBD,CApBD;;AAsBAT,KAAK,CAACY,YAAN,GAAqB;AACnBX,EAAAA,QAAQ,EAAE,IADS;AAEnBC,EAAAA,WAAW,EAAE;AACXM,IAAAA,KAAK,EAAE;AADI;AAFM,CAArB;AAOAR,KAAK,CAACa,SAAN,GAAkB;AAChBZ,EAAAA,QAAQ,EAAEa,sBAAUC,SAAV,CAAoB,CAACD,sBAAUE,MAAX,EAAmBF,sBAAUG,OAAV,CAAkBH,sBAAUE,MAA5B,CAAnB,CAApB,CADM;AAEhBd,EAAAA,WAAW,EAAEY,sBAAUI,KAAV,CAAgB;AAC3BV,IAAAA,KAAK,EAAEM,sBAAUK;AADU,GAAhB;AAFG,CAAlB;eAOenB,K","sourcesContent":["/* eslint-disable indent */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { components } from 'react-select';\nimport { Text } from '@buffetjs/core';\nimport { useIntl } from 'react-intl';\n\nconst Value = ({ children, selectProps, ...props }) => {\n  const { formatMessage } = useIntl();\n  const SingleValue = components.SingleValue;\n\n  return (\n    <SingleValue {...props}>\n      <Text style={{ paddingTop: 1 }}>\n        {selectProps.value.length === 0\n          ? 'Anytime'\n          : formatMessage(\n              {\n                id: `Settings.permissions.conditions.selected.${\n                  selectProps.value.length > 1 ? 'plural' : 'singular'\n                }`,\n              },\n              { number: selectProps.value.length }\n            )}\n      </Text>\n    </SingleValue>\n  );\n};\n\nValue.defaultProps = {\n  children: null,\n  selectProps: {\n    value: [],\n  },\n};\n\nValue.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)]),\n  selectProps: PropTypes.shape({\n    value: PropTypes.array,\n  }),\n};\n\nexport default Value;\n"]},"metadata":{},"sourceType":"script"}