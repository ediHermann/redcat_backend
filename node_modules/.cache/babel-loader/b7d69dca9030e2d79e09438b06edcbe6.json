{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _strapiHelperPlugin = require(\"strapi-helper-plugin\");\n\nvar _core = require(\"@buffetjs/core\");\n\nvar _reactIntl = require(\"react-intl\");\n\nvar _Separator = _interopRequireDefault(require(\"./Separator\"));\n\nvar _ActionRow = _interopRequireDefault(require(\"./ActionRow\"));\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2[\"default\"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar ConditionsModal = function ConditionsModal(_ref) {\n  var actions = _ref.actions,\n      headerBreadCrumbs = _ref.headerBreadCrumbs,\n      initialConditions = _ref.initialConditions,\n      isOpen = _ref.isOpen,\n      onClosed = _ref.onClosed,\n      onSubmit = _ref.onSubmit,\n      onToggle = _ref.onToggle;\n\n  var _useIntl = (0, _reactIntl.useIntl)(),\n      formatMessage = _useIntl.formatMessage;\n\n  var _useState = (0, _react.useState)(initialConditions),\n      _useState2 = (0, _slicedToArray2[\"default\"])(_useState, 2),\n      conditions = _useState2[0],\n      setConditions = _useState2[1];\n\n  var handleSelectChange = function handleSelectChange(action, conditions) {\n    setConditions(function (prev) {\n      return _objectSpread(_objectSpread({}, prev), {}, (0, _defineProperty2[\"default\"])({}, action, conditions));\n    });\n  };\n\n  var handleSubmit = function handleSubmit() {\n    onSubmit(conditions);\n    onToggle();\n  };\n\n  return /*#__PURE__*/_react[\"default\"].createElement(_strapiHelperPlugin.Modal, {\n    withoverflow: \"true\",\n    onClosed: onClosed,\n    isOpen: isOpen,\n    onToggle: onToggle\n  }, /*#__PURE__*/_react[\"default\"].createElement(_strapiHelperPlugin.ModalHeader, {\n    headerBreadcrumbs: headerBreadCrumbs\n  }), /*#__PURE__*/_react[\"default\"].createElement(_core.Padded, {\n    top: true,\n    left: true,\n    right: true,\n    bottom: true,\n    size: \"md\"\n  }, /*#__PURE__*/_react[\"default\"].createElement(_core.Text, {\n    fontSize: \"lg\",\n    fontWeight: \"bold\"\n  }, formatMessage({\n    id: 'Settings.permissions.conditions.define-conditions'\n  })), /*#__PURE__*/_react[\"default\"].createElement(_Separator[\"default\"], null), actions.length === 0 && /*#__PURE__*/_react[\"default\"].createElement(_core.Text, {\n    fontSize: \"md\",\n    color: \"grey\"\n  }, formatMessage({\n    id: 'Settings.permissions.conditions.no-actions'\n  })), actions.map(function (action, index) {\n    return /*#__PURE__*/_react[\"default\"].createElement(_ActionRow[\"default\"], {\n      key: action.id,\n      action: action,\n      isGrey: index % 2 === 0,\n      value: conditions[action.id],\n      onChange: function onChange(val) {\n        return handleSelectChange(action.id, val);\n      }\n    });\n  })), /*#__PURE__*/_react[\"default\"].createElement(_strapiHelperPlugin.ModalFooter, null, /*#__PURE__*/_react[\"default\"].createElement(\"section\", null, /*#__PURE__*/_react[\"default\"].createElement(_core.Button, {\n    type: \"button\",\n    color: \"cancel\",\n    onClick: onToggle\n  }, formatMessage({\n    id: 'app.components.Button.cancel'\n  })), /*#__PURE__*/_react[\"default\"].createElement(_core.Button, {\n    type: \"button\",\n    color: \"success\",\n    onClick: handleSubmit\n  }, formatMessage({\n    id: 'Settings.permissions.conditions.apply'\n  })))));\n};\n\nConditionsModal.defaultProps = {\n  initialConditions: {}\n};\nConditionsModal.propTypes = {\n  actions: _propTypes[\"default\"].array.isRequired,\n  headerBreadCrumbs: _propTypes[\"default\"].arrayOf(_propTypes[\"default\"].string).isRequired,\n  initialConditions: _propTypes[\"default\"].object,\n  isOpen: _propTypes[\"default\"].bool.isRequired,\n  onClosed: _propTypes[\"default\"].func.isRequired,\n  onSubmit: _propTypes[\"default\"].func.isRequired,\n  onToggle: _propTypes[\"default\"].func.isRequired\n};\nvar _default = ConditionsModal;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["D:/webstorm_projects/redcat_backend/.cache/admin/src/components/Roles/ConditionsModal/index.js"],"names":["ConditionsModal","actions","headerBreadCrumbs","initialConditions","isOpen","onClosed","onSubmit","onToggle","formatMessage","conditions","setConditions","handleSelectChange","action","prev","handleSubmit","id","length","map","index","val","defaultProps","propTypes","PropTypes","array","isRequired","arrayOf","string","object","bool","func"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Modal, ModalHeader, ModalFooter } from 'strapi-helper-plugin';\nimport { Button, Text, Padded } from '@buffetjs/core';\nimport { useIntl } from 'react-intl';\n\nimport Separator from './Separator';\nimport ActionRow from './ActionRow';\n\nconst ConditionsModal = ({\n  actions,\n  headerBreadCrumbs,\n  initialConditions,\n  isOpen,\n  onClosed,\n  onSubmit,\n  onToggle,\n}) => {\n  const { formatMessage } = useIntl();\n  const [conditions, setConditions] = useState(initialConditions);\n\n  const handleSelectChange = (action, conditions) => {\n    setConditions(prev => ({\n      ...prev,\n      [action]: conditions,\n    }));\n  };\n\n  const handleSubmit = () => {\n    onSubmit(conditions);\n    onToggle();\n  };\n\n  return (\n    <Modal withoverflow=\"true\" onClosed={onClosed} isOpen={isOpen} onToggle={onToggle}>\n      <ModalHeader headerBreadcrumbs={headerBreadCrumbs} />\n      <Padded top left right bottom size=\"md\">\n        <Text fontSize=\"lg\" fontWeight=\"bold\">\n          {formatMessage({\n            id: 'Settings.permissions.conditions.define-conditions',\n          })}\n        </Text>\n        <Separator />\n        {actions.length === 0 && (\n          <Text fontSize=\"md\" color=\"grey\">\n            {formatMessage({ id: 'Settings.permissions.conditions.no-actions' })}\n          </Text>\n        )}\n        {actions.map((action, index) => (\n          <ActionRow\n            key={action.id}\n            action={action}\n            isGrey={index % 2 === 0}\n            value={conditions[action.id]}\n            onChange={val => handleSelectChange(action.id, val)}\n          />\n        ))}\n      </Padded>\n      <ModalFooter>\n        <section>\n          <Button type=\"button\" color=\"cancel\" onClick={onToggle}>\n            {formatMessage({ id: 'app.components.Button.cancel' })}\n          </Button>\n\n          <Button type=\"button\" color=\"success\" onClick={handleSubmit}>\n            {formatMessage({\n              id: 'Settings.permissions.conditions.apply',\n            })}\n          </Button>\n        </section>\n      </ModalFooter>\n    </Modal>\n  );\n};\n\nConditionsModal.defaultProps = {\n  initialConditions: {},\n};\n\nConditionsModal.propTypes = {\n  actions: PropTypes.array.isRequired,\n  headerBreadCrumbs: PropTypes.arrayOf(PropTypes.string).isRequired,\n  initialConditions: PropTypes.object,\n  isOpen: PropTypes.bool.isRequired,\n  onClosed: PropTypes.func.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  onToggle: PropTypes.func.isRequired,\n};\nexport default ConditionsModal;\n"]},"metadata":{},"sourceType":"script"}