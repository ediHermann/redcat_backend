{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _core = require(\"@buffetjs/core\");\n\nvar _reactFontawesome = require(\"@fortawesome/react-fontawesome\");\n\nvar _strapiHelperPlugin = require(\"strapi-helper-plugin\");\n\nvar _Fields = _interopRequireDefault(require(\"./Fields\"));\n\nvar _Header = _interopRequireDefault(require(\"./Header\"));\n\nvar _Wrapper = _interopRequireDefault(require(\"./Wrapper\"));\n\nvar _ConfigureLink = _interopRequireDefault(require(\"./ConfigureLink\"));\n\nvar FieldPicker = function FieldPicker(_ref) {\n  var displayedHeaders = _ref.displayedHeaders,\n      items = _ref.items,\n      onChange = _ref.onChange,\n      onClickReset = _ref.onClickReset,\n      slug = _ref.slug;\n  return /*#__PURE__*/_react[\"default\"].createElement(_Wrapper[\"default\"], null, /*#__PURE__*/_react[\"default\"].createElement(_core.Picker, {\n    position: \"right\",\n    renderButtonContent: function renderButtonContent(isOpen) {\n      return /*#__PURE__*/_react[\"default\"].createElement(_core.Flex, null, /*#__PURE__*/_react[\"default\"].createElement(\"div\", null, /*#__PURE__*/_react[\"default\"].createElement(_reactFontawesome.FontAwesomeIcon, {\n        icon: \"cog\",\n        style: {\n          marginRighte: 10\n        }\n      })), /*#__PURE__*/_react[\"default\"].createElement(_core.Padded, {\n        left: true,\n        size: \"sm\"\n      }, /*#__PURE__*/_react[\"default\"].createElement(_strapiHelperPlugin.Carret, {\n        fill: isOpen ? '#007eff' : '#292b2c',\n        isUp: isOpen\n      })));\n    },\n    renderSectionContent: function renderSectionContent(onToggle) {\n      return /*#__PURE__*/_react[\"default\"].createElement(_react[\"default\"].Fragment, null, /*#__PURE__*/_react[\"default\"].createElement(_ConfigureLink[\"default\"], {\n        slug: slug\n      }), /*#__PURE__*/_react[\"default\"].createElement(_Header[\"default\"], {\n        onClick: onClickReset,\n        onToggle: onToggle\n      }), /*#__PURE__*/_react[\"default\"].createElement(_Fields[\"default\"], {\n        displayedHeaders: displayedHeaders,\n        items: items,\n        onChange: onChange\n      }));\n    }\n  }));\n};\n\nFieldPicker.propTypes = {\n  displayedHeaders: _propTypes[\"default\"].array.isRequired,\n  items: _propTypes[\"default\"].array.isRequired,\n  onChange: _propTypes[\"default\"].func.isRequired,\n  onClickReset: _propTypes[\"default\"].func.isRequired,\n  slug: _propTypes[\"default\"].string.isRequired\n};\n\nvar _default = /*#__PURE__*/(0, _react.memo)(FieldPicker);\n\nexports[\"default\"] = _default;","map":{"version":3,"sources":["D:/webstorm_projects/redcat_backend/.cache/plugins/strapi-plugin-content-manager/admin/src/containers/ListView/FieldPicker/index.js"],"names":["FieldPicker","displayedHeaders","items","onChange","onClickReset","slug","isOpen","marginRighte","onToggle","propTypes","PropTypes","array","isRequired","func","string"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA,IAAMA,WAAW,GAAG,SAAdA,WAAc,OAA+D;AAAA,MAA5DC,gBAA4D,QAA5DA,gBAA4D;AAAA,MAA1CC,KAA0C,QAA1CA,KAA0C;AAAA,MAAnCC,QAAmC,QAAnCA,QAAmC;AAAA,MAAzBC,YAAyB,QAAzBA,YAAyB;AAAA,MAAXC,IAAW,QAAXA,IAAW;AACjF,sBACE,gCAAC,mBAAD,qBACE,gCAAC,YAAD;AACE,IAAA,QAAQ,EAAC,OADX;AAEE,IAAA,mBAAmB,EAAE,6BAAAC,MAAM;AAAA,0BACzB,gCAAC,UAAD,qBACE,0DACE,gCAAC,iCAAD;AAAiB,QAAA,IAAI,EAAC,KAAtB;AAA4B,QAAA,KAAK,EAAE;AAAEC,UAAAA,YAAY,EAAE;AAAhB;AAAnC,QADF,CADF,eAIE,gCAAC,YAAD;AAAQ,QAAA,IAAI,MAAZ;AAAa,QAAA,IAAI,EAAC;AAAlB,sBACE,gCAAC,0BAAD;AAAQ,QAAA,IAAI,EAAED,MAAM,GAAG,SAAH,GAAe,SAAnC;AAA8C,QAAA,IAAI,EAAEA;AAApD,QADF,CAJF,CADyB;AAAA,KAF7B;AAYE,IAAA,oBAAoB,EAAE,8BAAAE,QAAQ;AAAA,0BAC5B,+EACE,gCAAC,yBAAD;AAAe,QAAA,IAAI,EAAEH;AAArB,QADF,eAEE,gCAAC,kBAAD;AAAQ,QAAA,OAAO,EAAED,YAAjB;AAA+B,QAAA,QAAQ,EAAEI;AAAzC,QAFF,eAGE,gCAAC,kBAAD;AAAQ,QAAA,gBAAgB,EAAEP,gBAA1B;AAA4C,QAAA,KAAK,EAAEC,KAAnD;AAA0D,QAAA,QAAQ,EAAEC;AAApE,QAHF,CAD4B;AAAA;AAZhC,IADF,CADF;AAwBD,CAzBD;;AA2BAH,WAAW,CAACS,SAAZ,GAAwB;AACtBR,EAAAA,gBAAgB,EAAES,sBAAUC,KAAV,CAAgBC,UADZ;AAEtBV,EAAAA,KAAK,EAAEQ,sBAAUC,KAAV,CAAgBC,UAFD;AAGtBT,EAAAA,QAAQ,EAAEO,sBAAUG,IAAV,CAAeD,UAHH;AAItBR,EAAAA,YAAY,EAAEM,sBAAUG,IAAV,CAAeD,UAJP;AAKtBP,EAAAA,IAAI,EAAEK,sBAAUI,MAAV,CAAiBF;AALD,CAAxB;;4BAQe,iBAAKZ,WAAL,C","sourcesContent":["import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport { Flex, Padded, Picker } from '@buffetjs/core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Carret } from 'strapi-helper-plugin';\nimport Fields from './Fields';\nimport Header from './Header';\nimport Wrapper from './Wrapper';\nimport ConfigureLink from './ConfigureLink';\n\nconst FieldPicker = ({ displayedHeaders, items, onChange, onClickReset, slug }) => {\n  return (\n    <Wrapper>\n      <Picker\n        position=\"right\"\n        renderButtonContent={isOpen => (\n          <Flex>\n            <div>\n              <FontAwesomeIcon icon=\"cog\" style={{ marginRighte: 10 }} />\n            </div>\n            <Padded left size=\"sm\">\n              <Carret fill={isOpen ? '#007eff' : '#292b2c'} isUp={isOpen} />\n            </Padded>\n          </Flex>\n        )}\n        renderSectionContent={onToggle => (\n          <>\n            <ConfigureLink slug={slug} />\n            <Header onClick={onClickReset} onToggle={onToggle} />\n            <Fields displayedHeaders={displayedHeaders} items={items} onChange={onChange} />\n          </>\n        )}\n      />\n    </Wrapper>\n  );\n};\n\nFieldPicker.propTypes = {\n  displayedHeaders: PropTypes.array.isRequired,\n  items: PropTypes.array.isRequired,\n  onChange: PropTypes.func.isRequired,\n  onClickReset: PropTypes.func.isRequired,\n  slug: PropTypes.string.isRequired,\n};\n\nexport default memo(FieldPicker);\n"]},"metadata":{},"sourceType":"script"}