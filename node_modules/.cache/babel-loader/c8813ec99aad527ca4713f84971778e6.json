{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar yup = _interopRequireWildcard(require(\"yup\"));\n\nvar _strapiHelperPlugin = require(\"strapi-helper-plugin\");\n\nvar _fieldsRegex = require(\"./fieldsRegex\");\n\nvar schema = yup.object().shape({\n  name: yup.string(_strapiHelperPlugin.translatedErrors.string).required(_strapiHelperPlugin.translatedErrors.required).matches(_fieldsRegex.NAME_REGEX, _strapiHelperPlugin.translatedErrors.regex),\n  url: yup.string(_strapiHelperPlugin.translatedErrors.string).required(_strapiHelperPlugin.translatedErrors.required).matches(_fieldsRegex.URL_REGEX, _strapiHelperPlugin.translatedErrors.regex),\n  headers: yup.lazy(function (array) {\n    var baseSchema = yup.array();\n\n    if (array.length === 1) {\n      var _array$ = array[0],\n          key = _array$.key,\n          value = _array$.value;\n\n      if (key === '' && value === '') {\n        return baseSchema;\n      }\n    }\n\n    return baseSchema.of(yup.object().shape({\n      key: yup.string().required(_strapiHelperPlugin.translatedErrors.required),\n      value: yup.string().required(_strapiHelperPlugin.translatedErrors.required)\n    }));\n  }),\n  events: yup.array().required(_strapiHelperPlugin.translatedErrors.required)\n});\nvar _default = schema;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["D:/webstorm_projects/redcat_backend/.cache/admin/src/containers/Webhooks/EditView/utils/schema.js"],"names":["schema","yup","object","shape","name","string","translatedErrors","required","matches","NAME_REGEX","regex","url","URL_REGEX","headers","lazy","array","baseSchema","length","key","value","of","events"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AAEA,IAAMA,MAAM,GAAGC,GAAG,CAACC,MAAJ,GAAaC,KAAb,CAAmB;AAChCC,EAAAA,IAAI,EAAEH,GAAG,CACNI,MADG,CACIC,qCAAiBD,MADrB,EAEHE,QAFG,CAEMD,qCAAiBC,QAFvB,EAGHC,OAHG,CAGKC,uBAHL,EAGiBH,qCAAiBI,KAHlC,CAD0B;AAKhCC,EAAAA,GAAG,EAAEV,GAAG,CACLI,MADE,CACKC,qCAAiBD,MADtB,EAEFE,QAFE,CAEOD,qCAAiBC,QAFxB,EAGFC,OAHE,CAGMI,sBAHN,EAGiBN,qCAAiBI,KAHlC,CAL2B;AAShCG,EAAAA,OAAO,EAAEZ,GAAG,CAACa,IAAJ,CAAS,UAAAC,KAAK,EAAI;AACzB,QAAIC,UAAU,GAAGf,GAAG,CAACc,KAAJ,EAAjB;;AAEA,QAAIA,KAAK,CAACE,MAAN,KAAiB,CAArB,EAAwB;AAAA,oBACCF,KAAK,CAAC,CAAD,CADN;AAAA,UACdG,GADc,WACdA,GADc;AAAA,UACTC,KADS,WACTA,KADS;;AAGtB,UAAID,GAAG,KAAK,EAAR,IAAcC,KAAK,KAAK,EAA5B,EAAgC;AAC9B,eAAOH,UAAP;AACD;AACF;;AAED,WAAOA,UAAU,CAACI,EAAX,CACLnB,GAAG,CAACC,MAAJ,GAAaC,KAAb,CAAmB;AACjBe,MAAAA,GAAG,EAAEjB,GAAG,CAACI,MAAJ,GAAaE,QAAb,CAAsBD,qCAAiBC,QAAvC,CADY;AAEjBY,MAAAA,KAAK,EAAElB,GAAG,CAACI,MAAJ,GAAaE,QAAb,CAAsBD,qCAAiBC,QAAvC;AAFU,KAAnB,CADK,CAAP;AAMD,GAjBQ,CATuB;AA2BhCc,EAAAA,MAAM,EAAEpB,GAAG,CAACc,KAAJ,GAAYR,QAAZ,CAAqBD,qCAAiBC,QAAtC;AA3BwB,CAAnB,CAAf;eA8BeP,M","sourcesContent":["import * as yup from 'yup';\nimport { translatedErrors } from 'strapi-helper-plugin';\nimport { NAME_REGEX, URL_REGEX } from './fieldsRegex';\n\nconst schema = yup.object().shape({\n  name: yup\n    .string(translatedErrors.string)\n    .required(translatedErrors.required)\n    .matches(NAME_REGEX, translatedErrors.regex),\n  url: yup\n    .string(translatedErrors.string)\n    .required(translatedErrors.required)\n    .matches(URL_REGEX, translatedErrors.regex),\n  headers: yup.lazy(array => {\n    let baseSchema = yup.array();\n\n    if (array.length === 1) {\n      const { key, value } = array[0];\n\n      if (key === '' && value === '') {\n        return baseSchema;\n      }\n    }\n\n    return baseSchema.of(\n      yup.object().shape({\n        key: yup.string().required(translatedErrors.required),\n        value: yup.string().required(translatedErrors.required),\n      })\n    );\n  }),\n  events: yup.array().required(translatedErrors.required),\n});\n\nexport default schema;\n"]},"metadata":{},"sourceType":"script"}