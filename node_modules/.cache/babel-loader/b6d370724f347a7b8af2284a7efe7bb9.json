{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _reactCopyToClipboard = require(\"react-copy-to-clipboard\");\n\nvar _lodash = require(\"lodash\");\n\nvar _strapiHelperPlugin = require(\"strapi-helper-plugin\");\n\nvar _permissions = _interopRequireDefault(require(\"../../permissions\"));\n\nvar _utils = require(\"../../utils\");\n\nvar _CardControl = _interopRequireDefault(require(\"../CardControl\"));\n\nvar _CardControlWrapper = _interopRequireDefault(require(\"./CardControlWrapper\"));\n\nvar _CardPreviewWrapper = _interopRequireDefault(require(\"./CardPreviewWrapper\"));\n\nvar _EmptyInputMedia = _interopRequireDefault(require(\"./EmptyInputMedia\"));\n\nvar _EmptyText = _interopRequireDefault(require(\"./EmptyText\"));\n\nvar _InputFilePreview = _interopRequireDefault(require(\"./InputFilePreview\"));\n\nvar _InputModalStepper = _interopRequireDefault(require(\"../../containers/InputModalStepper\"));\n\nvar _Name = _interopRequireDefault(require(\"./Name\"));\n\nvar _Wrapper = _interopRequireDefault(require(\"./Wrapper\"));\n\nvar _Input = _interopRequireDefault(require(\"../Input\"));\n\nvar _ErrorMessage = _interopRequireDefault(require(\"./ErrorMessage\"));\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2[\"default\"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar InputMedia = function InputMedia(_ref) {\n  var disabled = _ref.disabled,\n      label = _ref.label,\n      onChange = _ref.onChange,\n      name = _ref.name,\n      attribute = _ref.attribute,\n      value = _ref.value,\n      type = _ref.type,\n      id = _ref.id,\n      error = _ref.error;\n\n  var _useState = (0, _react.useState)({\n    isOpen: false,\n    step: 'list',\n    fileToEdit: null,\n    isDisplayed: false\n  }),\n      _useState2 = (0, _slicedToArray2[\"default\"])(_useState, 2),\n      modal = _useState2[0],\n      setModal = _useState2[1];\n\n  var _useState3 = (0, _react.useState)(0),\n      _useState4 = (0, _slicedToArray2[\"default\"])(_useState3, 2),\n      fileToDisplay = _useState4[0],\n      setFileToDisplay = _useState4[1];\n\n  var hasNoValue = !!value && Array.isArray(value) && value.length === 0;\n  var currentFile = attribute.multiple ? value[fileToDisplay] : value;\n  var fileURL = (0, _lodash.get)(currentFile, ['url'], null);\n  var prefixedFileURL = fileURL ? (0, _strapiHelperPlugin.prefixFileUrlWithBackendUrl)(fileURL) : null;\n  var displaySlidePagination = attribute.multiple && value.length > 1 ? \" (\".concat(fileToDisplay + 1, \"/\").concat(value.length, \")\") : '';\n  var inputId = id || name;\n  var errorId = \"error-\".concat(inputId);\n  (0, _react.useEffect)(function () {\n    setFileToDisplay(0);\n  }, [modal.isOpen]);\n\n  var handleClickToggleModal = function handleClickToggleModal() {\n    if (!disabled) {\n      setModal(function (prev) {\n        return {\n          isDisplayed: true,\n          step: 'list',\n          isOpen: !prev.isOpen,\n          fileToEdit: null\n        };\n      });\n    }\n  };\n\n  var handleClosed = function handleClosed() {\n    return setModal(function (prev) {\n      return _objectSpread(_objectSpread({}, prev), {}, {\n        isDisplayed: false\n      });\n    });\n  };\n\n  var handleChange = function handleChange(v) {\n    onChange({\n      target: {\n        name: name,\n        type: type,\n        value: v\n      }\n    });\n  };\n\n  var handleFilesNavigation = function handleFilesNavigation(displayNext) {\n    if (attribute.multiple) {\n      if (displayNext && fileToDisplay === value.length - 1) {\n        setFileToDisplay(0);\n        return;\n      }\n\n      if (!displayNext && fileToDisplay === 0) {\n        setFileToDisplay(value.length - 1);\n      } else {\n        setFileToDisplay(function (prev) {\n          return displayNext ? prev + 1 : prev - 1;\n        });\n      }\n    }\n  };\n\n  var handleRemoveFile = function handleRemoveFile() {\n    var newValue = attribute.multiple ? value.filter(function (file, index) {\n      return index !== fileToDisplay;\n    }) : null;\n\n    if (Array.isArray(newValue) && fileToDisplay === newValue.length) {\n      setFileToDisplay(fileToDisplay > 0 ? fileToDisplay - 1 : fileToDisplay);\n    }\n\n    handleChange(newValue);\n  };\n\n  var handleEditFile = function handleEditFile() {\n    setModal(function () {\n      return {\n        isDisplayed: true,\n        isOpen: true,\n        step: 'edit',\n        fileToEdit: (0, _utils.formatFileForEditing)(currentFile)\n      };\n    });\n  };\n\n  var handleCopy = function handleCopy() {\n    strapi.notification.toggle({\n      type: 'info',\n      message: {\n        id: 'notification.link-copied'\n      }\n    });\n  };\n\n  var handleAllowDrop = function handleAllowDrop(e) {\n    return e.preventDefault();\n  };\n\n  var handleDrop = function handleDrop(e) {\n    e.preventDefault();\n    e.persist();\n\n    if (e.dataTransfer) {\n      setModal(function () {\n        return {\n          isDisplayed: true,\n          isOpen: true,\n          step: 'upload',\n          filesToUpload: e.dataTransfer.files\n        };\n      });\n    }\n  };\n\n  return /*#__PURE__*/_react[\"default\"].createElement(_Wrapper[\"default\"], {\n    hasError: !(0, _lodash.isEmpty)(error)\n  }, /*#__PURE__*/_react[\"default\"].createElement(_Name[\"default\"], {\n    htmlFor: name\n  }, \"\".concat(label).concat(displaySlidePagination)), /*#__PURE__*/_react[\"default\"].createElement(_CardPreviewWrapper[\"default\"], {\n    onDragOver: handleAllowDrop,\n    onDrop: handleDrop\n  }, /*#__PURE__*/_react[\"default\"].createElement(_CardControlWrapper[\"default\"], null, !disabled && /*#__PURE__*/_react[\"default\"].createElement(_CardControl[\"default\"], {\n    small: true,\n    title: \"add\",\n    color: \"#9EA7B8\",\n    type: \"plus\",\n    onClick: handleClickToggleModal\n  }), !hasNoValue && !disabled && /*#__PURE__*/_react[\"default\"].createElement(_react[\"default\"].Fragment, null, /*#__PURE__*/_react[\"default\"].createElement(_strapiHelperPlugin.CheckPermissions, {\n    permissions: _permissions[\"default\"].update\n  }, /*#__PURE__*/_react[\"default\"].createElement(_CardControl[\"default\"], {\n    small: true,\n    title: \"edit\",\n    color: \"#9EA7B8\",\n    type: \"pencil\",\n    onClick: handleEditFile\n  })), /*#__PURE__*/_react[\"default\"].createElement(_strapiHelperPlugin.CheckPermissions, {\n    permissions: _permissions[\"default\"].copyLink\n  }, /*#__PURE__*/_react[\"default\"].createElement(_reactCopyToClipboard.CopyToClipboard, {\n    onCopy: handleCopy,\n    text: prefixedFileURL\n  }, /*#__PURE__*/_react[\"default\"].createElement(_CardControl[\"default\"], {\n    small: true,\n    title: \"copy-link\",\n    color: \"#9EA7B8\",\n    type: \"link\"\n  }))), /*#__PURE__*/_react[\"default\"].createElement(_CardControl[\"default\"], {\n    small: true,\n    title: \"delete\",\n    color: \"#9EA7B8\",\n    type: \"trash-alt\",\n    onClick: handleRemoveFile\n  }))), hasNoValue ? /*#__PURE__*/_react[\"default\"].createElement(_EmptyInputMedia[\"default\"], {\n    onClick: handleClickToggleModal,\n    disabled: disabled\n  }, /*#__PURE__*/_react[\"default\"].createElement(_EmptyText[\"default\"], {\n    id: (0, _utils.getTrad)('input.placeholder')\n  })) : /*#__PURE__*/_react[\"default\"].createElement(_InputFilePreview[\"default\"], {\n    isSlider: attribute.multiple && value.length > 1,\n    file: currentFile,\n    onClick: handleFilesNavigation\n  }), /*#__PURE__*/_react[\"default\"].createElement(_Input[\"default\"], {\n    type: \"file\",\n    name: name\n  })), modal.isDisplayed && /*#__PURE__*/_react[\"default\"].createElement(_InputModalStepper[\"default\"], {\n    isOpen: modal.isOpen,\n    onClosed: handleClosed,\n    step: modal.step,\n    fileToEdit: modal.fileToEdit,\n    filesToUpload: modal.filesToUpload,\n    multiple: attribute.multiple,\n    onInputMediaChange: handleChange,\n    selectedFiles: value,\n    onToggle: handleClickToggleModal,\n    allowedTypes: attribute.allowedTypes\n  }), error && /*#__PURE__*/_react[\"default\"].createElement(_ErrorMessage[\"default\"], {\n    id: errorId\n  }, error));\n};\n\nInputMedia.propTypes = {\n  attribute: _propTypes[\"default\"].shape({\n    allowedTypes: _propTypes[\"default\"].arrayOf(_propTypes[\"default\"].string),\n    multiple: _propTypes[\"default\"].bool,\n    required: _propTypes[\"default\"].bool,\n    type: _propTypes[\"default\"].string\n  }).isRequired,\n  disabled: _propTypes[\"default\"].bool,\n  error: _propTypes[\"default\"].string,\n  id: _propTypes[\"default\"].string,\n  label: _propTypes[\"default\"].string,\n  name: _propTypes[\"default\"].string.isRequired,\n  onChange: _propTypes[\"default\"].func.isRequired,\n  type: _propTypes[\"default\"].string.isRequired,\n  value: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].object, _propTypes[\"default\"].array])\n};\nInputMedia.defaultProps = {\n  disabled: false,\n  id: null,\n  error: null,\n  label: '',\n  value: null\n};\nvar _default = InputMedia;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["D:/webstorm_projects/redcat_backend/.cache/plugins/strapi-plugin-upload/admin/src/components/InputMedia/index.js"],"names":["InputMedia","disabled","label","onChange","name","attribute","value","type","id","error","isOpen","step","fileToEdit","isDisplayed","modal","setModal","fileToDisplay","setFileToDisplay","hasNoValue","Array","isArray","length","currentFile","multiple","fileURL","prefixedFileURL","displaySlidePagination","inputId","errorId","handleClickToggleModal","prev","handleClosed","handleChange","v","target","handleFilesNavigation","displayNext","handleRemoveFile","newValue","filter","file","index","handleEditFile","handleCopy","strapi","notification","toggle","message","handleAllowDrop","e","preventDefault","handleDrop","persist","dataTransfer","filesToUpload","files","pluginPermissions","update","copyLink","allowedTypes","propTypes","PropTypes","shape","arrayOf","string","bool","required","isRequired","func","oneOfType","object","array","defaultProps"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport { get, isEmpty } from 'lodash';\nimport { CheckPermissions, prefixFileUrlWithBackendUrl } from 'strapi-helper-plugin';\nimport pluginPermissions from '../../permissions';\nimport { getTrad, formatFileForEditing } from '../../utils';\nimport CardControl from '../CardControl';\nimport CardControlWrapper from './CardControlWrapper';\nimport CardPreviewWrapper from './CardPreviewWrapper';\nimport EmptyInputMedia from './EmptyInputMedia';\nimport EmptyText from './EmptyText';\nimport InputFilePreview from './InputFilePreview';\nimport InputModalStepper from '../../containers/InputModalStepper';\nimport Name from './Name';\nimport Wrapper from './Wrapper';\nimport Input from '../Input';\nimport ErrorMessage from './ErrorMessage';\n\nconst InputMedia = ({ disabled, label, onChange, name, attribute, value, type, id, error }) => {\n  const [modal, setModal] = useState({\n    isOpen: false,\n    step: 'list',\n    fileToEdit: null,\n    isDisplayed: false,\n  });\n  const [fileToDisplay, setFileToDisplay] = useState(0);\n  const hasNoValue = !!value && Array.isArray(value) && value.length === 0;\n  const currentFile = attribute.multiple ? value[fileToDisplay] : value;\n  const fileURL = get(currentFile, ['url'], null);\n  const prefixedFileURL = fileURL ? prefixFileUrlWithBackendUrl(fileURL) : null;\n  const displaySlidePagination =\n    attribute.multiple && value.length > 1 ? ` (${fileToDisplay + 1}/${value.length})` : '';\n  const inputId = id || name;\n  const errorId = `error-${inputId}`;\n\n  useEffect(() => {\n    setFileToDisplay(0);\n  }, [modal.isOpen]);\n\n  const handleClickToggleModal = () => {\n    if (!disabled) {\n      setModal(prev => ({\n        isDisplayed: true,\n        step: 'list',\n        isOpen: !prev.isOpen,\n        fileToEdit: null,\n      }));\n    }\n  };\n\n  const handleClosed = () => setModal(prev => ({ ...prev, isDisplayed: false }));\n\n  const handleChange = v => {\n    onChange({ target: { name, type, value: v } });\n  };\n\n  const handleFilesNavigation = displayNext => {\n    if (attribute.multiple) {\n      if (displayNext && fileToDisplay === value.length - 1) {\n        setFileToDisplay(0);\n\n        return;\n      }\n\n      if (!displayNext && fileToDisplay === 0) {\n        setFileToDisplay(value.length - 1);\n      } else {\n        setFileToDisplay(prev => (displayNext ? prev + 1 : prev - 1));\n      }\n    }\n  };\n\n  const handleRemoveFile = () => {\n    const newValue = attribute.multiple\n      ? value.filter((file, index) => index !== fileToDisplay)\n      : null;\n\n    if (Array.isArray(newValue) && fileToDisplay === newValue.length) {\n      setFileToDisplay(fileToDisplay > 0 ? fileToDisplay - 1 : fileToDisplay);\n    }\n\n    handleChange(newValue);\n  };\n\n  const handleEditFile = () => {\n    setModal(() => ({\n      isDisplayed: true,\n      isOpen: true,\n      step: 'edit',\n      fileToEdit: formatFileForEditing(currentFile),\n    }));\n  };\n\n  const handleCopy = () => {\n    strapi.notification.toggle({\n      type: 'info',\n      message: { id: 'notification.link-copied' },\n    });\n  };\n\n  const handleAllowDrop = e => e.preventDefault();\n\n  const handleDrop = e => {\n    e.preventDefault();\n    e.persist();\n\n    if (e.dataTransfer) {\n      setModal(() => ({\n        isDisplayed: true,\n        isOpen: true,\n        step: 'upload',\n        filesToUpload: e.dataTransfer.files,\n      }));\n    }\n  };\n\n  return (\n    <Wrapper hasError={!isEmpty(error)}>\n      <Name htmlFor={name}>{`${label}${displaySlidePagination}`}</Name>\n\n      <CardPreviewWrapper onDragOver={handleAllowDrop} onDrop={handleDrop}>\n        <CardControlWrapper>\n          {!disabled && (\n            <CardControl\n              small\n              title=\"add\"\n              color=\"#9EA7B8\"\n              type=\"plus\"\n              onClick={handleClickToggleModal}\n            />\n          )}\n          {!hasNoValue && !disabled && (\n            <>\n              <CheckPermissions permissions={pluginPermissions.update}>\n                <CardControl\n                  small\n                  title=\"edit\"\n                  color=\"#9EA7B8\"\n                  type=\"pencil\"\n                  onClick={handleEditFile}\n                />\n              </CheckPermissions>\n              <CheckPermissions permissions={pluginPermissions.copyLink}>\n                <CopyToClipboard onCopy={handleCopy} text={prefixedFileURL}>\n                  <CardControl small title=\"copy-link\" color=\"#9EA7B8\" type=\"link\" />\n                </CopyToClipboard>\n              </CheckPermissions>\n              <CardControl\n                small\n                title=\"delete\"\n                color=\"#9EA7B8\"\n                type=\"trash-alt\"\n                onClick={handleRemoveFile}\n              />\n            </>\n          )}\n        </CardControlWrapper>\n        {hasNoValue ? (\n          <EmptyInputMedia onClick={handleClickToggleModal} disabled={disabled}>\n            <EmptyText id={getTrad('input.placeholder')} />\n          </EmptyInputMedia>\n        ) : (\n          <InputFilePreview\n            isSlider={attribute.multiple && value.length > 1}\n            file={currentFile}\n            onClick={handleFilesNavigation}\n          />\n        )}\n        <Input type=\"file\" name={name} />\n      </CardPreviewWrapper>\n      {modal.isDisplayed && (\n        <InputModalStepper\n          isOpen={modal.isOpen}\n          onClosed={handleClosed}\n          step={modal.step}\n          fileToEdit={modal.fileToEdit}\n          filesToUpload={modal.filesToUpload}\n          multiple={attribute.multiple}\n          onInputMediaChange={handleChange}\n          selectedFiles={value}\n          onToggle={handleClickToggleModal}\n          allowedTypes={attribute.allowedTypes}\n        />\n      )}\n      {error && <ErrorMessage id={errorId}>{error}</ErrorMessage>}\n    </Wrapper>\n  );\n};\n\nInputMedia.propTypes = {\n  attribute: PropTypes.shape({\n    allowedTypes: PropTypes.arrayOf(PropTypes.string),\n    multiple: PropTypes.bool,\n    required: PropTypes.bool,\n    type: PropTypes.string,\n  }).isRequired,\n  disabled: PropTypes.bool,\n  error: PropTypes.string,\n  id: PropTypes.string,\n  label: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  type: PropTypes.string.isRequired,\n  value: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n};\nInputMedia.defaultProps = {\n  disabled: false,\n  id: null,\n  error: null,\n  label: '',\n  value: null,\n};\n\nexport default InputMedia;\n"]},"metadata":{},"sourceType":"script"}