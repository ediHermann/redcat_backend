{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _core = require(\"@buffetjs/core\");\n\nvar _ListWrapper = _interopRequireDefault(require(\"./ListWrapper\"));\n\nvar _PermissionRow = _interopRequireDefault(require(\"./PermissionRow\"));\n\nvar PluginsAndSettingsPermissions = function PluginsAndSettingsPermissions(_ref) {\n  var pluginsPermissionsLayout = _ref.pluginsPermissionsLayout,\n      permissionType = _ref.permissionType;\n\n  var _useState = (0, _react.useState)(),\n      _useState2 = (0, _slicedToArray2[\"default\"])(_useState, 2),\n      openedCategory = _useState2[0],\n      setOpenedCategory = _useState2[1];\n\n  var handleOpenCategory = function handleOpenCategory(categoryName) {\n    setOpenedCategory(categoryName === openedCategory ? null : categoryName);\n  };\n\n  return /*#__PURE__*/_react[\"default\"].createElement(_ListWrapper[\"default\"], null, /*#__PURE__*/_react[\"default\"].createElement(_core.Padded, {\n    left: true,\n    right: true,\n    size: \"md\"\n  }, pluginsPermissionsLayout.map(function (permissionLayout, index) {\n    return /*#__PURE__*/_react[\"default\"].createElement(_PermissionRow[\"default\"], {\n      key: permissionLayout.category,\n      permissionType: permissionType,\n      isWhite: index % 2 === 1,\n      onOpenCategory: function onOpenCategory() {\n        return handleOpenCategory(permissionLayout.category);\n      },\n      openedCategory: openedCategory,\n      permissions: permissionLayout\n    });\n  })));\n};\n\nPluginsAndSettingsPermissions.defaultProps = {\n  permissionType: null\n};\nPluginsAndSettingsPermissions.propTypes = {\n  pluginsPermissionsLayout: _propTypes[\"default\"].array.isRequired,\n  permissionType: _propTypes[\"default\"].string\n};\nvar _default = PluginsAndSettingsPermissions;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["D:/webstorm_projects/redcat_backend/.cache/admin/src/components/Roles/Permissions/PluginsAndSettingsPermissions/index.js"],"names":["PluginsAndSettingsPermissions","pluginsPermissionsLayout","permissionType","openedCategory","setOpenedCategory","handleOpenCategory","categoryName","map","permissionLayout","index","category","defaultProps","propTypes","PropTypes","array","isRequired","string"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AACA;;AAEA;;AACA;;AAEA,IAAMA,6BAA6B,GAAG,SAAhCA,6BAAgC,OAAkD;AAAA,MAA/CC,wBAA+C,QAA/CA,wBAA+C;AAAA,MAArBC,cAAqB,QAArBA,cAAqB;;AAAA,kBAC1C,sBAD0C;AAAA;AAAA,MAC/EC,cAD+E;AAAA,MAC/DC,iBAD+D;;AAGtF,MAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,YAAY,EAAI;AACzCF,IAAAA,iBAAiB,CAACE,YAAY,KAAKH,cAAjB,GAAkC,IAAlC,GAAyCG,YAA1C,CAAjB;AACD,GAFD;;AAIA,sBACE,gCAAC,uBAAD,qBACE,gCAAC,YAAD;AAAQ,IAAA,IAAI,MAAZ;AAAa,IAAA,KAAK,MAAlB;AAAmB,IAAA,IAAI,EAAC;AAAxB,KACGL,wBAAwB,CAACM,GAAzB,CAA6B,UAACC,gBAAD,EAAmBC,KAAnB;AAAA,wBAC5B,gCAAC,yBAAD;AACE,MAAA,GAAG,EAAED,gBAAgB,CAACE,QADxB;AAEE,MAAA,cAAc,EAAER,cAFlB;AAGE,MAAA,OAAO,EAAEO,KAAK,GAAG,CAAR,KAAc,CAHzB;AAIE,MAAA,cAAc,EAAE;AAAA,eAAMJ,kBAAkB,CAACG,gBAAgB,CAACE,QAAlB,CAAxB;AAAA,OAJlB;AAKE,MAAA,cAAc,EAAEP,cALlB;AAME,MAAA,WAAW,EAAEK;AANf,MAD4B;AAAA,GAA7B,CADH,CADF,CADF;AAgBD,CAvBD;;AAyBAR,6BAA6B,CAACW,YAA9B,GAA6C;AAC3CT,EAAAA,cAAc,EAAE;AAD2B,CAA7C;AAGAF,6BAA6B,CAACY,SAA9B,GAA0C;AACxCX,EAAAA,wBAAwB,EAAEY,sBAAUC,KAAV,CAAgBC,UADF;AAExCb,EAAAA,cAAc,EAAEW,sBAAUG;AAFc,CAA1C;eAKehB,6B","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Padded } from '@buffetjs/core';\n\nimport ListWrapper from './ListWrapper';\nimport PermissionRow from './PermissionRow';\n\nconst PluginsAndSettingsPermissions = ({ pluginsPermissionsLayout, permissionType }) => {\n  const [openedCategory, setOpenedCategory] = useState();\n\n  const handleOpenCategory = categoryName => {\n    setOpenedCategory(categoryName === openedCategory ? null : categoryName);\n  };\n\n  return (\n    <ListWrapper>\n      <Padded left right size=\"md\">\n        {pluginsPermissionsLayout.map((permissionLayout, index) => (\n          <PermissionRow\n            key={permissionLayout.category}\n            permissionType={permissionType}\n            isWhite={index % 2 === 1}\n            onOpenCategory={() => handleOpenCategory(permissionLayout.category)}\n            openedCategory={openedCategory}\n            permissions={permissionLayout}\n          />\n        ))}\n      </Padded>\n    </ListWrapper>\n  );\n};\n\nPluginsAndSettingsPermissions.defaultProps = {\n  permissionType: null,\n};\nPluginsAndSettingsPermissions.propTypes = {\n  pluginsPermissionsLayout: PropTypes.array.isRequired,\n  permissionType: PropTypes.string,\n};\n\nexport default PluginsAndSettingsPermissions;\n"]},"metadata":{},"sourceType":"script"}