{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _lodash = require(\"lodash\");\n\nvar _utils = require(\"./utils\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2[\"default\"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar init = function init(state, permissionsLayout, permissions, role) {\n  var customPermissionsLayout = permissionsLayout; // Customize permissions layout for the Author role\n\n  if (role.code === 'strapi-author') {\n    // The publish action have to be hidden in CE for the author role.\n    var contentTypesLayout = (0, _lodash.get)(permissionsLayout, ['sections', 'contentTypes'], []).filter(function (pLayout) {\n      return pLayout.action !== \"\".concat(_utils.CONTENT_MANAGER_PREFIX, \".publish\");\n    });\n    customPermissionsLayout = _objectSpread(_objectSpread({}, customPermissionsLayout), {}, {\n      sections: _objectSpread(_objectSpread({}, customPermissionsLayout.sections), {}, {\n        contentTypes: contentTypesLayout\n      })\n    });\n  }\n\n  return _objectSpread(_objectSpread(_objectSpread({}, state), permissions), {}, {\n    permissionsLayout: customPermissionsLayout,\n    initialData: permissions,\n    isSuperAdmin: role && role.code === 'strapi-super-admin'\n  });\n};\n\nvar _default = init;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["D:/webstorm_projects/redcat_backend/.cache/admin/src/components/Roles/Permissions/init.js"],"names":["init","state","permissionsLayout","permissions","role","customPermissionsLayout","code","contentTypesLayout","filter","pLayout","action","CONTENT_MANAGER_PREFIX","sections","contentTypes","initialData","isSuperAdmin"],"mappings":";;;;;;;;;;;AAAA;;AAEA;;;;;;AAEA,IAAMA,IAAI,GAAG,SAAPA,IAAO,CAACC,KAAD,EAAQC,iBAAR,EAA2BC,WAA3B,EAAwCC,IAAxC,EAAiD;AAC5D,MAAIC,uBAAuB,GAAGH,iBAA9B,CAD4D,CAG5D;;AACA,MAAIE,IAAI,CAACE,IAAL,KAAc,eAAlB,EAAmC;AACjC;AACA,QAAMC,kBAAkB,GAAG,iBAAIL,iBAAJ,EAAuB,CAAC,UAAD,EAAa,cAAb,CAAvB,EAAqD,EAArD,EAAyDM,MAAzD,CACzB,UAAAC,OAAO;AAAA,aAAIA,OAAO,CAACC,MAAR,eAAsBC,6BAAtB,aAAJ;AAAA,KADkB,CAA3B;AAIAN,IAAAA,uBAAuB,mCAClBA,uBADkB;AAErBO,MAAAA,QAAQ,kCACHP,uBAAuB,CAACO,QADrB;AAENC,QAAAA,YAAY,EAAEN;AAFR;AAFa,MAAvB;AAOD;;AAED,uDACKN,KADL,GAEKE,WAFL;AAGED,IAAAA,iBAAiB,EAAEG,uBAHrB;AAIES,IAAAA,WAAW,EAAEX,WAJf;AAKEY,IAAAA,YAAY,EAAEX,IAAI,IAAIA,IAAI,CAACE,IAAL,KAAc;AALtC;AAOD,CA1BD;;eA4BeN,I","sourcesContent":["import { get } from 'lodash';\n\nimport { CONTENT_MANAGER_PREFIX } from './utils';\n\nconst init = (state, permissionsLayout, permissions, role) => {\n  let customPermissionsLayout = permissionsLayout;\n\n  // Customize permissions layout for the Author role\n  if (role.code === 'strapi-author') {\n    // The publish action have to be hidden in CE for the author role.\n    const contentTypesLayout = get(permissionsLayout, ['sections', 'contentTypes'], []).filter(\n      pLayout => pLayout.action !== `${CONTENT_MANAGER_PREFIX}.publish`\n    );\n\n    customPermissionsLayout = {\n      ...customPermissionsLayout,\n      sections: {\n        ...customPermissionsLayout.sections,\n        contentTypes: contentTypesLayout,\n      },\n    };\n  }\n\n  return {\n    ...state,\n    ...permissions,\n    permissionsLayout: customPermissionsLayout,\n    initialData: permissions,\n    isSuperAdmin: role && role.code === 'strapi-super-admin',\n  };\n};\n\nexport default init;\n"]},"metadata":{},"sourceType":"script"}