{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.generateLinks = exports[\"default\"] = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _lodash = require(\"lodash\");\n\nvar generateLinks = function generateLinks(links) {\n  return links.filter(function (link) {\n    return link.isDisplayed;\n  }).map(function (link) {\n    return {\n      icon: 'circle',\n      destination: \"/plugins/content-manager/\".concat(link.kind, \"/\").concat(link.uid),\n      isDisplayed: false,\n      label: link.info.label,\n      permissions: [{\n        action: 'plugins::content-manager.explorer.create',\n        subject: link.uid\n      }, {\n        action: 'plugins::content-manager.explorer.read',\n        subject: link.uid\n      }, {\n        action: 'plugins::content-manager.explorer.update',\n        subject: link.uid\n      }]\n    };\n  });\n};\n\nexports.generateLinks = generateLinks;\n\nvar generateModelsLinks = function generateModelsLinks(models) {\n  var _chain$groupBy$map$so = (0, _lodash.chain)(models).groupBy('kind').map(function (value, key) {\n    return {\n      name: key,\n      links: value\n    };\n  }).sortBy('name').value(),\n      _chain$groupBy$map$so2 = (0, _slicedToArray2[\"default\"])(_chain$groupBy$map$so, 2),\n      collectionTypes = _chain$groupBy$map$so2[0],\n      singleTypes = _chain$groupBy$map$so2[1];\n\n  return {\n    collectionTypesSectionLinks: generateLinks((0, _lodash.get)(collectionTypes, 'links', [])),\n    singleTypesSectionLinks: generateLinks((0, _lodash.get)(singleTypes, 'links', []))\n  };\n};\n\nvar _default = generateModelsLinks;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["D:/webstorm_projects/redcat_backend/.cache/admin/src/containers/LeftMenu/utils/generateModelsLinks.js"],"names":["generateLinks","links","filter","link","isDisplayed","map","icon","destination","kind","uid","label","info","permissions","action","subject","generateModelsLinks","models","groupBy","value","key","name","sortBy","collectionTypes","singleTypes","collectionTypesSectionLinks","singleTypesSectionLinks"],"mappings":";;;;;;;;;;;AAAA;;AAEA,IAAMA,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,KAAK,EAAI;AAC7B,SAAOA,KAAK,CACTC,MADI,CACG,UAAAC,IAAI;AAAA,WAAIA,IAAI,CAACC,WAAT;AAAA,GADP,EAEJC,GAFI,CAEA,UAAAF,IAAI,EAAI;AACX,WAAO;AACLG,MAAAA,IAAI,EAAE,QADD;AAELC,MAAAA,WAAW,qCAA8BJ,IAAI,CAACK,IAAnC,cAA2CL,IAAI,CAACM,GAAhD,CAFN;AAGLL,MAAAA,WAAW,EAAE,KAHR;AAILM,MAAAA,KAAK,EAAEP,IAAI,CAACQ,IAAL,CAAUD,KAJZ;AAKLE,MAAAA,WAAW,EAAE,CACX;AAAEC,QAAAA,MAAM,EAAE,0CAAV;AAAsDC,QAAAA,OAAO,EAAEX,IAAI,CAACM;AAApE,OADW,EAEX;AAAEI,QAAAA,MAAM,EAAE,wCAAV;AAAoDC,QAAAA,OAAO,EAAEX,IAAI,CAACM;AAAlE,OAFW,EAGX;AAAEI,QAAAA,MAAM,EAAE,0CAAV;AAAsDC,QAAAA,OAAO,EAAEX,IAAI,CAACM;AAApE,OAHW;AALR,KAAP;AAWD,GAdI,CAAP;AAeD,CAhBD;;;;AAkBA,IAAMM,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAAC,MAAM,EAAI;AAAA,8BACG,mBAAMA,MAAN,EACpCC,OADoC,CAC5B,MAD4B,EAEpCZ,GAFoC,CAEhC,UAACa,KAAD,EAAQC,GAAR;AAAA,WAAiB;AAAEC,MAAAA,IAAI,EAAED,GAAR;AAAalB,MAAAA,KAAK,EAAEiB;AAApB,KAAjB;AAAA,GAFgC,EAGpCG,MAHoC,CAG7B,MAH6B,EAIpCH,KAJoC,EADH;AAAA;AAAA,MAC7BI,eAD6B;AAAA,MACZC,WADY;;AAOpC,SAAO;AACLC,IAAAA,2BAA2B,EAAExB,aAAa,CAAC,iBAAIsB,eAAJ,EAAqB,OAArB,EAA8B,EAA9B,CAAD,CADrC;AAELG,IAAAA,uBAAuB,EAAEzB,aAAa,CAAC,iBAAIuB,WAAJ,EAAiB,OAAjB,EAA0B,EAA1B,CAAD;AAFjC,GAAP;AAID,CAXD;;eAaeR,mB","sourcesContent":["import { chain, get } from 'lodash';\n\nconst generateLinks = links => {\n  return links\n    .filter(link => link.isDisplayed)\n    .map(link => {\n      return {\n        icon: 'circle',\n        destination: `/plugins/content-manager/${link.kind}/${link.uid}`,\n        isDisplayed: false,\n        label: link.info.label,\n        permissions: [\n          { action: 'plugins::content-manager.explorer.create', subject: link.uid },\n          { action: 'plugins::content-manager.explorer.read', subject: link.uid },\n          { action: 'plugins::content-manager.explorer.update', subject: link.uid },\n        ],\n      };\n    });\n};\n\nconst generateModelsLinks = models => {\n  const [collectionTypes, singleTypes] = chain(models)\n    .groupBy('kind')\n    .map((value, key) => ({ name: key, links: value }))\n    .sortBy('name')\n    .value();\n\n  return {\n    collectionTypesSectionLinks: generateLinks(get(collectionTypes, 'links', [])),\n    singleTypesSectionLinks: generateLinks(get(singleTypes, 'links', [])),\n  };\n};\n\nexport default generateModelsLinks;\nexport { generateLinks };\n"]},"metadata":{},"sourceType":"script"}