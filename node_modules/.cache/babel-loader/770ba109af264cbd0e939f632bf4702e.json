{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = require(\"react\");\n\nvar _strapiHelperPlugin = require(\"strapi-helper-plugin\");\n\nvar _reducer = _interopRequireWildcard(require(\"./reducer\"));\n\nvar useFetchPermissionsLayout = function useFetchPermissionsLayout() {\n  var _useReducer = (0, _react.useReducer)(_reducer[\"default\"], _reducer.initialState),\n      _useReducer2 = (0, _slicedToArray2[\"default\"])(_useReducer, 2),\n      _useReducer2$ = _useReducer2[0],\n      data = _useReducer2$.data,\n      error = _useReducer2$.error,\n      isLoading = _useReducer2$.isLoading,\n      dispatch = _useReducer2[1];\n\n  (0, _react.useEffect)(function () {\n    var getData = /*#__PURE__*/function () {\n      var _ref = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee() {\n        var _yield$request, data;\n\n        return _regenerator[\"default\"].wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                dispatch({\n                  type: 'GET_DATA'\n                });\n                _context.next = 3;\n                return (0, _strapiHelperPlugin.request)('/admin/permissions', {\n                  method: 'GET'\n                });\n\n              case 3:\n                _yield$request = _context.sent;\n                data = _yield$request.data;\n                dispatch({\n                  type: 'GET_DATA_SUCCEEDED',\n                  data: data\n                });\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function getData() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    getData();\n  }, []);\n  return {\n    data: data,\n    error: error,\n    isLoading: isLoading\n  };\n};\n\nvar _default = useFetchPermissionsLayout;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["D:/webstorm_projects/redcat_backend/.cache/admin/src/hooks/useFetchPermissionsLayout/index.js"],"names":["useFetchPermissionsLayout","reducer","initialState","data","error","isLoading","dispatch","getData","type","method"],"mappings":";;;;;;;;;;;;;;;;;AAAA;;AACA;;AAEA;;AAEA,IAAMA,yBAAyB,GAAG,SAA5BA,yBAA4B,GAAM;AAAA,oBACS,uBAAWC,mBAAX,EAAoBC,qBAApB,CADT;AAAA;AAAA;AAAA,MAC7BC,IAD6B,iBAC7BA,IAD6B;AAAA,MACvBC,KADuB,iBACvBA,KADuB;AAAA,MAChBC,SADgB,iBAChBA,SADgB;AAAA,MACHC,QADG;;AAGtC,wBAAU,YAAM;AACd,QAAMC,OAAO;AAAA,+FAAG;AAAA;;AAAA;AAAA;AAAA;AAAA;AACdD,gBAAAA,QAAQ,CAAC;AACPE,kBAAAA,IAAI,EAAE;AADC,iBAAD,CAAR;AADc;AAAA,uBAKS,iCAAQ,oBAAR,EAA8B;AAAEC,kBAAAA,MAAM,EAAE;AAAV,iBAA9B,CALT;;AAAA;AAAA;AAKNN,gBAAAA,IALM,kBAKNA,IALM;AAOdG,gBAAAA,QAAQ,CAAC;AACPE,kBAAAA,IAAI,EAAE,oBADC;AAEPL,kBAAAA,IAAI,EAAJA;AAFO,iBAAD,CAAR;;AAPc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAH;;AAAA,sBAAPI,OAAO;AAAA;AAAA;AAAA,OAAb;;AAaAA,IAAAA,OAAO;AACR,GAfD,EAeG,EAfH;AAiBA,SAAO;AAAEJ,IAAAA,IAAI,EAAJA,IAAF;AAAQC,IAAAA,KAAK,EAALA,KAAR;AAAeC,IAAAA,SAAS,EAATA;AAAf,GAAP;AACD,CArBD;;eAuBeL,yB","sourcesContent":["import { useEffect, useReducer } from 'react';\nimport { request } from 'strapi-helper-plugin';\n\nimport reducer, { initialState } from './reducer';\n\nconst useFetchPermissionsLayout = () => {\n  const [{ data, error, isLoading }, dispatch] = useReducer(reducer, initialState);\n\n  useEffect(() => {\n    const getData = async () => {\n      dispatch({\n        type: 'GET_DATA',\n      });\n\n      const { data } = await request('/admin/permissions', { method: 'GET' });\n\n      dispatch({\n        type: 'GET_DATA_SUCCEEDED',\n        data,\n      });\n    };\n\n    getData();\n  }, []);\n\n  return { data, error, isLoading };\n};\n\nexport default useFetchPermissionsLayout;\n"]},"metadata":{},"sourceType":"script"}