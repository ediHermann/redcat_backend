{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _lodash = require(\"lodash\");\n\nvar _getExistingActions = _interopRequireDefault(require(\"./getExistingActions\"));\n\nvar _utils = require(\"../components/Roles/Permissions/utils\");\n\nvar formatPermissionsToApi = function formatPermissionsToApi(permissions) {\n  var existingActions = (0, _getExistingActions[\"default\"])(permissions.contentTypesPermissions);\n  var formattedPermissions = Object.entries(permissions.contentTypesPermissions).reduce(function (acc, current) {\n    var formatPermission = function formatPermission(permission) {\n      return existingActions.reduce(function (actionAcc, currentAction) {\n        var _permission$ = permission[1],\n            contentTypeActions = _permission$.contentTypeActions,\n            conditions = _permission$.conditions; // @HichamELBSI  the code is breaking when selecting the global delete action when a model does not have any required field\n\n        var attributes = (0, _lodash.get)(permission, [1, 'attributes'], {});\n        var hasAction = Object.values(attributes).findIndex(function (item) {\n          return item.actions && item.actions.includes(currentAction);\n        }) !== -1;\n        var hasContentTypeAction = contentTypeActions && contentTypeActions[currentAction];\n        var fields = Object.entries(attributes).map(function (item) {\n          if (item[1].actions && item[1].actions.includes(currentAction)) {\n            return item[0];\n          }\n\n          return null;\n        }).filter(function (item) {\n          return !!item;\n        });\n\n        if (hasAction || hasContentTypeAction) {\n          return [].concat((0, _toConsumableArray2[\"default\"])(actionAcc), [{\n            action: currentAction,\n            subject: permission[0],\n            fields: fields.length > 0 ? fields : null,\n            conditions: (0, _lodash.get)(conditions, [currentAction], [])\n          }]);\n        }\n\n        return actionAcc;\n      }, []);\n    };\n\n    return [].concat((0, _toConsumableArray2[\"default\"])(acc), (0, _toConsumableArray2[\"default\"])(formatPermission(current)));\n  }, []);\n  var contentTypesPermissionsToSend = formattedPermissions.filter(function (permission) {\n    return (0, _utils.isAttributeAction)(permission.action) && permission.fields !== null || !(0, _utils.isAttributeAction)(permission.action);\n  });\n  return [].concat((0, _toConsumableArray2[\"default\"])(contentTypesPermissionsToSend), (0, _toConsumableArray2[\"default\"])(permissions.pluginsAndSettingsPermissions || []));\n};\n\nvar _default = formatPermissionsToApi;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["D:/webstorm_projects/redcat_backend/.cache/admin/src/utils/formatPermissionsToApi.js"],"names":["formatPermissionsToApi","permissions","existingActions","contentTypesPermissions","formattedPermissions","Object","entries","reduce","acc","current","formatPermission","permission","actionAcc","currentAction","contentTypeActions","conditions","attributes","hasAction","values","findIndex","item","actions","includes","hasContentTypeAction","fields","map","filter","action","subject","length","contentTypesPermissionsToSend","pluginsAndSettingsPermissions"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AAEA;;AAEA,IAAMA,sBAAsB,GAAG,SAAzBA,sBAAyB,CAAAC,WAAW,EAAI;AAC5C,MAAMC,eAAe,GAAG,oCAAmBD,WAAW,CAACE,uBAA/B,CAAxB;AAEA,MAAMC,oBAAoB,GAAGC,MAAM,CAACC,OAAP,CAAeL,WAAW,CAACE,uBAA3B,EAAoDI,MAApD,CAC3B,UAACC,GAAD,EAAMC,OAAN,EAAkB;AAChB,QAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAAC,UAAU;AAAA,aACjCT,eAAe,CAACK,MAAhB,CAAuB,UAACK,SAAD,EAAYC,aAAZ,EAA8B;AAAA,2BACRF,UAAU,CAAC,CAAD,CADF;AAAA,YAC3CG,kBAD2C,gBAC3CA,kBAD2C;AAAA,YACvBC,UADuB,gBACvBA,UADuB,EAEnD;;AACA,YAAMC,UAAU,GAAG,iBAAIL,UAAJ,EAAgB,CAAC,CAAD,EAAI,YAAJ,CAAhB,EAAmC,EAAnC,CAAnB;AAEA,YAAMM,SAAS,GACbZ,MAAM,CAACa,MAAP,CAAcF,UAAd,EAA0BG,SAA1B,CACE,UAAAC,IAAI;AAAA,iBAAIA,IAAI,CAACC,OAAL,IAAgBD,IAAI,CAACC,OAAL,CAAaC,QAAb,CAAsBT,aAAtB,CAApB;AAAA,SADN,MAEM,CAAC,CAHT;AAIA,YAAMU,oBAAoB,GAAGT,kBAAkB,IAAIA,kBAAkB,CAACD,aAAD,CAArE;AACA,YAAMW,MAAM,GAAGnB,MAAM,CAACC,OAAP,CAAeU,UAAf,EACZS,GADY,CACR,UAAAL,IAAI,EAAI;AACX,cAAIA,IAAI,CAAC,CAAD,CAAJ,CAAQC,OAAR,IAAmBD,IAAI,CAAC,CAAD,CAAJ,CAAQC,OAAR,CAAgBC,QAAhB,CAAyBT,aAAzB,CAAvB,EAAgE;AAC9D,mBAAOO,IAAI,CAAC,CAAD,CAAX;AACD;;AAED,iBAAO,IAAP;AACD,SAPY,EAQZM,MARY,CAQL,UAAAN,IAAI;AAAA,iBAAI,CAAC,CAACA,IAAN;AAAA,SARC,CAAf;;AAUA,YAAIH,SAAS,IAAIM,oBAAjB,EAAuC;AACrC,+DACKX,SADL,IAEE;AACEe,YAAAA,MAAM,EAAEd,aADV;AAEEe,YAAAA,OAAO,EAAEjB,UAAU,CAAC,CAAD,CAFrB;AAGEa,YAAAA,MAAM,EAAEA,MAAM,CAACK,MAAP,GAAgB,CAAhB,GAAoBL,MAApB,GAA6B,IAHvC;AAIET,YAAAA,UAAU,EAAE,iBAAIA,UAAJ,EAAgB,CAACF,aAAD,CAAhB,EAAiC,EAAjC;AAJd,WAFF;AASD;;AAED,eAAOD,SAAP;AACD,OAjCD,EAiCG,EAjCH,CADiC;AAAA,KAAnC;;AAoCA,yDAAWJ,GAAX,uCAAmBE,gBAAgB,CAACD,OAAD,CAAnC;AACD,GAvC0B,EAwC3B,EAxC2B,CAA7B;AA2CA,MAAMqB,6BAA6B,GAAG1B,oBAAoB,CAACsB,MAArB,CACpC,UAAAf,UAAU;AAAA,WACP,8BAAkBA,UAAU,CAACgB,MAA7B,KAAwChB,UAAU,CAACa,MAAX,KAAsB,IAA/D,IACA,CAAC,8BAAkBb,UAAU,CAACgB,MAA7B,CAFO;AAAA,GAD0B,CAAtC;AAMA,uDAAWG,6BAAX,uCAA8C7B,WAAW,CAAC8B,6BAAZ,IAA6C,EAA3F;AACD,CArDD;;eAuDe/B,sB","sourcesContent":["import { get } from 'lodash';\nimport getExistingActions from './getExistingActions';\n\nimport { isAttributeAction } from '../components/Roles/Permissions/utils';\n\nconst formatPermissionsToApi = permissions => {\n  const existingActions = getExistingActions(permissions.contentTypesPermissions);\n\n  const formattedPermissions = Object.entries(permissions.contentTypesPermissions).reduce(\n    (acc, current) => {\n      const formatPermission = permission =>\n        existingActions.reduce((actionAcc, currentAction) => {\n          const { contentTypeActions, conditions } = permission[1];\n          // @HichamELBSI  the code is breaking when selecting the global delete action when a model does not have any required field\n          const attributes = get(permission, [1, 'attributes'], {});\n\n          const hasAction =\n            Object.values(attributes).findIndex(\n              item => item.actions && item.actions.includes(currentAction)\n            ) !== -1;\n          const hasContentTypeAction = contentTypeActions && contentTypeActions[currentAction];\n          const fields = Object.entries(attributes)\n            .map(item => {\n              if (item[1].actions && item[1].actions.includes(currentAction)) {\n                return item[0];\n              }\n\n              return null;\n            })\n            .filter(item => !!item);\n\n          if (hasAction || hasContentTypeAction) {\n            return [\n              ...actionAcc,\n              {\n                action: currentAction,\n                subject: permission[0],\n                fields: fields.length > 0 ? fields : null,\n                conditions: get(conditions, [currentAction], []),\n              },\n            ];\n          }\n\n          return actionAcc;\n        }, []);\n\n      return [...acc, ...formatPermission(current)];\n    },\n    []\n  );\n\n  const contentTypesPermissionsToSend = formattedPermissions.filter(\n    permission =>\n      (isAttributeAction(permission.action) && permission.fields !== null) ||\n      !isAttributeAction(permission.action)\n  );\n\n  return [...contentTypesPermissionsToSend, ...(permissions.pluginsAndSettingsPermissions || [])];\n};\n\nexport default formatPermissionsToApi;\n"]},"metadata":{},"sourceType":"script"}