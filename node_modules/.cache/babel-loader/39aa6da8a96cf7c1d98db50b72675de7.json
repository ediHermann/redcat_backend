{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _strapiHelperPlugin = require(\"strapi-helper-plugin\");\n\nvar _core = require(\"@buffetjs/core\");\n\nvar _custom = require(\"@buffetjs/custom\");\n\nvar _reactRouterDom = require(\"react-router-dom\");\n\nvar _reactIntl = require(\"react-intl\");\n\nvar _lodash = require(\"lodash\");\n\nvar _pluginId = _interopRequireDefault(require(\"../../pluginId\"));\n\nvar _useDataManager2 = _interopRequireDefault(require(\"../../hooks/useDataManager\"));\n\nvar _AttributeOption = _interopRequireDefault(require(\"../../components/AttributeOption\"));\n\nvar _BooleanBox = _interopRequireDefault(require(\"../../components/BooleanBox\"));\n\nvar _ComponentIconPicker = _interopRequireDefault(require(\"../../components/ComponentIconPicker\"));\n\nvar _CustomCheckbox = _interopRequireDefault(require(\"../../components/CustomCheckbox\"));\n\nvar _ModalHeader = _interopRequireDefault(require(\"../../components/ModalHeader\"));\n\nvar _HeaderModalNavContainer = _interopRequireDefault(require(\"../../components/HeaderModalNavContainer\"));\n\nvar _RelationForm = _interopRequireDefault(require(\"../../components/RelationForm\"));\n\nvar _HeaderNavLink = _interopRequireDefault(require(\"../../components/HeaderNavLink\"));\n\nvar _WrapperSelect = _interopRequireDefault(require(\"../../components/WrapperSelect\"));\n\nvar _getTrad = _interopRequireDefault(require(\"../../utils/getTrad\"));\n\nvar _makeSearch = _interopRequireDefault(require(\"../../utils/makeSearch\"));\n\nvar _attributes = _interopRequireDefault(require(\"./utils/attributes\"));\n\nvar _forms = _interopRequireDefault(require(\"./utils/forms\"));\n\nvar _createHeadersArray = _interopRequireDefault(require(\"./utils/createHeadersArray\"));\n\nvar _createHeadersObjectFromArray = _interopRequireDefault(require(\"./utils/createHeadersObjectFromArray\"));\n\nvar _createUid = require(\"./utils/createUid\");\n\nvar _getModalTitleSubHeader = _interopRequireDefault(require(\"./utils/getModalTitleSubHeader\"));\n\nvar _getNextSearch = _interopRequireDefault(require(\"./utils/getNextSearch\"));\n\nvar _staticData = require(\"./utils/staticData\");\n\nvar _init = _interopRequireDefault(require(\"./init\"));\n\nvar _reducer = _interopRequireWildcard(require(\"./reducer\"));\n\nvar _CustomButton = _interopRequireDefault(require(\"./CustomButton\"));\n\nvar _canEditContentType = _interopRequireDefault(require(\"./utils/canEditContentType\"));\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2[\"default\"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n/* eslint-disable indent */\n\n/* eslint-disable react/no-array-index-key */\nvar FormModal = function FormModal() {\n  var _useState = (0, _react.useState)(_staticData.INITIAL_STATE_DATA),\n      _useState2 = (0, _slicedToArray2[\"default\"])(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  var _useState3 = (0, _react.useState)(false),\n      _useState4 = (0, _slicedToArray2[\"default\"])(_useState3, 2),\n      showConfirmModal = _useState4[0],\n      setShowConfirmModal = _useState4[1];\n\n  var _useReducer = (0, _react.useReducer)(_reducer[\"default\"], _reducer.initialState, _init[\"default\"]),\n      _useReducer2 = (0, _slicedToArray2[\"default\"])(_useReducer, 2),\n      reducerState = _useReducer2[0],\n      dispatch = _useReducer2[1];\n\n  var _useHistory = (0, _reactRouterDom.useHistory)(),\n      push = _useHistory.push;\n\n  var _useLocation = (0, _reactRouterDom.useLocation)(),\n      search = _useLocation.search;\n\n  var _useGlobalContext = (0, _strapiHelperPlugin.useGlobalContext)(),\n      emitEvent = _useGlobalContext.emitEvent,\n      formatMessage = _useGlobalContext.formatMessage;\n\n  var query = (0, _strapiHelperPlugin.useQuery)();\n  var attributeOptionRef = (0, _react.useRef)();\n\n  var _useDataManager = (0, _useDataManager2[\"default\"])(),\n      addAttribute = _useDataManager.addAttribute,\n      addCreatedComponentToDynamicZone = _useDataManager.addCreatedComponentToDynamicZone,\n      allComponentsCategories = _useDataManager.allComponentsCategories,\n      changeDynamicZoneComponents = _useDataManager.changeDynamicZoneComponents,\n      contentTypes = _useDataManager.contentTypes,\n      components = _useDataManager.components,\n      createSchema = _useDataManager.createSchema,\n      deleteCategory = _useDataManager.deleteCategory,\n      deleteData = _useDataManager.deleteData,\n      editCategory = _useDataManager.editCategory,\n      submitData = _useDataManager.submitData,\n      allDataSchema = _useDataManager.modifiedData,\n      nestedComponents = _useDataManager.nestedComponents,\n      setModifiedData = _useDataManager.setModifiedData,\n      sortedContentTypesList = _useDataManager.sortedContentTypesList,\n      updateSchema = _useDataManager.updateSchema,\n      reservedNames = _useDataManager.reservedNames;\n\n  var _reducerState$toJS = reducerState.toJS(),\n      componentToCreate = _reducerState$toJS.componentToCreate,\n      formErrors = _reducerState$toJS.formErrors,\n      initialData = _reducerState$toJS.initialData,\n      isCreatingComponentWhileAddingAField = _reducerState$toJS.isCreatingComponentWhileAddingAField,\n      modifiedData = _reducerState$toJS.modifiedData;\n\n  (0, _react.useEffect)(function () {\n    if (!(0, _lodash.isEmpty)(search)) {\n      var actionType = query.get('actionType'); // Returns 'null' if there isn't any attributeType search params\n\n      var attributeName = query.get('attributeName');\n      var attributeType = query.get('attributeType');\n      var dynamicZoneTarget = query.get('dynamicZoneTarget');\n      var forTarget = query.get('forTarget');\n      var modalType = query.get('modalType');\n      var kind = query.get('kind') || (0, _lodash.get)(allDataSchema, ['contentType', 'schema', 'kind'], null);\n      var targetUid = query.get('targetUid');\n      var settingType = query.get('settingType');\n      var headerId = query.get('headerId');\n      var header_label_1 = query.get('header_label_1');\n      var header_icon_name_1 = query.get('header_icon_name_1');\n      var header_icon_isCustom_1 = query.get('header_icon_isCustom_1');\n      var header_info_category_1 = query.get('header_info_category_1');\n      var header_info_name_1 = query.get('header_info_name_1');\n      var header_label_2 = query.get('header_label_2');\n      var header_icon_name_2 = query.get('header_icon_name_2');\n      var header_icon_isCustom_2 = query.get('header_icon_isCustom_2');\n      var header_info_category_2 = query.get('header_info_category_2');\n      var header_info_name_2 = query.get('header_info_name_2');\n      var header_label_3 = query.get('header_label_3');\n      var header_icon_name_3 = query.get('header_icon_name_3');\n      var header_icon_isCustom_3 = query.get('header_icon_isCustom_3');\n      var header_info_category_3 = query.get('header_info_category_3');\n      var header_info_name_3 = query.get('header_info_name_3');\n      var header_label_4 = query.get('header_label_4');\n      var header_icon_name_4 = query.get('header_icon_name_4');\n      var header_icon_isCustom_4 = query.get('header_icon_isCustom_4');\n      var header_info_category_4 = query.get('header_info_category_4');\n      var header_info_name_4 = query.get('header_info_name_4');\n      var header_label_5 = query.get('header_label_5');\n      var header_icon_name_5 = query.get('header_icon_name_5');\n      var header_icon_isCustom_5 = query.get('header_icon_isCustom_5');\n      var header_info_category_5 = query.get('header_info_category_5');\n      var header_info_name_5 = query.get('header_info_name_5');\n      var step = query.get('step');\n      var pathToSchema = forTarget === 'contentType' || forTarget === 'component' ? [forTarget] : [forTarget, targetUid];\n      setState({\n        actionType: actionType,\n        attributeName: attributeName,\n        attributeType: attributeType,\n        kind: kind,\n        dynamicZoneTarget: dynamicZoneTarget,\n        forTarget: forTarget,\n        modalType: modalType,\n        pathToSchema: pathToSchema,\n        settingType: settingType,\n        step: step,\n        targetUid: targetUid,\n        header_label_1: header_label_1,\n        header_icon_name_1: header_icon_name_1,\n        header_icon_isCustom_1: header_icon_isCustom_1,\n        header_info_name_1: header_info_name_1,\n        header_info_category_1: header_info_category_1,\n        header_label_2: header_label_2,\n        header_icon_name_2: header_icon_name_2,\n        header_icon_isCustom_2: header_icon_isCustom_2,\n        header_info_name_2: header_info_name_2,\n        header_info_category_2: header_info_category_2,\n        header_label_3: header_label_3,\n        header_icon_name_3: header_icon_name_3,\n        header_icon_isCustom_3: header_icon_isCustom_3,\n        header_info_name_3: header_info_name_3,\n        header_info_category_3: header_info_category_3,\n        header_label_4: header_label_4,\n        header_icon_name_4: header_icon_name_4,\n        header_icon_isCustom_4: header_icon_isCustom_4,\n        header_info_name_4: header_info_name_4,\n        header_info_category_4: header_info_category_4,\n        header_label_5: header_label_5,\n        header_icon_name_5: header_icon_name_5,\n        header_icon_isCustom_5: header_icon_isCustom_5,\n        header_info_name_5: header_info_name_5,\n        header_info_category_5: header_info_category_5,\n        headerId: headerId\n      });\n      var collectionTypesForRelation = sortedContentTypesList.filter(function (_ref) {\n        var kind = _ref.kind;\n        return kind === 'collectionType';\n      }); // Reset all the modification when opening the edit category modal\n\n      if (modalType === 'editCategory') {\n        setModifiedData();\n      }\n\n      if (actionType === 'edit' && modalType === 'attribute' && forTarget === 'contentType') {\n        emitEvent('willEditFieldOfContentType');\n      } // Case:\n      // the user opens the modal chooseAttributes\n      // selects dynamic zone => set the field name\n      // then goes to step 1 (the modal is addComponentToDynamicZone) and finally reloads the app.\n      // In this particular if the user tries to add components to the zone it will pop an error since the dz is unknown\n\n\n      var shouldCloseModalToPreventErrorWhenCreatingADZ = (0, _lodash.get)(allDataSchema, [].concat(pathToSchema, ['schema', 'attributes', dynamicZoneTarget]), null) === null && modalType === 'addComponentToDynamicZone'; // Similarly when creating a component on the fly if the user reloads the app\n      // The previous data is lost\n      // Since the modal uses the search it will still be opened\n\n      var shouldCloseModalChooseAttribute = (0, _lodash.get)(allDataSchema, ['components', targetUid], null) === null && // modalType === 'chooseAttribute' &&\n      forTarget === 'components';\n\n      if (shouldCloseModalToPreventErrorWhenCreatingADZ || shouldCloseModalChooseAttribute) {\n        push({\n          search: ''\n        });\n      } // Edit category\n\n\n      if (modalType === 'editCategory' && actionType === 'edit') {\n        dispatch({\n          type: 'SET_DATA_TO_EDIT',\n          data: {\n            name: query.get('categoryName')\n          }\n        });\n      } // Create content type we need to add the default option draftAndPublish\n\n\n      if (modalType === 'contentType' && state.modalType !== 'contentType' && // Prevent setting the data structure when navigating from one tab to another\n      actionType === 'create') {\n        dispatch({\n          type: 'SET_DATA_TO_EDIT',\n          data: {\n            draftAndPublish: true\n          }\n        });\n      } // Edit content type\n\n\n      if (modalType === 'contentType' && state.modalType !== 'contentType' && actionType === 'edit') {\n        var _get = (0, _lodash.get)(allDataSchema, [].concat(pathToSchema, ['schema']), {\n          name: null,\n          collectionName: null\n        }),\n            name = _get.name,\n            collectionName = _get.collectionName,\n            draftAndPublish = _get.draftAndPublish,\n            _kind = _get.kind;\n\n        dispatch({\n          type: 'SET_DATA_TO_EDIT',\n          data: {\n            name: name,\n            collectionName: collectionName,\n            draftAndPublish: draftAndPublish,\n            kind: _kind\n          }\n        });\n      } // Edit component\n\n\n      if (modalType === 'component' && state.modalType !== 'component' && actionType === 'edit') {\n        var data = (0, _lodash.get)(allDataSchema, pathToSchema, {});\n        dispatch({\n          type: 'SET_DATA_TO_EDIT',\n          data: {\n            name: data.schema.name,\n            category: data.category,\n            icon: data.schema.icon,\n            collectionName: data.schema.collectionName\n          }\n        });\n      } // Special case for the dynamic zone\n\n\n      if (modalType === 'addComponentToDynamicZone' && state.modalType !== 'addComponentToDynamicZone' && actionType === 'edit') {\n        var attributeToEditNotFormatted = (0, _lodash.get)(allDataSchema, [].concat(pathToSchema, ['schema', 'attributes', dynamicZoneTarget]), {});\n\n        var attributeToEdit = _objectSpread(_objectSpread({}, attributeToEditNotFormatted), {}, {\n          // We filter the available components\n          // Because this modal is only used for adding components\n          components: [],\n          name: dynamicZoneTarget,\n          createComponent: false,\n          componentToCreate: {\n            type: 'component'\n          }\n        });\n\n        dispatch({\n          type: 'SET_DYNAMIC_ZONE_DATA_SCHEMA',\n          attributeToEdit: attributeToEdit\n        });\n      } // Set the predefined data structure to create an attribute\n\n\n      if (attributeType && attributeType !== 'null' && // This condition is added to prevent the reducer state to be cleared when navigating from the base tab to tha advanced one\n      state.modalType !== 'attribute') {\n        var _attributeToEditNotFormatted = (0, _lodash.get)(allDataSchema, [].concat(pathToSchema, ['schema', 'attributes', attributeName]), {});\n\n        var _attributeToEdit = _objectSpread(_objectSpread({}, _attributeToEditNotFormatted), {}, {\n          name: attributeName\n        }); // We need to set the repeatable key to false when editing a component\n        // The API doesn't send this info\n\n\n        if (attributeType === 'component' && actionType === 'edit') {\n          if (!_attributeToEdit.repeatable) {\n            (0, _lodash.set)(_attributeToEdit, 'repeatable', false);\n          }\n        }\n\n        if (attributeType === 'relation' && !(0, _lodash.has)(_attributeToEdit, ['targetAttribute'])) {\n          (0, _lodash.set)(_attributeToEdit, ['targetAttribute'], '-');\n        }\n\n        dispatch({\n          type: 'SET_ATTRIBUTE_DATA_SCHEMA',\n          attributeType: attributeType,\n          nameToSetForRelation: (0, _lodash.get)(collectionTypesForRelation, ['0', 'title'], 'error'),\n          targetUid: (0, _lodash.get)(collectionTypesForRelation, ['0', 'uid'], 'error'),\n          isEditing: actionType === 'edit',\n          modifiedDataToSetForEditing: _attributeToEdit,\n          step: step\n        });\n      }\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [search]);\n  var form = (0, _lodash.get)(_forms[\"default\"], [state.modalType, 'form', state.settingType], function () {\n    return {\n      items: []\n    };\n  });\n  var headers = (0, _createHeadersArray[\"default\"])(state);\n  var isCreatingContentType = state.modalType === 'contentType';\n  var isCreatingComponent = state.modalType === 'component';\n  var isCreatingAttribute = state.modalType === 'attribute';\n  var isComponentAttribute = state.attributeType === 'component' && isCreatingAttribute;\n  var isCreating = state.actionType === 'create';\n  var isCreatingComponentFromAView = (0, _lodash.get)(modifiedData, 'createComponent', false) || isCreatingComponentWhileAddingAField;\n  var isInFirstComponentStep = state.step === '1';\n  var isEditingCategory = state.modalType === 'editCategory';\n  var isOpen = !(0, _lodash.isEmpty)(search);\n  var isPickingAttribute = state.modalType === 'chooseAttribute';\n  var uid = (0, _createUid.createUid)(modifiedData.name || '');\n  var attributes = (0, _lodash.get)(allDataSchema, [].concat((0, _toConsumableArray2[\"default\"])(state.pathToSchema), ['schema', 'attributes']), null);\n\n  var checkFormValidity = /*#__PURE__*/function () {\n    var _ref2 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee() {\n      var schema, dataToValidate, type, alreadyTakenTargetContentTypeAttributes, targetContentTypeUID, targetContentTypeAttributes;\n      return _regenerator[\"default\"].wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              dataToValidate = isCreatingComponentFromAView && state.step === '1' ? (0, _lodash.get)(modifiedData, 'componentToCreate', {}) : modifiedData; // Check form validity for content type\n\n              if (!isCreatingContentType) {\n                _context.next = 5;\n                break;\n              }\n\n              schema = _forms[\"default\"].contentType.schema(Object.keys(contentTypes), state.actionType === 'edit', // currentUID\n              (0, _lodash.get)(allDataSchema, [].concat((0, _toConsumableArray2[\"default\"])(state.pathToSchema), ['uid']), null), reservedNames); // Check form validity for component\n              // This is happening when the user click on the link from the left menu\n\n              _context.next = 29;\n              break;\n\n            case 5:\n              if (!isCreatingComponent) {\n                _context.next = 9;\n                break;\n              }\n\n              schema = _forms[\"default\"].component.schema(Object.keys(components), modifiedData.category || '', reservedNames, state.actionType === 'edit', (0, _lodash.get)(allDataSchema, [].concat((0, _toConsumableArray2[\"default\"])(state.pathToSchema), ['uid']), null)); // Check for validity for creating a component\n              // This is happening when the user creates a component \"on the fly\"\n              // Since we temporarily store the component info in another object\n              // The data is set in the componentToCreate key\n\n              _context.next = 29;\n              break;\n\n            case 9:\n              if (!(isComponentAttribute && isCreatingComponentFromAView && isInFirstComponentStep)) {\n                _context.next = 13;\n                break;\n              }\n\n              schema = _forms[\"default\"].component.schema(Object.keys(components), (0, _lodash.get)(modifiedData, 'componentToCreate.category', ''), reservedNames); // Check form validity for creating a 'common attribute'\n              // We need to make sure that it is independent from the step\n\n              _context.next = 29;\n              break;\n\n            case 13:\n              if (!(isCreatingAttribute && !isInFirstComponentStep)) {\n                _context.next = 20;\n                break;\n              }\n\n              type = state.attributeType === 'relation' ? 'relation' : modifiedData.type;\n              alreadyTakenTargetContentTypeAttributes = [];\n\n              if (type === 'relation') {\n                targetContentTypeUID = (0, _lodash.get)(modifiedData, ['target'], null);\n                targetContentTypeAttributes = (0, _lodash.get)(contentTypes, [targetContentTypeUID, 'schema', 'attributes'], {}); // Create an array with all the targetContentType attributes name\n                // in order to prevent the user from creating a relation with a targetAttribute\n                // that may exist in the other content type\n\n                alreadyTakenTargetContentTypeAttributes = Object.keys(targetContentTypeAttributes).filter(function (attrName) {\n                  // Keep all the target content type attributes when creating a relation\n                  if (state.actionType !== 'edit') {\n                    return true;\n                  } // Remove the already created one when editing\n\n\n                  return attrName !== initialData.targetAttribute;\n                });\n              }\n\n              schema = _forms[\"default\"][state.modalType].schema((0, _lodash.get)(allDataSchema, state.pathToSchema, {}), type, modifiedData, state.actionType === 'edit', state.attributeName, initialData, alreadyTakenTargetContentTypeAttributes, reservedNames);\n              _context.next = 29;\n              break;\n\n            case 20:\n              if (!isEditingCategory) {\n                _context.next = 24;\n                break;\n              }\n\n              schema = _forms[\"default\"].editCategory.schema(allComponentsCategories, initialData);\n              _context.next = 29;\n              break;\n\n            case 24:\n              if (!(isInFirstComponentStep && isCreatingComponentFromAView)) {\n                _context.next = 28;\n                break;\n              }\n\n              schema = _forms[\"default\"].component.schema(Object.keys(components), (0, _lodash.get)(modifiedData, 'componentToCreate.category', ''), reservedNames);\n              _context.next = 29;\n              break;\n\n            case 28:\n              return _context.abrupt(\"return\");\n\n            case 29:\n              _context.next = 31;\n              return schema.validate(dataToValidate, {\n                abortEarly: false\n              });\n\n            case 31:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function checkFormValidity() {\n      return _ref2.apply(this, arguments);\n    };\n  }(); // TODO this should be a util for testing\n\n\n  var getButtonSubmitMessage = function getButtonSubmitMessage() {\n    var attributeType = state.attributeType,\n        modalType = state.modalType;\n    var isCreatingAComponent = (0, _lodash.get)(modifiedData, 'createComponent', false);\n    var tradId;\n\n    switch (modalType) {\n      case 'contentType':\n      case 'component':\n      case 'editCategory':\n        tradId = !isCreating ? (0, _getTrad[\"default\"])('form.button.finish') : (0, _getTrad[\"default\"])('form.button.continue');\n        break;\n\n      case 'addComponentToDynamicZone':\n        {\n          tradId = isCreatingAComponent ? (0, _getTrad[\"default\"])('form.button.add-first-field-to-created-component') : (0, _getTrad[\"default\"])('form.button.finish');\n          break;\n        }\n\n      case 'attribute':\n        {\n          if (attributeType === 'dynamiczone') {\n            tradId = (0, _getTrad[\"default\"])('form.button.add-components-to-dynamiczone');\n          } else if (attributeType === 'component') {\n            if (isInFirstComponentStep) {\n              tradId = isCreatingAComponent ? (0, _getTrad[\"default\"])('form.button.configure-component') : (0, _getTrad[\"default\"])('form.button.select-component');\n            } else {\n              tradId = isCreatingComponentWhileAddingAField ? (0, _getTrad[\"default\"])('form.button.add-first-field-to-created-component') : (0, _getTrad[\"default\"])('form.button.add-field');\n            }\n          } else {\n            tradId = (0, _getTrad[\"default\"])('form.button.add-field');\n          }\n\n          break;\n        }\n\n      default:\n        tradId = (0, _getTrad[\"default\"])('form.button.add-field');\n    }\n\n    return formatMessage({\n      id: tradId\n    });\n  }; // TODO remove and use the utils/makeSearch\n\n\n  var makeNextSearch = function makeNextSearch(searchObj) {\n    var shouldContinue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : isCreating;\n\n    if (!shouldContinue) {\n      return '';\n    }\n\n    return Object.keys(searchObj).reduce(function (acc, current, index) {\n      if (searchObj[current] !== null) {\n        acc = \"\".concat(acc).concat(index === 0 ? '' : '&').concat(current, \"=\").concat(searchObj[current]);\n      }\n\n      return acc;\n    }, '');\n  };\n\n  var handleClickAddComponentsToDynamicZone = function handleClickAddComponentsToDynamicZone(_ref3) {\n    var _ref3$target = _ref3.target,\n        name = _ref3$target.name,\n        components = _ref3$target.components,\n        shouldAddComponents = _ref3$target.shouldAddComponents;\n    dispatch({\n      type: 'ADD_COMPONENTS_TO_DYNAMIC_ZONE',\n      name: name,\n      components: components,\n      shouldAddComponents: shouldAddComponents\n    });\n  };\n\n  var handleChangeMediaAllowedTypes = function handleChangeMediaAllowedTypes(_ref4) {\n    var _ref4$target = _ref4.target,\n        name = _ref4$target.name,\n        value = _ref4$target.value;\n    dispatch({\n      type: 'ON_CHANGE_ALLOWED_TYPE',\n      name: name,\n      value: value\n    });\n  };\n\n  var toggleConfirmModal = (0, _react.useCallback)(function () {\n    return setShowConfirmModal(function (prev) {\n      return !prev;\n    });\n  }, []);\n  var handleChange = (0, _react.useCallback)(function (_ref5) {\n    var _ref5$target = _ref5.target,\n        name = _ref5$target.name,\n        value = _ref5$target.value,\n        type = _ref5$target.type,\n        rest = (0, _objectWithoutProperties2[\"default\"])(_ref5$target, [\"name\", \"value\", \"type\"]);\n    var namesThatCanResetToNullValue = ['enumName', 'max', 'min', 'maxLength', 'minLength', 'regex']; // When toggling the draftAndPublish from true to false\n    // We need to display a confirmation box\n\n    if (name === 'draftAndPublish' && state.actionType === 'edit' && value === false) {\n      toggleConfirmModal();\n      return;\n    }\n\n    var val;\n\n    if (['default'].concat(namesThatCanResetToNullValue).includes(name) && value === '') {\n      val = null;\n    } else if (type === 'radio' && (name === 'multiple' || name === 'single' || name === 'createComponent' || name === 'repeatable')) {\n      // eslint-disable-next-line no-unneeded-ternary\n      val = value === 'false' ? false : true; // The boolean default accepts 3 different values\n      // This check has been added to allow a reset to null for the bool\n    } else if (type === 'radio' && name === 'default') {\n      if (value === 'false') {\n        val = false;\n      } else if (value === 'true') {\n        val = true;\n      } else {\n        val = null;\n      } // We store an array for the enum\n\n    } else if (name === 'enum') {\n      val = value.split('\\n');\n    } else {\n      val = value;\n    }\n\n    var clonedErrors = Object.assign({}, formErrors); // Reset min error when modifying the max\n\n    if (name === 'max') {\n      delete clonedErrors.min;\n    } // Same here\n\n\n    if (name === 'maxLength') {\n      delete clonedErrors.minLength;\n    } // Since the onBlur is deactivated we remove the errors directly when changing an input\n\n\n    delete clonedErrors[name];\n    dispatch({\n      type: 'SET_ERRORS',\n      errors: clonedErrors\n    });\n    dispatch(_objectSpread({\n      type: 'ON_CHANGE',\n      keys: name.split('.'),\n      value: val\n    }, rest));\n  }, [formErrors, state.actionType, toggleConfirmModal]);\n  var handleConfirmDisableDraftAndPublish = (0, _react.useCallback)(function () {\n    dispatch({\n      type: 'ON_CHANGE',\n      keys: ['draftAndPublish'],\n      value: false\n    });\n    toggleConfirmModal();\n  }, [toggleConfirmModal]);\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref6 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2(e) {\n      var shouldContinue,\n          targetUid,\n          headerIcon,\n          currentKind,\n          headersObject,\n          nextHeaderIndex,\n          componentUid,\n          category,\n          rest,\n          isDynamicZoneAttribute,\n          dzSearch,\n          _nextSearch,\n          nextSearchObj,\n          nextSearch,\n          _objectSpread2,\n          searchObj,\n          _category,\n          type,\n          _rest,\n          _componentUid,\n          searchToOpenModalAttributeToAddAttributesToAComponent,\n          _objectSpread3,\n          _modifiedData$compone,\n          _category2,\n          _type,\n          _rest2,\n          _componentUid2,\n          searchToOpenAddField,\n          errors,\n          _args2 = arguments;\n\n      return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              shouldContinue = _args2.length > 1 && _args2[1] !== undefined ? _args2[1] : isCreating;\n              e.preventDefault();\n              _context2.prev = 2;\n              _context2.next = 5;\n              return checkFormValidity();\n\n            case 5:\n              sendButtonAddMoreFieldEvent(shouldContinue);\n              targetUid = state.forTarget === 'components' ? state.targetUid : uid;\n\n              if (state.forTarget === 'contentType') {\n                currentKind = (0, _lodash.get)(allDataSchema, ['contentType', 'schema', 'kind'], 'contentType');\n                headerIcon = state.kind || currentKind;\n              } else if (state.forTarget === 'component') {\n                headerIcon = 'component';\n              } else {\n                headerIcon = (0, _lodash.get)(allDataSchema, ['components', state.targetUid, 'schema', 'icon'], '');\n              } // Remove the last header when editing\n\n\n              if (state.actionType === 'edit') {\n                headers.pop();\n              }\n\n              headersObject = (0, _createHeadersObjectFromArray[\"default\"])(headers);\n              nextHeaderIndex = headers.length + 1;\n\n              if (!isCreatingContentType) {\n                _context2.next = 21;\n                break;\n              }\n\n              if (!isCreating) {\n                _context2.next = 16;\n                break;\n              }\n\n              createSchema(_objectSpread(_objectSpread({}, modifiedData), {}, {\n                kind: state.kind\n              }), state.modalType, uid);\n              _context2.next = 18;\n              break;\n\n            case 16:\n              if ((0, _canEditContentType[\"default\"])(allDataSchema, modifiedData)) {\n                push({\n                  search: ''\n                });\n                submitData(modifiedData);\n              } else {\n                strapi.notification.toggle({\n                  type: 'warning',\n                  message: {\n                    id: 'notification.contentType.relations.conflict'\n                  }\n                });\n              }\n\n              return _context2.abrupt(\"return\");\n\n            case 18:\n              push({\n                pathname: \"/plugins/\".concat(_pluginId[\"default\"], \"/content-types/\").concat(uid),\n                search: makeNextSearch({\n                  modalType: 'chooseAttribute',\n                  forTarget: state.forTarget,\n                  targetUid: targetUid,\n                  header_label_1: modifiedData.name,\n                  header_icon_name_1: headerIcon,\n                  header_icon_isCustom_1: null\n                })\n              });\n              _context2.next = 83;\n              break;\n\n            case 21:\n              if (!isCreatingComponent) {\n                _context2.next = 34;\n                break;\n              }\n\n              if (!isCreating) {\n                _context2.next = 29;\n                break;\n              }\n\n              // Create the component schema\n              componentUid = (0, _createUid.createComponentUid)(modifiedData.name, modifiedData.category);\n              category = modifiedData.category, rest = (0, _objectWithoutProperties2[\"default\"])(modifiedData, [\"category\"]);\n              createSchema(rest, 'component', componentUid, category);\n              push({\n                search: makeNextSearch({\n                  modalType: 'chooseAttribute',\n                  forTarget: state.forTarget,\n                  targetUid: componentUid,\n                  header_label_1: modifiedData.name,\n                  header_icon_name_1: 'contentType',\n                  header_icon_isCustom_1: null\n                }),\n                pathname: \"/plugins/\".concat(_pluginId[\"default\"], \"/component-categories/\").concat(category, \"/\").concat(componentUid)\n              });\n              _context2.next = 32;\n              break;\n\n            case 29:\n              updateSchema(modifiedData, state.modalType, state.targetUid); // Close the modal\n\n              push({\n                search: ''\n              });\n              return _context2.abrupt(\"return\");\n\n            case 32:\n              _context2.next = 83;\n              break;\n\n            case 34:\n              if (!isEditingCategory) {\n                _context2.next = 42;\n                break;\n              }\n\n              if (!((0, _lodash.toLower)(initialData.name) === (0, _lodash.toLower)(modifiedData.name))) {\n                _context2.next = 38;\n                break;\n              }\n\n              // Close the modal\n              push({\n                search: ''\n              });\n              return _context2.abrupt(\"return\");\n\n            case 38:\n              editCategory(initialData.name, modifiedData);\n              return _context2.abrupt(\"return\");\n\n            case 42:\n              if (!(isCreatingAttribute && !isCreatingComponentFromAView)) {\n                _context2.next = 64;\n                break;\n              }\n\n              if (isComponentAttribute) {\n                _context2.next = 54;\n                break;\n              }\n\n              addAttribute(modifiedData, state.forTarget, state.targetUid, state.actionType === 'edit', initialData);\n              isDynamicZoneAttribute = state.attributeType === 'dynamiczone'; // Adding a component to a dynamiczone is not the same logic as creating a simple field\n              // so the search is different\n\n              dzSearch = makeNextSearch(_objectSpread(_objectSpread({\n                modalType: 'addComponentToDynamicZone',\n                forTarget: 'contentType',\n                targetUid: state.targetUid,\n                dynamicZoneTarget: modifiedData.name,\n                settingType: 'base',\n                step: '1',\n                actionType: 'create'\n              }, headersObject), {}, {\n                header_label_2: modifiedData.name,\n                header_icon_name_2: null,\n                header_icon_isCustom_2: false\n              }));\n              _nextSearch = isDynamicZoneAttribute ? dzSearch : makeNextSearch(_objectSpread(_objectSpread({\n                modalType: 'chooseAttribute',\n                forTarget: state.forTarget,\n                targetUid: targetUid\n              }, headersObject), {}, {\n                header_icon_isCustom_1: !['contentType', 'component'].includes(state.forTarget),\n                header_icon_name_1: headerIcon\n              }), shouldContinue); // The user is creating a DZ (he had entered the name of the dz)\n\n              if (!isDynamicZoneAttribute) {\n                _context2.next = 52;\n                break;\n              }\n\n              // Step 1 of adding a component to a DZ, the user has the option to create a component\n              dispatch({\n                type: 'RESET_PROPS_AND_SET_THE_FORM_FOR_ADDING_A_COMPO_TO_A_DZ'\n              });\n              push({\n                search: isCreating ? _nextSearch : ''\n              });\n              return _context2.abrupt(\"return\");\n\n            case 52:\n              push({\n                search: _nextSearch\n              });\n              return _context2.abrupt(\"return\");\n\n            case 54:\n              if (!isInFirstComponentStep) {\n                _context2.next = 59;\n                break;\n              }\n\n              // Navigate the user to step 2\n              nextSearchObj = _objectSpread(_objectSpread({\n                modalType: 'attribute',\n                actionType: state.actionType,\n                settingType: 'base',\n                forTarget: state.forTarget,\n                targetUid: state.targetUid,\n                attributeType: 'component',\n                step: '2'\n              }, headersObject), {}, {\n                header_icon_isCustom_1: !['contentType', 'component'].includes(state.forTarget),\n                header_icon_name_1: headerIcon\n              });\n              push({\n                search: makeNextSearch(nextSearchObj, shouldContinue)\n              }); // Clear the reducer and prepare the modified data\n              // This way we don't have to add some logic to re-run the useEffect\n              // The first step is either needed to create a component or just to navigate\n              // To the modal for adding a \"common field\"\n\n              dispatch({\n                type: 'RESET_PROPS_AND_SET_FORM_FOR_ADDING_AN_EXISTING_COMPO'\n              }); // We don't want all the props to be reset\n\n              return _context2.abrupt(\"return\");\n\n            case 59:\n              addAttribute(modifiedData, state.forTarget, state.targetUid, // This change the dispatched type\n              // either 'EDIT_ATTRIBUTE' or 'ADD_ATTRIBUTE' in the DataManagerProvider\n              state.actionType === 'edit', // This is for the edit part\n              initialData, // Passing true will add the component to the components object\n              // This way we can add fields to the added component (if it wasn't there already)\n              true);\n              nextSearch = _objectSpread(_objectSpread({\n                modalType: 'chooseAttribute',\n                forTarget: state.forTarget,\n                targetUid: state.targetUid\n              }, headersObject), {}, {\n                header_icon_isCustom_1: !['contentType', 'component'].includes(state.forTarget),\n                header_icon_name_1: headerIcon\n              });\n              push({\n                search: (0, _makeSearch[\"default\"])(nextSearch, shouldContinue)\n              }); // We don't need to end the loop here we want the reducer to be reinitialised\n              // Logic for creating a component without clicking on the link in\n              // the left menu\n              // We need to separate the logic otherwise the component would be created\n              // even though the user didn't set any field\n              // We need to prevent the component from being created if the user closes the modal at step 2 without any submission\n\n              _context2.next = 83;\n              break;\n\n            case 64:\n              if (!(isCreatingAttribute && isCreatingComponentFromAView)) {\n                _context2.next = 81;\n                break;\n              }\n\n              if (!isInFirstComponentStep) {\n                _context2.next = 71;\n                break;\n              }\n\n              // Here the search could be refactored since it is the same as the case from above\n              // Navigate the user to step 2\n              searchObj = _objectSpread(_objectSpread({\n                modalType: 'attribute',\n                actionType: state.actionType,\n                settingType: 'base',\n                forTarget: state.forTarget,\n                targetUid: state.targetUid,\n                attributeType: 'component',\n                step: '2'\n              }, headersObject), {}, {\n                header_icon_isCustom_1: false,\n                header_icon_name_1: 'component'\n              });\n              emitEvent('willCreateComponentFromAttributesModal');\n              push({\n                search: makeNextSearch(searchObj, shouldContinue)\n              }); // Here we clear the reducer state but we also keep the created component\n              // If we were to create the component before\n\n              dispatch({\n                type: 'RESET_PROPS_AND_SAVE_CURRENT_DATA'\n              }); // Terminate because we don't want the reducer to be entirely reset\n\n              return _context2.abrupt(\"return\");\n\n            case 71:\n              // We are destructuring because the modifiedData object doesn't have the appropriate format to create a field\n              _category = componentToCreate.category, type = componentToCreate.type, _rest = (0, _objectWithoutProperties2[\"default\"])(componentToCreate, [\"category\", \"type\"]); // Create a the component temp UID\n              // This could be refactored but I think it's more understandable to separate the logic\n\n              _componentUid = (0, _createUid.createComponentUid)(componentToCreate.name, _category); // Create the component first and add it to the components data\n\n              createSchema( // Component data\n              _rest, // Type will always be component\n              // It will dispatch the CREATE_COMPONENT_SCHEMA action\n              // So the component will be added in the main components object\n              // This might not be needed if we don't allow navigation between entries while editing\n              type, _componentUid, _category, // This will add the created component in the datamanager modifiedData components key\n              // Like explained above we will be able to modify the created component structure\n              isCreatingComponentFromAView); // Add the field to the schema\n\n              addAttribute(modifiedData, state.forTarget, state.targetUid, false);\n              dispatch({\n                type: 'RESET_PROPS'\n              }); // Open modal attribute for adding attr to component\n\n              searchToOpenModalAttributeToAddAttributesToAComponent = _objectSpread(_objectSpread({\n                modalType: 'chooseAttribute',\n                forTarget: 'components',\n                targetUid: _componentUid\n              }, headersObject), {}, (_objectSpread2 = {\n                header_icon_isCustom_1: true,\n                header_icon_name_1: componentToCreate.icon\n              }, (0, _defineProperty2[\"default\"])(_objectSpread2, \"header_label_\".concat(nextHeaderIndex), modifiedData.name), (0, _defineProperty2[\"default\"])(_objectSpread2, \"header_icon_name_\".concat(nextHeaderIndex), 'component'), (0, _defineProperty2[\"default\"])(_objectSpread2, \"header_icon_isCustom_\".concat(nextHeaderIndex), false), (0, _defineProperty2[\"default\"])(_objectSpread2, \"header_info_category_\".concat(nextHeaderIndex), _category), (0, _defineProperty2[\"default\"])(_objectSpread2, \"header_info_name_\".concat(nextHeaderIndex), componentToCreate.name), _objectSpread2));\n              push({\n                search: makeNextSearch(searchToOpenModalAttributeToAddAttributesToAComponent, shouldContinue)\n              });\n              return _context2.abrupt(\"return\");\n\n            case 81:\n              // The modal is addComponentToDynamicZone\n              if (isInFirstComponentStep) {\n                if (isCreatingComponentFromAView) {\n                  _modifiedData$compone = modifiedData.componentToCreate, _category2 = _modifiedData$compone.category, _type = _modifiedData$compone.type, _rest2 = (0, _objectWithoutProperties2[\"default\"])(_modifiedData$compone, [\"category\", \"type\"]);\n                  _componentUid2 = (0, _createUid.createComponentUid)(modifiedData.componentToCreate.name, _category2); // Create the component first and add it to the components data\n\n                  createSchema( // Component data\n                  _rest2, // Type will always be component\n                  // It will dispatch the CREATE_COMPONENT_SCHEMA action\n                  // So the component will be added in the main components object\n                  // This might not be needed if we don't allow navigation between entries while editing\n                  _type, _componentUid2, _category2, // This will add the created component in the datamanager modifiedData components key\n                  // Like explained above we will be able to modify the created component structure\n                  isCreatingComponentFromAView); // Add the created component to the DZ\n                  // We don't want to remove the old ones\n\n                  addCreatedComponentToDynamicZone(state.dynamicZoneTarget, [_componentUid2]); // The Dynamic Zone and the component is created created\n                  // Open the modal to add fields to the created component\n\n                  searchToOpenAddField = _objectSpread(_objectSpread({\n                    modalType: 'chooseAttribute',\n                    forTarget: 'components',\n                    targetUid: _componentUid2\n                  }, headersObject), {}, (_objectSpread3 = {\n                    header_icon_isCustom_1: true,\n                    header_icon_name_1: modifiedData.componentToCreate.icon\n                  }, (0, _defineProperty2[\"default\"])(_objectSpread3, \"header_label_\".concat(nextHeaderIndex), modifiedData.name), (0, _defineProperty2[\"default\"])(_objectSpread3, \"header_icon_name_\".concat(nextHeaderIndex), 'component'), (0, _defineProperty2[\"default\"])(_objectSpread3, \"header_icon_isCustom_\".concat(nextHeaderIndex), false), (0, _defineProperty2[\"default\"])(_objectSpread3, \"header_info_category_\".concat(nextHeaderIndex), _category2), (0, _defineProperty2[\"default\"])(_objectSpread3, \"header_info_name_\".concat(nextHeaderIndex), modifiedData.componentToCreate.name), _objectSpread3));\n                  push({\n                    search: (0, _makeSearch[\"default\"])(searchToOpenAddField, true)\n                  });\n                } else {\n                  // Add the components to the DZ\n                  changeDynamicZoneComponents(state.dynamicZoneTarget, modifiedData.components); // TODO nav\n                  // Search to open modal add fields for the main type (content type)\n\n                  push({\n                    search: ''\n                  });\n                }\n              } else {\n                console.error('This case is not handled');\n              }\n\n              return _context2.abrupt(\"return\");\n\n            case 83:\n              dispatch({\n                type: 'RESET_PROPS'\n              });\n              _context2.next = 90;\n              break;\n\n            case 86:\n              _context2.prev = 86;\n              _context2.t0 = _context2[\"catch\"](2);\n              errors = (0, _strapiHelperPlugin.getYupInnerErrors)(_context2.t0);\n              dispatch({\n                type: 'SET_ERRORS',\n                errors: errors\n              });\n\n            case 90:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[2, 86]]);\n    }));\n\n    return function handleSubmit(_x) {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n\n  var handleToggle = function handleToggle() {\n    push({\n      search: ''\n    });\n  };\n\n  var onClosed = function onClosed() {\n    setState(_staticData.INITIAL_STATE_DATA);\n    dispatch({\n      type: 'RESET_PROPS'\n    });\n  };\n\n  var onOpened = function onOpened() {\n    if (state.modalType === 'chooseAttribute') {\n      attributeOptionRef.current.focus();\n    }\n  };\n\n  var sendAdvancedTabEvent = function sendAdvancedTabEvent(tab) {\n    if (tab !== 'advanced') {\n      return;\n    }\n\n    if (isCreatingContentType) {\n      emitEvent('didSelectContentTypeSettings');\n      return;\n    }\n\n    if (state.forTarget === 'contentType') {\n      emitEvent('didSelectContentTypeFieldSettings');\n    }\n  };\n\n  var sendButtonAddMoreFieldEvent = function sendButtonAddMoreFieldEvent(shouldContinue) {\n    if (state.modalType === 'attribute' && state.forTarget === 'contentType' && state.attributeType !== 'dynamiczone' && shouldContinue) {\n      emitEvent('willAddMoreFieldToContentType');\n    }\n  };\n\n  var shouldDisableAdvancedTab = function shouldDisableAdvancedTab() {\n    return (state.attributeType === 'component' || state.modalType === 'addComponentToDynamicZone') && (0, _lodash.get)(modifiedData, ['createComponent'], null) === false || state.modalType === 'editCategory';\n  }; // Display data for the attributes picker modal\n\n\n  var displayedAttributes = (0, _attributes[\"default\"])(state.forTarget, state.targetUid, // We need the nested components so we know when to remove the component option\n  nestedComponents); // Styles\n\n  var modalBodyStyle = isPickingAttribute ? {\n    paddingTop: '0.5rem',\n    paddingBottom: '3rem'\n  } : {};\n  return /*#__PURE__*/_react[\"default\"].createElement(_react[\"default\"].Fragment, null, /*#__PURE__*/_react[\"default\"].createElement(_strapiHelperPlugin.Modal, {\n    isOpen: isOpen,\n    onOpened: onOpened,\n    onClosed: onClosed,\n    onToggle: handleToggle,\n    withoverflow: (0, _lodash.toString)(state.modalType === 'addComponentToDynamicZone' || state.modalType === 'attribute' && state.attributeType === 'media')\n  }, /*#__PURE__*/_react[\"default\"].createElement(_strapiHelperPlugin.HeaderModal, null, /*#__PURE__*/_react[\"default\"].createElement(_ModalHeader[\"default\"], {\n    headerId: state.headerId,\n    headers: headers\n  }), /*#__PURE__*/_react[\"default\"].createElement(\"section\", null, /*#__PURE__*/_react[\"default\"].createElement(_strapiHelperPlugin.HeaderModalTitle, null, /*#__PURE__*/_react[\"default\"].createElement(_reactIntl.FormattedMessage, {\n    id: (0, _getModalTitleSubHeader[\"default\"])(state),\n    values: {\n      type: (0, _lodash.upperFirst)(formatMessage({\n        id: (0, _getTrad[\"default\"])(\"attribute.\".concat(state.attributeType))\n      })),\n      name: (0, _lodash.upperFirst)(state.attributeName),\n      step: state.step\n    }\n  }, function (msg) {\n    return /*#__PURE__*/_react[\"default\"].createElement(\"span\", null, (0, _lodash.upperFirst)(msg));\n  }), !isPickingAttribute && /*#__PURE__*/_react[\"default\"].createElement(_react[\"default\"].Fragment, null, /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n    className: \"settings-tabs\"\n  }, /*#__PURE__*/_react[\"default\"].createElement(_HeaderModalNavContainer[\"default\"], null, _staticData.NAVLINKS.map(function (link, index) {\n    return /*#__PURE__*/_react[\"default\"].createElement(_HeaderNavLink[\"default\"] // The advanced tab is disabled when adding an existing component\n    // step 1\n    , (0, _extends2[\"default\"])({\n      isDisabled: index === 1 && shouldDisableAdvancedTab(),\n      isActive: state.settingType === link.id,\n      key: link.id\n    }, link, {\n      onClick: function onClick() {\n        setState(function (prev) {\n          return _objectSpread(_objectSpread({}, prev), {}, {\n            settingType: link.id\n          });\n        });\n        sendAdvancedTabEvent(link.id);\n        push({\n          search: (0, _getNextSearch[\"default\"])(link.id, state)\n        });\n      },\n      nextTab: index === _staticData.NAVLINKS.length - 1 ? 0 : index + 1\n    }));\n  }))), /*#__PURE__*/_react[\"default\"].createElement(\"hr\", null))))), /*#__PURE__*/_react[\"default\"].createElement(\"form\", {\n    onSubmit: handleSubmit\n  }, /*#__PURE__*/_react[\"default\"].createElement(_strapiHelperPlugin.ModalForm, null, /*#__PURE__*/_react[\"default\"].createElement(_strapiHelperPlugin.ModalBody, {\n    style: modalBodyStyle\n  }, /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n    className: \"container-fluid\"\n  }, isPickingAttribute ? displayedAttributes.map(function (row, i) {\n    return /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n      key: i,\n      className: \"row\"\n    }, i === 1 && /*#__PURE__*/_react[\"default\"].createElement(\"hr\", {\n      style: {\n        width: 'calc(100% - 30px)',\n        marginBottom: 16,\n        marginTop: 19,\n        borderColor: '#F0F3F8'\n      }\n    }), row.map(function (attr, index) {\n      var tabIndex = i === 0 ? index : displayedAttributes[0].length + index;\n      return /*#__PURE__*/_react[\"default\"].createElement(_AttributeOption[\"default\"], {\n        key: attr,\n        tabIndex: tabIndex,\n        isDisplayed: true,\n        onClick: function onClick() {},\n        ref: i === 0 && index === 0 ? attributeOptionRef : null,\n        type: attr\n      });\n    }));\n  }) : form(modifiedData, state.attributeType, state.step, state.actionType, attributes).items.map(function (row, index) {\n    return /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n      className: \"row\",\n      key: index\n    }, row.map(function (input, i) {\n      // The divider type is used mainly the advanced tab\n      // It is the one responsible for displaying the settings label\n      if (input.type === 'divider' || input.type === 'dividerDraftPublish') {\n        var tradId = input.type === 'divider' ? 'form.attribute.item.settings.name' : 'form.contentType.divider.draft-publish';\n        return /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n          className: \"col-12\",\n          key: \"divider\"\n        }, /*#__PURE__*/_react[\"default\"].createElement(_core.Padded, {\n          bottom: true,\n          size: \"smd\"\n        }, /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n          style: {\n            paddingTop: 3\n          }\n        }), /*#__PURE__*/_react[\"default\"].createElement(_core.Text, {\n          fontSize: \"xs\",\n          color: \"grey\",\n          fontWeight: \"bold\",\n          textTransform: \"uppercase\"\n        }, /*#__PURE__*/_react[\"default\"].createElement(_reactIntl.FormattedMessage, {\n          id: (0, _getTrad[\"default\"])(tradId)\n        }, function (txt) {\n          return txt;\n        }))));\n      } // The spacer type is used mainly to align the icon picker...\n\n\n      if (input.type === 'spacer') {\n        return /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n          key: \"spacer\",\n          style: {\n            height: 8\n          }\n        });\n      } // The spacer type is used mainly to align the icon picker...\n\n\n      if (input.type === 'spacer-small') {\n        return /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n          key: \"\".concat(index, \".\").concat(i),\n          style: {\n            height: 4\n          }\n        });\n      }\n\n      if (input.type === 'spacer-medium') {\n        return /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n          key: \"\".concat(index, \".\").concat(i),\n          style: {\n            height: 8\n          }\n        });\n      } // This type is used in the addComponentToDynamicZone modal when selecting the option add an existing component\n      // It pushes select the components to the right\n\n\n      if (input.type === 'pushRight') {\n        return /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n          key: \"\".concat(index, \".\").concat(i),\n          className: \"col-\".concat(input.size)\n        });\n      }\n\n      if (input.type === 'relation') {\n        return /*#__PURE__*/_react[\"default\"].createElement(_RelationForm[\"default\"], {\n          key: \"relation\",\n          mainBoxHeader: (0, _lodash.get)(headers, [0, 'label'], ''),\n          modifiedData: modifiedData,\n          naturePickerType: state.forTarget,\n          onChange: handleChange,\n          errors: formErrors\n        });\n      } // Retrieve the error for a specific input\n\n\n      var errorId = (0, _lodash.get)(formErrors, [].concat((0, _toConsumableArray2[\"default\"])(input.name.split('.') // The filter here is used when creating a component\n      // in the component step 1 modal\n      // Since the component info is stored in the\n      // componentToCreate object we can access the error\n      // By removing the key\n      .filter(function (key) {\n        return key !== 'componentToCreate';\n      })), ['id']), null);\n      var retrievedValue = (0, _lodash.get)(modifiedData, input.name, '');\n      var value; // Condition for the boolean default value\n      // The radio input doesn't accept false, true or null as value\n      // So we pass them as string\n      // This way the data stays accurate and we don't have to operate\n      // any data mutation\n\n      if (input.name === 'default' && state.attributeType === 'boolean') {\n        value = (0, _lodash.toString)(retrievedValue); // Same here for the enum\n      } else if (input.name === 'enum' && Array.isArray(retrievedValue)) {\n        value = retrievedValue.join('\\n');\n      } else if (input.name === 'uid') {\n        value = input.value;\n      } else if (input.name === 'allowedTypes' && retrievedValue === '') {\n        value = null;\n      } else {\n        value = retrievedValue;\n      } // The addon input is not present in @buffetjs so we are using the old lib\n      // for the moment that's why we don't want them be passed to buffet\n      // like the other created inputs\n\n\n      if (input.type === 'addon') {\n        return /*#__PURE__*/_react[\"default\"].createElement(_strapiHelperPlugin.InputsIndex, (0, _extends2[\"default\"])({\n          key: input.name\n        }, input, {\n          type: \"string\",\n          onChange: handleChange,\n          value: value\n        }));\n      }\n\n      return /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n        className: \"col-\".concat(input.size || 6),\n        key: input.name\n      }, /*#__PURE__*/_react[\"default\"].createElement(_custom.Inputs, (0, _extends2[\"default\"])({}, input, {\n        modifiedData: modifiedData,\n        addComponentsToDynamicZone: handleClickAddComponentsToDynamicZone,\n        changeMediaAllowedTypes: handleChangeMediaAllowedTypes,\n        customInputs: {\n          allowedTypesSelect: _WrapperSelect[\"default\"],\n          componentIconPicker: _ComponentIconPicker[\"default\"],\n          componentSelect: _WrapperSelect[\"default\"],\n          creatableSelect: _WrapperSelect[\"default\"],\n          customCheckboxWithChildren: _CustomCheckbox[\"default\"],\n          booleanBox: _BooleanBox[\"default\"]\n        },\n        isCreating: isCreating // Props for the componentSelect\n        ,\n        isCreatingComponentWhileAddingAField: isCreatingComponentWhileAddingAField // Props for the componentSelect\n        // Since the component is created after adding it to a type\n        // its name and category can't be retrieved from the data manager\n        ,\n        componentCategoryNeededForAddingAfieldWhileCreatingAComponent: (0, _lodash.get)(componentToCreate, 'category', null) // Props for the componentSelect same explanation\n        ,\n        componentNameNeededForAddingAfieldWhileCreatingAComponent: (0, _lodash.get)(componentToCreate, 'name', null),\n        isAddingAComponentToAnotherComponent: state.forTarget === 'components' || state.forTarget === 'component',\n        value: value,\n        error: (0, _lodash.isEmpty)(errorId) ? null : formatMessage({\n          id: errorId\n        }),\n        onChange: handleChange,\n        onBlur: function onBlur() {},\n        description: (0, _lodash.get)(input, 'description.id', null) ? formatMessage(input.description) : input.description,\n        placeholder: (0, _lodash.get)(input, 'placeholder.id', null) ? formatMessage(input.placeholder) : input.placeholder,\n        label: (0, _lodash.get)(input, 'label.id', null) ? formatMessage(input.label) : input.label\n      })));\n    }));\n  })))), !isPickingAttribute && /*#__PURE__*/_react[\"default\"].createElement(_strapiHelperPlugin.ModalFooter, null, /*#__PURE__*/_react[\"default\"].createElement(\"section\", {\n    style: {\n      alignItems: 'center'\n    }\n  }, /*#__PURE__*/_react[\"default\"].createElement(_core.Button, {\n    type: \"button\",\n    color: \"cancel\",\n    onClick: handleToggle\n  }, formatMessage({\n    id: 'app.components.Button.cancel'\n  })), /*#__PURE__*/_react[\"default\"].createElement(\"div\", null, isCreatingAttribute && !isInFirstComponentStep && /*#__PURE__*/_react[\"default\"].createElement(_core.Button, {\n    type: isCreating ? 'button' : 'submit',\n    color: \"success\",\n    onClick: function onClick(e) {\n      handleSubmit(e, false);\n    },\n    style: {\n      marginRight: '10px'\n    }\n  }, formatMessage({\n    id: 'form.button.finish'\n  })), (isCreatingContentType || isCreatingComponent) && !isCreating && /*#__PURE__*/_react[\"default\"].createElement(_core.Button, {\n    type: \"button\",\n    color: \"delete\",\n    onClick: function onClick(e) {\n      e.preventDefault();\n      deleteData();\n    },\n    style: {\n      marginRight: '10px'\n    }\n  }, formatMessage({\n    id: (0, _getTrad[\"default\"])('form.button.delete')\n  })), isEditingCategory && /*#__PURE__*/_react[\"default\"].createElement(_core.Button, {\n    type: \"button\",\n    color: \"delete\",\n    onClick: function onClick(e) {\n      e.preventDefault();\n      deleteCategory(initialData.name);\n    },\n    style: {\n      marginRight: '10px'\n    }\n  }, formatMessage({\n    id: (0, _getTrad[\"default\"])('form.button.delete')\n  })), isCreating && state.attributeType === 'dynamiczone' && /*#__PURE__*/_react[\"default\"].createElement(_CustomButton[\"default\"], {\n    type: isCreating ? 'submit' : 'button',\n    color: (isCreatingContentType || isCreatingComponent || isEditingCategory || state.modalType === 'addComponentToDynamicZone' && state.step === '1' && !isCreatingComponentFromAView) && !isCreating ? 'success' : 'primary',\n    onClick: function onClick(e) {\n      return handleSubmit(e, true);\n    },\n    icon: isCreatingAttribute && !isCreatingComponentFromAView && state.step !== '1' || state.modalType === 'addComponentToDynamicZone' && isCreatingComponentFromAView || isCreatingComponentFromAView && state.step === '2'\n  }, getButtonSubmitMessage()), state.attributeType !== 'dynamiczone' && /*#__PURE__*/_react[\"default\"].createElement(_CustomButton[\"default\"], {\n    type: isCreating ? 'submit' : 'button',\n    color: (isCreatingContentType || isCreatingComponent || isEditingCategory || state.modalType === 'addComponentToDynamicZone' && state.step === '1' && !isCreatingComponentFromAView) && !isCreating ? 'success' : 'primary',\n    onClick: function onClick(e) {\n      return handleSubmit(e, true);\n    },\n    icon: isCreatingAttribute && !isCreatingComponentFromAView && state.step !== '1' || state.modalType === 'addComponentToDynamicZone' && isCreatingComponentFromAView || isCreatingComponentFromAView && state.step === '2'\n  }, getButtonSubmitMessage())))))), /*#__PURE__*/_react[\"default\"].createElement(_strapiHelperPlugin.PopUpWarning, {\n    isOpen: showConfirmModal,\n    onConfirm: handleConfirmDisableDraftAndPublish,\n    toggleModal: toggleConfirmModal,\n    popUpWarningType: \"danger\",\n    content: {\n      message: (0, _getTrad[\"default\"])('popUpWarning.draft-publish.message'),\n      secondMessage: (0, _getTrad[\"default\"])('popUpWarning.draft-publish.second-message'),\n      confirm: (0, _getTrad[\"default\"])('popUpWarning.draft-publish.button.confirm')\n    }\n  }));\n};\n\nvar _default = FormModal;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["D:/webstorm_projects/redcat_backend/.cache/plugins/strapi-plugin-content-type-builder/admin/src/containers/FormModal/index.js"],"names":["FormModal","INITIAL_STATE_DATA","state","setState","showConfirmModal","setShowConfirmModal","reducer","initialState","init","reducerState","dispatch","push","search","emitEvent","formatMessage","query","attributeOptionRef","addAttribute","addCreatedComponentToDynamicZone","allComponentsCategories","changeDynamicZoneComponents","contentTypes","components","createSchema","deleteCategory","deleteData","editCategory","submitData","allDataSchema","modifiedData","nestedComponents","setModifiedData","sortedContentTypesList","updateSchema","reservedNames","toJS","componentToCreate","formErrors","initialData","isCreatingComponentWhileAddingAField","actionType","get","attributeName","attributeType","dynamicZoneTarget","forTarget","modalType","kind","targetUid","settingType","headerId","header_label_1","header_icon_name_1","header_icon_isCustom_1","header_info_category_1","header_info_name_1","header_label_2","header_icon_name_2","header_icon_isCustom_2","header_info_category_2","header_info_name_2","header_label_3","header_icon_name_3","header_icon_isCustom_3","header_info_category_3","header_info_name_3","header_label_4","header_icon_name_4","header_icon_isCustom_4","header_info_category_4","header_info_name_4","header_label_5","header_icon_name_5","header_icon_isCustom_5","header_info_category_5","header_info_name_5","step","pathToSchema","collectionTypesForRelation","filter","shouldCloseModalToPreventErrorWhenCreatingADZ","shouldCloseModalChooseAttribute","type","data","name","draftAndPublish","collectionName","schema","category","icon","attributeToEditNotFormatted","attributeToEdit","createComponent","repeatable","nameToSetForRelation","isEditing","modifiedDataToSetForEditing","form","forms","items","headers","isCreatingContentType","isCreatingComponent","isCreatingAttribute","isComponentAttribute","isCreating","isCreatingComponentFromAView","isInFirstComponentStep","isEditingCategory","isOpen","isPickingAttribute","uid","attributes","checkFormValidity","dataToValidate","contentType","Object","keys","component","alreadyTakenTargetContentTypeAttributes","targetContentTypeUID","targetContentTypeAttributes","attrName","targetAttribute","validate","abortEarly","getButtonSubmitMessage","isCreatingAComponent","tradId","id","makeNextSearch","searchObj","shouldContinue","reduce","acc","current","index","handleClickAddComponentsToDynamicZone","target","shouldAddComponents","handleChangeMediaAllowedTypes","value","toggleConfirmModal","prev","handleChange","rest","namesThatCanResetToNullValue","val","includes","split","clonedErrors","assign","min","minLength","errors","handleConfirmDisableDraftAndPublish","handleSubmit","e","preventDefault","sendButtonAddMoreFieldEvent","currentKind","headerIcon","pop","headersObject","nextHeaderIndex","length","strapi","notification","toggle","message","pathname","pluginId","componentUid","isDynamicZoneAttribute","dzSearch","nextSearch","nextSearchObj","searchToOpenModalAttributeToAddAttributesToAComponent","searchToOpenAddField","console","error","handleToggle","onClosed","onOpened","focus","sendAdvancedTabEvent","tab","shouldDisableAdvancedTab","displayedAttributes","modalBodyStyle","paddingTop","paddingBottom","msg","NAVLINKS","map","link","row","i","width","marginBottom","marginTop","borderColor","attr","tabIndex","input","txt","height","size","errorId","key","retrievedValue","Array","isArray","join","allowedTypesSelect","WrapperSelect","componentIconPicker","ComponentIconPicker","componentSelect","creatableSelect","customCheckboxWithChildren","CustomCheckbox","booleanBox","BooleanBox","description","placeholder","label","alignItems","marginRight","secondMessage","confirm"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AAaA;;AACA;;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;AAEA;;AACA;AAEA,IAAMA,SAAS,GAAG,SAAZA,SAAY,GAAM;AAAA,kBACI,qBAASC,8BAAT,CADJ;AAAA;AAAA,MACfC,KADe;AAAA,MACRC,QADQ;;AAAA,mBAE0B,qBAAS,KAAT,CAF1B;AAAA;AAAA,MAEfC,gBAFe;AAAA,MAEGC,mBAFH;;AAAA,oBAGW,uBAAWC,mBAAX,EAAoBC,qBAApB,EAAkCC,gBAAlC,CAHX;AAAA;AAAA,MAGfC,YAHe;AAAA,MAGDC,QAHC;;AAAA,oBAIL,iCAJK;AAAA,MAIdC,IAJc,eAIdA,IAJc;;AAAA,qBAKH,kCALG;AAAA,MAKdC,MALc,gBAKdA,MALc;;AAAA,0BAMe,2CANf;AAAA,MAMdC,SANc,qBAMdA,SANc;AAAA,MAMHC,aANG,qBAMHA,aANG;;AAOtB,MAAMC,KAAK,GAAG,mCAAd;AACA,MAAMC,kBAAkB,GAAG,oBAA3B;;AARsB,wBA4BlB,kCA5BkB;AAAA,MAWpBC,YAXoB,mBAWpBA,YAXoB;AAAA,MAYpBC,gCAZoB,mBAYpBA,gCAZoB;AAAA,MAapBC,uBAboB,mBAapBA,uBAboB;AAAA,MAcpBC,2BAdoB,mBAcpBA,2BAdoB;AAAA,MAepBC,YAfoB,mBAepBA,YAfoB;AAAA,MAgBpBC,UAhBoB,mBAgBpBA,UAhBoB;AAAA,MAiBpBC,YAjBoB,mBAiBpBA,YAjBoB;AAAA,MAkBpBC,cAlBoB,mBAkBpBA,cAlBoB;AAAA,MAmBpBC,UAnBoB,mBAmBpBA,UAnBoB;AAAA,MAoBpBC,YApBoB,mBAoBpBA,YApBoB;AAAA,MAqBpBC,UArBoB,mBAqBpBA,UArBoB;AAAA,MAsBNC,aAtBM,mBAsBpBC,YAtBoB;AAAA,MAuBpBC,gBAvBoB,mBAuBpBA,gBAvBoB;AAAA,MAwBpBC,eAxBoB,mBAwBpBA,eAxBoB;AAAA,MAyBpBC,sBAzBoB,mBAyBpBA,sBAzBoB;AAAA,MA0BpBC,YA1BoB,mBA0BpBA,YA1BoB;AAAA,MA2BpBC,aA3BoB,mBA2BpBA,aA3BoB;;AAAA,2BAmClBzB,YAAY,CAAC0B,IAAb,EAnCkB;AAAA,MA8BpBC,iBA9BoB,sBA8BpBA,iBA9BoB;AAAA,MA+BpBC,UA/BoB,sBA+BpBA,UA/BoB;AAAA,MAgCpBC,WAhCoB,sBAgCpBA,WAhCoB;AAAA,MAiCpBC,oCAjCoB,sBAiCpBA,oCAjCoB;AAAA,MAkCpBV,YAlCoB,sBAkCpBA,YAlCoB;;AAqCtB,wBAAU,YAAM;AACd,QAAI,CAAC,qBAAQjB,MAAR,CAAL,EAAsB;AACpB,UAAM4B,UAAU,GAAGzB,KAAK,CAAC0B,GAAN,CAAU,YAAV,CAAnB,CADoB,CAEpB;;AACA,UAAMC,aAAa,GAAG3B,KAAK,CAAC0B,GAAN,CAAU,eAAV,CAAtB;AACA,UAAME,aAAa,GAAG5B,KAAK,CAAC0B,GAAN,CAAU,eAAV,CAAtB;AACA,UAAMG,iBAAiB,GAAG7B,KAAK,CAAC0B,GAAN,CAAU,mBAAV,CAA1B;AACA,UAAMI,SAAS,GAAG9B,KAAK,CAAC0B,GAAN,CAAU,WAAV,CAAlB;AACA,UAAMK,SAAS,GAAG/B,KAAK,CAAC0B,GAAN,CAAU,WAAV,CAAlB;AACA,UAAMM,IAAI,GAAGhC,KAAK,CAAC0B,GAAN,CAAU,MAAV,KAAqB,iBAAIb,aAAJ,EAAmB,CAAC,aAAD,EAAgB,QAAhB,EAA0B,MAA1B,CAAnB,EAAsD,IAAtD,CAAlC;AACA,UAAMoB,SAAS,GAAGjC,KAAK,CAAC0B,GAAN,CAAU,WAAV,CAAlB;AACA,UAAMQ,WAAW,GAAGlC,KAAK,CAAC0B,GAAN,CAAU,aAAV,CAApB;AACA,UAAMS,QAAQ,GAAGnC,KAAK,CAAC0B,GAAN,CAAU,UAAV,CAAjB;AACA,UAAMU,cAAc,GAAGpC,KAAK,CAAC0B,GAAN,CAAU,gBAAV,CAAvB;AACA,UAAMW,kBAAkB,GAAGrC,KAAK,CAAC0B,GAAN,CAAU,oBAAV,CAA3B;AACA,UAAMY,sBAAsB,GAAGtC,KAAK,CAAC0B,GAAN,CAAU,wBAAV,CAA/B;AACA,UAAMa,sBAAsB,GAAGvC,KAAK,CAAC0B,GAAN,CAAU,wBAAV,CAA/B;AACA,UAAMc,kBAAkB,GAAGxC,KAAK,CAAC0B,GAAN,CAAU,oBAAV,CAA3B;AACA,UAAMe,cAAc,GAAGzC,KAAK,CAAC0B,GAAN,CAAU,gBAAV,CAAvB;AACA,UAAMgB,kBAAkB,GAAG1C,KAAK,CAAC0B,GAAN,CAAU,oBAAV,CAA3B;AACA,UAAMiB,sBAAsB,GAAG3C,KAAK,CAAC0B,GAAN,CAAU,wBAAV,CAA/B;AACA,UAAMkB,sBAAsB,GAAG5C,KAAK,CAAC0B,GAAN,CAAU,wBAAV,CAA/B;AACA,UAAMmB,kBAAkB,GAAG7C,KAAK,CAAC0B,GAAN,CAAU,oBAAV,CAA3B;AACA,UAAMoB,cAAc,GAAG9C,KAAK,CAAC0B,GAAN,CAAU,gBAAV,CAAvB;AACA,UAAMqB,kBAAkB,GAAG/C,KAAK,CAAC0B,GAAN,CAAU,oBAAV,CAA3B;AACA,UAAMsB,sBAAsB,GAAGhD,KAAK,CAAC0B,GAAN,CAAU,wBAAV,CAA/B;AACA,UAAMuB,sBAAsB,GAAGjD,KAAK,CAAC0B,GAAN,CAAU,wBAAV,CAA/B;AACA,UAAMwB,kBAAkB,GAAGlD,KAAK,CAAC0B,GAAN,CAAU,oBAAV,CAA3B;AACA,UAAMyB,cAAc,GAAGnD,KAAK,CAAC0B,GAAN,CAAU,gBAAV,CAAvB;AACA,UAAM0B,kBAAkB,GAAGpD,KAAK,CAAC0B,GAAN,CAAU,oBAAV,CAA3B;AACA,UAAM2B,sBAAsB,GAAGrD,KAAK,CAAC0B,GAAN,CAAU,wBAAV,CAA/B;AACA,UAAM4B,sBAAsB,GAAGtD,KAAK,CAAC0B,GAAN,CAAU,wBAAV,CAA/B;AACA,UAAM6B,kBAAkB,GAAGvD,KAAK,CAAC0B,GAAN,CAAU,oBAAV,CAA3B;AACA,UAAM8B,cAAc,GAAGxD,KAAK,CAAC0B,GAAN,CAAU,gBAAV,CAAvB;AACA,UAAM+B,kBAAkB,GAAGzD,KAAK,CAAC0B,GAAN,CAAU,oBAAV,CAA3B;AACA,UAAMgC,sBAAsB,GAAG1D,KAAK,CAAC0B,GAAN,CAAU,wBAAV,CAA/B;AACA,UAAMiC,sBAAsB,GAAG3D,KAAK,CAAC0B,GAAN,CAAU,wBAAV,CAA/B;AACA,UAAMkC,kBAAkB,GAAG5D,KAAK,CAAC0B,GAAN,CAAU,oBAAV,CAA3B;AACA,UAAMmC,IAAI,GAAG7D,KAAK,CAAC0B,GAAN,CAAU,MAAV,CAAb;AACA,UAAMoC,YAAY,GAChBhC,SAAS,KAAK,aAAd,IAA+BA,SAAS,KAAK,WAA7C,GACI,CAACA,SAAD,CADJ,GAEI,CAACA,SAAD,EAAYG,SAAZ,CAHN;AAKA7C,MAAAA,QAAQ,CAAC;AACPqC,QAAAA,UAAU,EAAVA,UADO;AAEPE,QAAAA,aAAa,EAAbA,aAFO;AAGPC,QAAAA,aAAa,EAAbA,aAHO;AAIPI,QAAAA,IAAI,EAAJA,IAJO;AAKPH,QAAAA,iBAAiB,EAAjBA,iBALO;AAMPC,QAAAA,SAAS,EAATA,SANO;AAOPC,QAAAA,SAAS,EAATA,SAPO;AAQP+B,QAAAA,YAAY,EAAZA,YARO;AASP5B,QAAAA,WAAW,EAAXA,WATO;AAUP2B,QAAAA,IAAI,EAAJA,IAVO;AAWP5B,QAAAA,SAAS,EAATA,SAXO;AAYPG,QAAAA,cAAc,EAAdA,cAZO;AAaPC,QAAAA,kBAAkB,EAAlBA,kBAbO;AAcPC,QAAAA,sBAAsB,EAAtBA,sBAdO;AAePE,QAAAA,kBAAkB,EAAlBA,kBAfO;AAgBPD,QAAAA,sBAAsB,EAAtBA,sBAhBO;AAiBPE,QAAAA,cAAc,EAAdA,cAjBO;AAkBPC,QAAAA,kBAAkB,EAAlBA,kBAlBO;AAmBPC,QAAAA,sBAAsB,EAAtBA,sBAnBO;AAoBPE,QAAAA,kBAAkB,EAAlBA,kBApBO;AAqBPD,QAAAA,sBAAsB,EAAtBA,sBArBO;AAsBPE,QAAAA,cAAc,EAAdA,cAtBO;AAuBPC,QAAAA,kBAAkB,EAAlBA,kBAvBO;AAwBPC,QAAAA,sBAAsB,EAAtBA,sBAxBO;AAyBPE,QAAAA,kBAAkB,EAAlBA,kBAzBO;AA0BPD,QAAAA,sBAAsB,EAAtBA,sBA1BO;AA2BPE,QAAAA,cAAc,EAAdA,cA3BO;AA4BPC,QAAAA,kBAAkB,EAAlBA,kBA5BO;AA6BPC,QAAAA,sBAAsB,EAAtBA,sBA7BO;AA8BPE,QAAAA,kBAAkB,EAAlBA,kBA9BO;AA+BPD,QAAAA,sBAAsB,EAAtBA,sBA/BO;AAgCPE,QAAAA,cAAc,EAAdA,cAhCO;AAiCPC,QAAAA,kBAAkB,EAAlBA,kBAjCO;AAkCPC,QAAAA,sBAAsB,EAAtBA,sBAlCO;AAmCPE,QAAAA,kBAAkB,EAAlBA,kBAnCO;AAoCPD,QAAAA,sBAAsB,EAAtBA,sBApCO;AAqCPxB,QAAAA,QAAQ,EAARA;AArCO,OAAD,CAAR;AAwCA,UAAM4B,0BAA0B,GAAG9C,sBAAsB,CAAC+C,MAAvB,CACjC;AAAA,YAAGhC,IAAH,QAAGA,IAAH;AAAA,eAAcA,IAAI,KAAK,gBAAvB;AAAA,OADiC,CAAnC,CAnFoB,CAuFpB;;AACA,UAAID,SAAS,KAAK,cAAlB,EAAkC;AAChCf,QAAAA,eAAe;AAChB;;AAED,UAAIS,UAAU,KAAK,MAAf,IAAyBM,SAAS,KAAK,WAAvC,IAAsDD,SAAS,KAAK,aAAxE,EAAuF;AACrFhC,QAAAA,SAAS,CAAC,4BAAD,CAAT;AACD,OA9FmB,CAgGpB;AACA;AACA;AACA;AACA;;;AACA,UAAMmE,6CAA6C,GACjD,iBAAIpD,aAAJ,YAAuBiD,YAAvB,GAAqC,QAArC,EAA+C,YAA/C,EAA6DjC,iBAA7D,IAAiF,IAAjF,MACE,IADF,IACUE,SAAS,KAAK,2BAF1B,CArGoB,CAyGpB;AACA;AACA;;AACA,UAAMmC,+BAA+B,GACnC,iBAAIrD,aAAJ,EAAmB,CAAC,YAAD,EAAeoB,SAAf,CAAnB,EAA8C,IAA9C,MAAwD,IAAxD,IACA;AACAH,MAAAA,SAAS,KAAK,YAHhB;;AAKA,UAAImC,6CAA6C,IAAIC,+BAArD,EAAsF;AACpFtE,QAAAA,IAAI,CAAC;AAAEC,UAAAA,MAAM,EAAE;AAAV,SAAD,CAAJ;AACD,OAnHmB,CAqHpB;;;AACA,UAAIkC,SAAS,KAAK,cAAd,IAAgCN,UAAU,KAAK,MAAnD,EAA2D;AACzD9B,QAAAA,QAAQ,CAAC;AACPwE,UAAAA,IAAI,EAAE,kBADC;AAEPC,UAAAA,IAAI,EAAE;AACJC,YAAAA,IAAI,EAAErE,KAAK,CAAC0B,GAAN,CAAU,cAAV;AADF;AAFC,SAAD,CAAR;AAMD,OA7HmB,CA+HpB;;;AACA,UACEK,SAAS,KAAK,aAAd,IACA5C,KAAK,CAAC4C,SAAN,KAAoB,aADpB,IACqC;AACrCN,MAAAA,UAAU,KAAK,QAHjB,EAIE;AACA9B,QAAAA,QAAQ,CAAC;AACPwE,UAAAA,IAAI,EAAE,kBADC;AAEPC,UAAAA,IAAI,EAAE;AACJE,YAAAA,eAAe,EAAE;AADb;AAFC,SAAD,CAAR;AAMD,OA3ImB,CA6IpB;;;AACA,UACEvC,SAAS,KAAK,aAAd,IACA5C,KAAK,CAAC4C,SAAN,KAAoB,aADpB,IAEAN,UAAU,KAAK,MAHjB,EAIE;AAAA,mBACwD,iBACtDZ,aADsD,YAElDiD,YAFkD,GAEpC,QAFoC,IAGtD;AACEO,UAAAA,IAAI,EAAE,IADR;AAEEE,UAAAA,cAAc,EAAE;AAFlB,SAHsD,CADxD;AAAA,YACQF,IADR,QACQA,IADR;AAAA,YACcE,cADd,QACcA,cADd;AAAA,YAC8BD,eAD9B,QAC8BA,eAD9B;AAAA,YAC+CtC,KAD/C,QAC+CA,IAD/C;;AAUArC,QAAAA,QAAQ,CAAC;AACPwE,UAAAA,IAAI,EAAE,kBADC;AAEPC,UAAAA,IAAI,EAAE;AACJC,YAAAA,IAAI,EAAJA,IADI;AAEJE,YAAAA,cAAc,EAAdA,cAFI;AAGJD,YAAAA,eAAe,EAAfA,eAHI;AAIJtC,YAAAA,IAAI,EAAJA;AAJI;AAFC,SAAD,CAAR;AASD,OArKmB,CAuKpB;;;AACA,UAAID,SAAS,KAAK,WAAd,IAA6B5C,KAAK,CAAC4C,SAAN,KAAoB,WAAjD,IAAgEN,UAAU,KAAK,MAAnF,EAA2F;AACzF,YAAM2C,IAAI,GAAG,iBAAIvD,aAAJ,EAAmBiD,YAAnB,EAAiC,EAAjC,CAAb;AAEAnE,QAAAA,QAAQ,CAAC;AACPwE,UAAAA,IAAI,EAAE,kBADC;AAEPC,UAAAA,IAAI,EAAE;AACJC,YAAAA,IAAI,EAAED,IAAI,CAACI,MAAL,CAAYH,IADd;AAEJI,YAAAA,QAAQ,EAAEL,IAAI,CAACK,QAFX;AAGJC,YAAAA,IAAI,EAAEN,IAAI,CAACI,MAAL,CAAYE,IAHd;AAIJH,YAAAA,cAAc,EAAEH,IAAI,CAACI,MAAL,CAAYD;AAJxB;AAFC,SAAD,CAAR;AASD,OApLmB,CAsLpB;;;AACA,UACExC,SAAS,KAAK,2BAAd,IACA5C,KAAK,CAAC4C,SAAN,KAAoB,2BADpB,IAEAN,UAAU,KAAK,MAHjB,EAIE;AACA,YAAMkD,2BAA2B,GAAG,iBAClC9D,aADkC,YAE9BiD,YAF8B,GAEhB,QAFgB,EAEN,YAFM,EAEQjC,iBAFR,IAGlC,EAHkC,CAApC;;AAKA,YAAM+C,eAAe,mCAChBD,2BADgB;AAEnB;AACA;AACApE,UAAAA,UAAU,EAAE,EAJO;AAKnB8D,UAAAA,IAAI,EAAExC,iBALa;AAMnBgD,UAAAA,eAAe,EAAE,KANE;AAOnBxD,UAAAA,iBAAiB,EAAE;AAAE8C,YAAAA,IAAI,EAAE;AAAR;AAPA,UAArB;;AAUAxE,QAAAA,QAAQ,CAAC;AACPwE,UAAAA,IAAI,EAAE,8BADC;AAEPS,UAAAA,eAAe,EAAfA;AAFO,SAAD,CAAR;AAID,OA/MmB,CAiNpB;;;AACA,UACEhD,aAAa,IACbA,aAAa,KAAK,MADlB,IAEA;AACAzC,MAAAA,KAAK,CAAC4C,SAAN,KAAoB,WAJtB,EAKE;AACA,YAAM4C,4BAA2B,GAAG,iBAClC9D,aADkC,YAE9BiD,YAF8B,GAEhB,QAFgB,EAEN,YAFM,EAEQnC,aAFR,IAGlC,EAHkC,CAApC;;AAKA,YAAMiD,gBAAe,mCAChBD,4BADgB;AAEnBN,UAAAA,IAAI,EAAE1C;AAFa,UAArB,CANA,CAWA;AACA;;;AACA,YAAIC,aAAa,KAAK,WAAlB,IAAiCH,UAAU,KAAK,MAApD,EAA4D;AAC1D,cAAI,CAACmD,gBAAe,CAACE,UAArB,EAAiC;AAC/B,6BAAIF,gBAAJ,EAAqB,YAArB,EAAmC,KAAnC;AACD;AACF;;AAED,YAAIhD,aAAa,KAAK,UAAlB,IAAgC,CAAC,iBAAIgD,gBAAJ,EAAqB,CAAC,iBAAD,CAArB,CAArC,EAAgF;AAC9E,2BAAIA,gBAAJ,EAAqB,CAAC,iBAAD,CAArB,EAA0C,GAA1C;AACD;;AAEDjF,QAAAA,QAAQ,CAAC;AACPwE,UAAAA,IAAI,EAAE,2BADC;AAEPvC,UAAAA,aAAa,EAAbA,aAFO;AAGPmD,UAAAA,oBAAoB,EAAE,iBAAIhB,0BAAJ,EAAgC,CAAC,GAAD,EAAM,OAAN,CAAhC,EAAgD,OAAhD,CAHf;AAIP9B,UAAAA,SAAS,EAAE,iBAAI8B,0BAAJ,EAAgC,CAAC,GAAD,EAAM,KAAN,CAAhC,EAA8C,OAA9C,CAJJ;AAKPiB,UAAAA,SAAS,EAAEvD,UAAU,KAAK,MALnB;AAMPwD,UAAAA,2BAA2B,EAAEL,gBANtB;AAOPf,UAAAA,IAAI,EAAJA;AAPO,SAAD,CAAR;AASD;AACF,KAzPa,CA0Pd;;AACD,GA3PD,EA2PG,CAAChE,MAAD,CA3PH;AA6PA,MAAMqF,IAAI,GAAG,iBAAIC,iBAAJ,EAAW,CAAChG,KAAK,CAAC4C,SAAP,EAAkB,MAAlB,EAA0B5C,KAAK,CAAC+C,WAAhC,CAAX,EAAyD;AAAA,WAAO;AAC3EkD,MAAAA,KAAK,EAAE;AADoE,KAAP;AAAA,GAAzD,CAAb;AAGA,MAAMC,OAAO,GAAG,oCAAmBlG,KAAnB,CAAhB;AAEA,MAAMmG,qBAAqB,GAAGnG,KAAK,CAAC4C,SAAN,KAAoB,aAAlD;AACA,MAAMwD,mBAAmB,GAAGpG,KAAK,CAAC4C,SAAN,KAAoB,WAAhD;AACA,MAAMyD,mBAAmB,GAAGrG,KAAK,CAAC4C,SAAN,KAAoB,WAAhD;AACA,MAAM0D,oBAAoB,GAAGtG,KAAK,CAACyC,aAAN,KAAwB,WAAxB,IAAuC4D,mBAApE;AAEA,MAAME,UAAU,GAAGvG,KAAK,CAACsC,UAAN,KAAqB,QAAxC;AACA,MAAMkE,4BAA4B,GAChC,iBAAI7E,YAAJ,EAAkB,iBAAlB,EAAqC,KAArC,KAA+CU,oCADjD;AAEA,MAAMoE,sBAAsB,GAAGzG,KAAK,CAAC0E,IAAN,KAAe,GAA9C;AACA,MAAMgC,iBAAiB,GAAG1G,KAAK,CAAC4C,SAAN,KAAoB,cAA9C;AACA,MAAM+D,MAAM,GAAG,CAAC,qBAAQjG,MAAR,CAAhB;AACA,MAAMkG,kBAAkB,GAAG5G,KAAK,CAAC4C,SAAN,KAAoB,iBAA/C;AACA,MAAMiE,GAAG,GAAG,0BAAUlF,YAAY,CAACuD,IAAb,IAAqB,EAA/B,CAAZ;AACA,MAAM4B,UAAU,GAAG,iBAAIpF,aAAJ,gDAAuB1B,KAAK,CAAC2E,YAA7B,IAA2C,QAA3C,EAAqD,YAArD,IAAoE,IAApE,CAAnB;;AAEA,MAAMoC,iBAAiB;AAAA,8FAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAElBC,cAAAA,cAFkB,GAGtBR,4BAA4B,IAAIxG,KAAK,CAAC0E,IAAN,KAAe,GAA/C,GACI,iBAAI/C,YAAJ,EAAkB,mBAAlB,EAAuC,EAAvC,CADJ,GAEIA,YALkB,EAOxB;;AAPwB,mBAQpBwE,qBARoB;AAAA;AAAA;AAAA;;AAStBd,cAAAA,MAAM,GAAGW,kBAAMiB,WAAN,CAAkB5B,MAAlB,CACP6B,MAAM,CAACC,IAAP,CAAYhG,YAAZ,CADO,EAEPnB,KAAK,CAACsC,UAAN,KAAqB,MAFd,EAGP;AACA,+BAAIZ,aAAJ,gDAAuB1B,KAAK,CAAC2E,YAA7B,IAA2C,KAA3C,IAAmD,IAAnD,CAJO,EAKP3C,aALO,CAAT,CATsB,CAiBtB;AACA;;AAlBsB;AAAA;;AAAA;AAAA,mBAmBboE,mBAnBa;AAAA;AAAA;AAAA;;AAoBtBf,cAAAA,MAAM,GAAGW,kBAAMoB,SAAN,CAAgB/B,MAAhB,CACP6B,MAAM,CAACC,IAAP,CAAY/F,UAAZ,CADO,EAEPO,YAAY,CAAC2D,QAAb,IAAyB,EAFlB,EAGPtD,aAHO,EAIPhC,KAAK,CAACsC,UAAN,KAAqB,MAJd,EAKP,iBAAIZ,aAAJ,gDAAuB1B,KAAK,CAAC2E,YAA7B,IAA2C,KAA3C,IAAmD,IAAnD,CALO,CAAT,CApBsB,CA4BtB;AACA;AACA;AACA;;AA/BsB;AAAA;;AAAA;AAAA,oBAgCb2B,oBAAoB,IAAIE,4BAAxB,IAAwDC,sBAhC3C;AAAA;AAAA;AAAA;;AAiCtBpB,cAAAA,MAAM,GAAGW,kBAAMoB,SAAN,CAAgB/B,MAAhB,CACP6B,MAAM,CAACC,IAAP,CAAY/F,UAAZ,CADO,EAEP,iBAAIO,YAAJ,EAAkB,4BAAlB,EAAgD,EAAhD,CAFO,EAGPK,aAHO,CAAT,CAjCsB,CAuCtB;AACA;;AAxCsB;AAAA;;AAAA;AAAA,oBAyCbqE,mBAAmB,IAAI,CAACI,sBAzCX;AAAA;AAAA;AAAA;;AA0ChBzB,cAAAA,IA1CgB,GA0CThF,KAAK,CAACyC,aAAN,KAAwB,UAAxB,GAAqC,UAArC,GAAkDd,YAAY,CAACqD,IA1CtD;AA4ClBqC,cAAAA,uCA5CkB,GA4CwB,EA5CxB;;AA8CtB,kBAAIrC,IAAI,KAAK,UAAb,EAAyB;AACjBsC,gBAAAA,oBADiB,GACM,iBAAI3F,YAAJ,EAAkB,CAAC,QAAD,CAAlB,EAA8B,IAA9B,CADN;AAEjB4F,gBAAAA,2BAFiB,GAEa,iBAClCpG,YADkC,EAElC,CAACmG,oBAAD,EAAuB,QAAvB,EAAiC,YAAjC,CAFkC,EAGlC,EAHkC,CAFb,EAQvB;AACA;AACA;;AACAD,gBAAAA,uCAAuC,GAAGH,MAAM,CAACC,IAAP,CAAYI,2BAAZ,EAAyC1C,MAAzC,CACxC,UAAA2C,QAAQ,EAAI;AACV;AACA,sBAAIxH,KAAK,CAACsC,UAAN,KAAqB,MAAzB,EAAiC;AAC/B,2BAAO,IAAP;AACD,mBAJS,CAMV;;;AACA,yBAAOkF,QAAQ,KAAKpF,WAAW,CAACqF,eAAhC;AACD,iBATuC,CAA1C;AAWD;;AACDpC,cAAAA,MAAM,GAAGW,kBAAMhG,KAAK,CAAC4C,SAAZ,EAAuByC,MAAvB,CACP,iBAAI3D,aAAJ,EAAmB1B,KAAK,CAAC2E,YAAzB,EAAuC,EAAvC,CADO,EAEPK,IAFO,EAGPrD,YAHO,EAIP3B,KAAK,CAACsC,UAAN,KAAqB,MAJd,EAKPtC,KAAK,CAACwC,aALC,EAMPJ,WANO,EAOPiF,uCAPO,EAQPrF,aARO,CAAT;AArEsB;AAAA;;AAAA;AAAA,mBA+Eb0E,iBA/Ea;AAAA;AAAA;AAAA;;AAgFtBrB,cAAAA,MAAM,GAAGW,kBAAMxE,YAAN,CAAmB6D,MAAnB,CAA0BpE,uBAA1B,EAAmDmB,WAAnD,CAAT;AAhFsB;AAAA;;AAAA;AAAA,oBAsFlBqE,sBAAsB,IAAID,4BAtFR;AAAA;AAAA;AAAA;;AAuFpBnB,cAAAA,MAAM,GAAGW,kBAAMoB,SAAN,CAAgB/B,MAAhB,CACP6B,MAAM,CAACC,IAAP,CAAY/F,UAAZ,CADO,EAEP,iBAAIO,YAAJ,EAAkB,4BAAlB,EAAgD,EAAhD,CAFO,EAGPK,aAHO,CAAT;AAvFoB;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,qBAmGlBqD,MAAM,CAACqC,QAAP,CAAgBV,cAAhB,EAAgC;AAAEW,gBAAAA,UAAU,EAAE;AAAd,eAAhC,CAnGkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAjBZ,iBAAiB;AAAA;AAAA;AAAA,KAAvB,CAtTsB,CA4ZtB;;;AACA,MAAMa,sBAAsB,GAAG,SAAzBA,sBAAyB,GAAM;AAAA,QAC3BnF,aAD2B,GACEzC,KADF,CAC3ByC,aAD2B;AAAA,QACZG,SADY,GACE5C,KADF,CACZ4C,SADY;AAEnC,QAAMiF,oBAAoB,GAAG,iBAAIlG,YAAJ,EAAkB,iBAAlB,EAAqC,KAArC,CAA7B;AACA,QAAImG,MAAJ;;AAEA,YAAQlF,SAAR;AACE,WAAK,aAAL;AACA,WAAK,WAAL;AACA,WAAK,cAAL;AACEkF,QAAAA,MAAM,GAAG,CAACvB,UAAD,GAAc,yBAAQ,oBAAR,CAAd,GAA8C,yBAAQ,sBAAR,CAAvD;AACA;;AACF,WAAK,2BAAL;AAAkC;AAChCuB,UAAAA,MAAM,GAAGD,oBAAoB,GACzB,yBAAQ,kDAAR,CADyB,GAEzB,yBAAQ,oBAAR,CAFJ;AAGA;AACD;;AACD,WAAK,WAAL;AAAkB;AAChB,cAAIpF,aAAa,KAAK,aAAtB,EAAqC;AACnCqF,YAAAA,MAAM,GAAG,yBAAQ,2CAAR,CAAT;AACD,WAFD,MAEO,IAAIrF,aAAa,KAAK,WAAtB,EAAmC;AACxC,gBAAIgE,sBAAJ,EAA4B;AAC1BqB,cAAAA,MAAM,GAAGD,oBAAoB,GACzB,yBAAQ,iCAAR,CADyB,GAEzB,yBAAQ,8BAAR,CAFJ;AAGD,aAJD,MAIO;AACLC,cAAAA,MAAM,GAAGzF,oCAAoC,GACzC,yBAAQ,kDAAR,CADyC,GAEzC,yBAAQ,uBAAR,CAFJ;AAGD;AACF,WAVM,MAUA;AACLyF,YAAAA,MAAM,GAAG,yBAAQ,uBAAR,CAAT;AACD;;AACD;AACD;;AACD;AACEA,QAAAA,MAAM,GAAG,yBAAQ,uBAAR,CAAT;AA/BJ;;AAkCA,WAAOlH,aAAa,CAAC;AAAEmH,MAAAA,EAAE,EAAED;AAAN,KAAD,CAApB;AACD,GAxCD,CA7ZsB,CAuctB;;;AACA,MAAME,cAAc,GAAG,SAAjBA,cAAiB,CAACC,SAAD,EAA4C;AAAA,QAAhCC,cAAgC,uEAAf3B,UAAe;;AACjE,QAAI,CAAC2B,cAAL,EAAqB;AACnB,aAAO,EAAP;AACD;;AAED,WAAOhB,MAAM,CAACC,IAAP,CAAYc,SAAZ,EAAuBE,MAAvB,CAA8B,UAACC,GAAD,EAAMC,OAAN,EAAeC,KAAf,EAAyB;AAC5D,UAAIL,SAAS,CAACI,OAAD,CAAT,KAAuB,IAA3B,EAAiC;AAC/BD,QAAAA,GAAG,aAAMA,GAAN,SAAYE,KAAK,KAAK,CAAV,GAAc,EAAd,GAAmB,GAA/B,SAAqCD,OAArC,cAAgDJ,SAAS,CAACI,OAAD,CAAzD,CAAH;AACD;;AAED,aAAOD,GAAP;AACD,KANM,EAMJ,EANI,CAAP;AAOD,GAZD;;AAcA,MAAMG,qCAAqC,GAAG,SAAxCA,qCAAwC,QAExC;AAAA,6BADJC,MACI;AAAA,QADMtD,IACN,gBADMA,IACN;AAAA,QADY9D,UACZ,gBADYA,UACZ;AAAA,QADwBqH,mBACxB,gBADwBA,mBACxB;AACJjI,IAAAA,QAAQ,CAAC;AACPwE,MAAAA,IAAI,EAAE,gCADC;AAEPE,MAAAA,IAAI,EAAJA,IAFO;AAGP9D,MAAAA,UAAU,EAAVA,UAHO;AAIPqH,MAAAA,mBAAmB,EAAnBA;AAJO,KAAD,CAAR;AAMD,GATD;;AAWA,MAAMC,6BAA6B,GAAG,SAAhCA,6BAAgC,QAAiC;AAAA,6BAA9BF,MAA8B;AAAA,QAApBtD,IAAoB,gBAApBA,IAAoB;AAAA,QAAdyD,KAAc,gBAAdA,KAAc;AACrEnI,IAAAA,QAAQ,CAAC;AACPwE,MAAAA,IAAI,EAAE,wBADC;AAEPE,MAAAA,IAAI,EAAJA,IAFO;AAGPyD,MAAAA,KAAK,EAALA;AAHO,KAAD,CAAR;AAKD,GAND;;AAQA,MAAMC,kBAAkB,GAAG,wBAAY;AAAA,WAAMzI,mBAAmB,CAAC,UAAA0I,IAAI;AAAA,aAAI,CAACA,IAAL;AAAA,KAAL,CAAzB;AAAA,GAAZ,EAAsD,EAAtD,CAA3B;AAEA,MAAMC,YAAY,GAAG,wBACnB,iBAAgD;AAAA,6BAA7CN,MAA6C;AAAA,QAAnCtD,IAAmC,gBAAnCA,IAAmC;AAAA,QAA7ByD,KAA6B,gBAA7BA,KAA6B;AAAA,QAAtB3D,IAAsB,gBAAtBA,IAAsB;AAAA,QAAb+D,IAAa;AAC9C,QAAMC,4BAA4B,GAAG,CACnC,UADmC,EAEnC,KAFmC,EAGnC,KAHmC,EAInC,WAJmC,EAKnC,WALmC,EAMnC,OANmC,CAArC,CAD8C,CAU9C;AACA;;AACA,QAAI9D,IAAI,KAAK,iBAAT,IAA8BlF,KAAK,CAACsC,UAAN,KAAqB,MAAnD,IAA6DqG,KAAK,KAAK,KAA3E,EAAkF;AAChFC,MAAAA,kBAAkB;AAElB;AACD;;AAED,QAAIK,GAAJ;;AAEA,QAAI,CAAC,SAAD,SAAeD,4BAAf,EAA6CE,QAA7C,CAAsDhE,IAAtD,KAA+DyD,KAAK,KAAK,EAA7E,EAAiF;AAC/EM,MAAAA,GAAG,GAAG,IAAN;AACD,KAFD,MAEO,IACLjE,IAAI,KAAK,OAAT,KACCE,IAAI,KAAK,UAAT,IACCA,IAAI,KAAK,QADV,IAECA,IAAI,KAAK,iBAFV,IAGCA,IAAI,KAAK,YAJX,CADK,EAML;AACA;AACA+D,MAAAA,GAAG,GAAGN,KAAK,KAAK,OAAV,GAAoB,KAApB,GAA4B,IAAlC,CAFA,CAIA;AACA;AACD,KAZM,MAYA,IAAI3D,IAAI,KAAK,OAAT,IAAoBE,IAAI,KAAK,SAAjC,EAA4C;AACjD,UAAIyD,KAAK,KAAK,OAAd,EAAuB;AACrBM,QAAAA,GAAG,GAAG,KAAN;AACD,OAFD,MAEO,IAAIN,KAAK,KAAK,MAAd,EAAsB;AAC3BM,QAAAA,GAAG,GAAG,IAAN;AACD,OAFM,MAEA;AACLA,QAAAA,GAAG,GAAG,IAAN;AACD,OAPgD,CASjD;;AACD,KAVM,MAUA,IAAI/D,IAAI,KAAK,MAAb,EAAqB;AAC1B+D,MAAAA,GAAG,GAAGN,KAAK,CAACQ,KAAN,CAAY,IAAZ,CAAN;AACD,KAFM,MAEA;AACLF,MAAAA,GAAG,GAAGN,KAAN;AACD;;AAED,QAAMS,YAAY,GAAGlC,MAAM,CAACmC,MAAP,CAAc,EAAd,EAAkBlH,UAAlB,CAArB,CAlD8C,CAoD9C;;AACA,QAAI+C,IAAI,KAAK,KAAb,EAAoB;AAClB,aAAOkE,YAAY,CAACE,GAApB;AACD,KAvD6C,CAyD9C;;;AACA,QAAIpE,IAAI,KAAK,WAAb,EAA0B;AACxB,aAAOkE,YAAY,CAACG,SAApB;AACD,KA5D6C,CA8D9C;;;AACA,WAAOH,YAAY,CAAClE,IAAD,CAAnB;AAEA1E,IAAAA,QAAQ,CAAC;AACPwE,MAAAA,IAAI,EAAE,YADC;AAEPwE,MAAAA,MAAM,EAAEJ;AAFD,KAAD,CAAR;AAKA5I,IAAAA,QAAQ;AACNwE,MAAAA,IAAI,EAAE,WADA;AAENmC,MAAAA,IAAI,EAAEjC,IAAI,CAACiE,KAAL,CAAW,GAAX,CAFA;AAGNR,MAAAA,KAAK,EAAEM;AAHD,OAIHF,IAJG,EAAR;AAMD,GA7EkB,EA8EnB,CAAC5G,UAAD,EAAanC,KAAK,CAACsC,UAAnB,EAA+BsG,kBAA/B,CA9EmB,CAArB;AAiFA,MAAMa,mCAAmC,GAAG,wBAAY,YAAM;AAC5DjJ,IAAAA,QAAQ,CAAC;AACPwE,MAAAA,IAAI,EAAE,WADC;AAEPmC,MAAAA,IAAI,EAAE,CAAC,iBAAD,CAFC;AAGPwB,MAAAA,KAAK,EAAE;AAHA,KAAD,CAAR;AAMAC,IAAAA,kBAAkB;AACnB,GAR2C,EAQzC,CAACA,kBAAD,CARyC,CAA5C;;AAUA,MAAMc,YAAY;AAAA,8FAAG,kBAAOC,CAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAUzB,cAAAA,cAAV,8DAA2B3B,UAA3B;AACnBoD,cAAAA,CAAC,CAACC,cAAF;AADmB;AAAA;AAAA,qBAIX7C,iBAAiB,EAJN;;AAAA;AAKjB8C,cAAAA,2BAA2B,CAAC3B,cAAD,CAA3B;AACMpF,cAAAA,SANW,GAMC9C,KAAK,CAAC2C,SAAN,KAAoB,YAApB,GAAmC3C,KAAK,CAAC8C,SAAzC,GAAqD+D,GANtD;;AASjB,kBAAI7G,KAAK,CAAC2C,SAAN,KAAoB,aAAxB,EAAuC;AAC/BmH,gBAAAA,WAD+B,GACjB,iBAAIpI,aAAJ,EAAmB,CAAC,aAAD,EAAgB,QAAhB,EAA0B,MAA1B,CAAnB,EAAsD,aAAtD,CADiB;AAGrCqI,gBAAAA,UAAU,GAAG/J,KAAK,CAAC6C,IAAN,IAAciH,WAA3B;AACD,eAJD,MAIO,IAAI9J,KAAK,CAAC2C,SAAN,KAAoB,WAAxB,EAAqC;AAC1CoH,gBAAAA,UAAU,GAAG,WAAb;AACD,eAFM,MAEA;AACLA,gBAAAA,UAAU,GAAG,iBAAIrI,aAAJ,EAAmB,CAAC,YAAD,EAAe1B,KAAK,CAAC8C,SAArB,EAAgC,QAAhC,EAA0C,MAA1C,CAAnB,EAAsE,EAAtE,CAAb;AACD,eAjBgB,CAmBjB;;;AACA,kBAAI9C,KAAK,CAACsC,UAAN,KAAqB,MAAzB,EAAiC;AAC/B4D,gBAAAA,OAAO,CAAC8D,GAAR;AACD;;AAEKC,cAAAA,aAxBW,GAwBK,8CAA6B/D,OAA7B,CAxBL;AAyBXgE,cAAAA,eAzBW,GAyBOhE,OAAO,CAACiE,MAAR,GAAiB,CAzBxB;;AAAA,mBA2BbhE,qBA3Ba;AAAA;AAAA;AAAA;;AAAA,mBA6BXI,UA7BW;AAAA;AAAA;AAAA;;AA8BblF,cAAAA,YAAY,iCAAMM,YAAN;AAAoBkB,gBAAAA,IAAI,EAAE7C,KAAK,CAAC6C;AAAhC,kBAAwC7C,KAAK,CAAC4C,SAA9C,EAAyDiE,GAAzD,CAAZ;AA9Ba;AAAA;;AAAA;AAgCb,kBAAI,oCAAmBnF,aAAnB,EAAkCC,YAAlC,CAAJ,EAAqD;AACnDlB,gBAAAA,IAAI,CAAC;AAAEC,kBAAAA,MAAM,EAAE;AAAV,iBAAD,CAAJ;AACAe,gBAAAA,UAAU,CAACE,YAAD,CAAV;AACD,eAHD,MAGO;AACLyI,gBAAAA,MAAM,CAACC,YAAP,CAAoBC,MAApB,CAA2B;AACzBtF,kBAAAA,IAAI,EAAE,SADmB;AAEzBuF,kBAAAA,OAAO,EAAE;AAAExC,oBAAAA,EAAE,EAAE;AAAN;AAFgB,iBAA3B;AAID;;AAxCY;;AAAA;AA6CftH,cAAAA,IAAI,CAAC;AACH+J,gBAAAA,QAAQ,qBAAcC,oBAAd,4BAAwC5D,GAAxC,CADL;AAEHnG,gBAAAA,MAAM,EAAEsH,cAAc,CAAC;AACrBpF,kBAAAA,SAAS,EAAE,iBADU;AAErBD,kBAAAA,SAAS,EAAE3C,KAAK,CAAC2C,SAFI;AAGrBG,kBAAAA,SAAS,EAATA,SAHqB;AAIrBG,kBAAAA,cAAc,EAAEtB,YAAY,CAACuD,IAJR;AAKrBhC,kBAAAA,kBAAkB,EAAE6G,UALC;AAMrB5G,kBAAAA,sBAAsB,EAAE;AANH,iBAAD;AAFnB,eAAD,CAAJ;AA7Ce;AAAA;;AAAA;AAAA,mBAwDNiD,mBAxDM;AAAA;AAAA;AAAA;;AAAA,mBAyDXG,UAzDW;AAAA;AAAA;AAAA;;AA0Db;AACMmE,cAAAA,YA3DO,GA2DQ,mCAAmB/I,YAAY,CAACuD,IAAhC,EAAsCvD,YAAY,CAAC2D,QAAnD,CA3DR;AA4DLA,cAAAA,QA5DK,GA4DiB3D,YA5DjB,CA4DL2D,QA5DK,EA4DQyD,IA5DR,6CA4DiBpH,YA5DjB;AA8DbN,cAAAA,YAAY,CAAC0H,IAAD,EAAO,WAAP,EAAoB2B,YAApB,EAAkCpF,QAAlC,CAAZ;AAEA7E,cAAAA,IAAI,CAAC;AACHC,gBAAAA,MAAM,EAAEsH,cAAc,CAAC;AACrBpF,kBAAAA,SAAS,EAAE,iBADU;AAErBD,kBAAAA,SAAS,EAAE3C,KAAK,CAAC2C,SAFI;AAGrBG,kBAAAA,SAAS,EAAE4H,YAHU;AAIrBzH,kBAAAA,cAAc,EAAEtB,YAAY,CAACuD,IAJR;AAKrBhC,kBAAAA,kBAAkB,EAAE,aALC;AAMrBC,kBAAAA,sBAAsB,EAAE;AANH,iBAAD,CADnB;AASHqH,gBAAAA,QAAQ,qBAAcC,oBAAd,mCAA+CnF,QAA/C,cAA2DoF,YAA3D;AATL,eAAD,CAAJ;AAhEa;AAAA;;AAAA;AA4Eb3I,cAAAA,YAAY,CAACJ,YAAD,EAAe3B,KAAK,CAAC4C,SAArB,EAAgC5C,KAAK,CAAC8C,SAAtC,CAAZ,CA5Ea,CA8Eb;;AACArC,cAAAA,IAAI,CAAC;AAAEC,gBAAAA,MAAM,EAAE;AAAV,eAAD,CAAJ;AA/Ea;;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAmFNgG,iBAnFM;AAAA;AAAA;AAAA;;AAAA,oBAoFX,qBAAQtE,WAAW,CAAC8C,IAApB,MAA8B,qBAAQvD,YAAY,CAACuD,IAArB,CApFnB;AAAA;AAAA;AAAA;;AAqFb;AACAzE,cAAAA,IAAI,CAAC;AAAEC,gBAAAA,MAAM,EAAE;AAAV,eAAD,CAAJ;AAtFa;;AAAA;AA2Ffc,cAAAA,YAAY,CAACY,WAAW,CAAC8C,IAAb,EAAmBvD,YAAnB,CAAZ;AA3Fe;;AAAA;AAAA,oBAgGN0E,mBAAmB,IAAI,CAACG,4BAhGlB;AAAA;AAAA;AAAA;;AAAA,kBAkGVF,oBAlGU;AAAA;AAAA;AAAA;;AAmGbvF,cAAAA,YAAY,CACVY,YADU,EAEV3B,KAAK,CAAC2C,SAFI,EAGV3C,KAAK,CAAC8C,SAHI,EAIV9C,KAAK,CAACsC,UAAN,KAAqB,MAJX,EAKVF,WALU,CAAZ;AAQMuI,cAAAA,sBA3GO,GA2GkB3K,KAAK,CAACyC,aAAN,KAAwB,aA3G1C,EA4Gb;AACA;;AAEMmI,cAAAA,QA/GO,GA+GI5C,cAAc;AAC7BpF,gBAAAA,SAAS,EAAE,2BADkB;AAE7BD,gBAAAA,SAAS,EAAE,aAFkB;AAG7BG,gBAAAA,SAAS,EAAE9C,KAAK,CAAC8C,SAHY;AAK7BJ,gBAAAA,iBAAiB,EAAEf,YAAY,CAACuD,IALH;AAM7BnC,gBAAAA,WAAW,EAAE,MANgB;AAO7B2B,gBAAAA,IAAI,EAAE,GAPuB;AAQ7BpC,gBAAAA,UAAU,EAAE;AARiB,iBAS1B2H,aAT0B;AAU7B3G,gBAAAA,cAAc,EAAE3B,YAAY,CAACuD,IAVA;AAW7B3B,gBAAAA,kBAAkB,EAAE,IAXS;AAY7BC,gBAAAA,sBAAsB,EAAE;AAZK,iBA/GlB;AA6HPqH,cAAAA,WA7HO,GA6HMF,sBAAsB,GACrCC,QADqC,GAErC5C,cAAc;AAEVpF,gBAAAA,SAAS,EAAE,iBAFD;AAGVD,gBAAAA,SAAS,EAAE3C,KAAK,CAAC2C,SAHP;AAIVG,gBAAAA,SAAS,EAATA;AAJU,iBAKPmH,aALO;AAMV9G,gBAAAA,sBAAsB,EAAE,CAAC,CAAC,aAAD,EAAgB,WAAhB,EAA6B+F,QAA7B,CAAsClJ,KAAK,CAAC2C,SAA5C,CANf;AAOVO,gBAAAA,kBAAkB,EAAE6G;AAPV,kBASZ7B,cATY,CA/HL,EA2Ib;;AA3Ia,mBA4ITyC,sBA5IS;AAAA;AAAA;AAAA;;AA6IX;AACAnK,cAAAA,QAAQ,CAAC;AACPwE,gBAAAA,IAAI,EAAE;AADC,eAAD,CAAR;AAIAvE,cAAAA,IAAI,CAAC;AAAEC,gBAAAA,MAAM,EAAE6F,UAAU,GAAGsE,WAAH,GAAgB;AAApC,eAAD,CAAJ;AAlJW;;AAAA;AAuJbpK,cAAAA,IAAI,CAAC;AAAEC,gBAAAA,MAAM,EAAEmK;AAAV,eAAD,CAAJ;AAvJa;;AAAA;AAAA,mBA8JXpE,sBA9JW;AAAA;AAAA;AAAA;;AA+Jb;AACMqE,cAAAA,aAhKO;AAiKXlI,gBAAAA,SAAS,EAAE,WAjKA;AAkKXN,gBAAAA,UAAU,EAAEtC,KAAK,CAACsC,UAlKP;AAmKXS,gBAAAA,WAAW,EAAE,MAnKF;AAoKXJ,gBAAAA,SAAS,EAAE3C,KAAK,CAAC2C,SApKN;AAqKXG,gBAAAA,SAAS,EAAE9C,KAAK,CAAC8C,SArKN;AAsKXL,gBAAAA,aAAa,EAAE,WAtKJ;AAuKXiC,gBAAAA,IAAI,EAAE;AAvKK,iBAwKRuF,aAxKQ;AAyKX9G,gBAAAA,sBAAsB,EAAE,CAAC,CAAC,aAAD,EAAgB,WAAhB,EAA6B+F,QAA7B,CAAsClJ,KAAK,CAAC2C,SAA5C,CAzKd;AA0KXO,gBAAAA,kBAAkB,EAAE6G;AA1KT;AA6KbtJ,cAAAA,IAAI,CAAC;AACHC,gBAAAA,MAAM,EAAEsH,cAAc,CAAC8C,aAAD,EAAgB5C,cAAhB;AADnB,eAAD,CAAJ,CA7Ka,CAiLb;AACA;AACA;AACA;;AACA1H,cAAAA,QAAQ,CAAC;AACPwE,gBAAAA,IAAI,EAAE;AADC,eAAD,CAAR,CArLa,CAyLb;;AAzLa;;AAAA;AA+LfjE,cAAAA,YAAY,CACVY,YADU,EAEV3B,KAAK,CAAC2C,SAFI,EAGV3C,KAAK,CAAC8C,SAHI,EAIV;AACA;AACA9C,cAAAA,KAAK,CAACsC,UAAN,KAAqB,MANX,EAOV;AACAF,cAAAA,WARU,EASV;AACA;AACA,kBAXU,CAAZ;AAaMyI,cAAAA,UA5MS;AA6MbjI,gBAAAA,SAAS,EAAE,iBA7ME;AA8MbD,gBAAAA,SAAS,EAAE3C,KAAK,CAAC2C,SA9MJ;AA+MbG,gBAAAA,SAAS,EAAE9C,KAAK,CAAC8C;AA/MJ,iBAgNVmH,aAhNU;AAiNb9G,gBAAAA,sBAAsB,EAAE,CAAC,CAAC,aAAD,EAAgB,WAAhB,EAA6B+F,QAA7B,CAAsClJ,KAAK,CAAC2C,SAA5C,CAjNZ;AAkNbO,gBAAAA,kBAAkB,EAAE6G;AAlNP;AAqNftJ,cAAAA,IAAI,CAAC;AAAEC,gBAAAA,MAAM,EAAE,4BAAWmK,UAAX,EAAuB3C,cAAvB;AAAV,eAAD,CAAJ,CArNe,CAuNf;AAEA;AACA;AACA;AACA;AACA;;AA7Ne;AAAA;;AAAA;AAAA,oBA8NN7B,mBAAmB,IAAIG,4BA9NjB;AAAA;AAAA;AAAA;;AAAA,mBAgOXC,sBAhOW;AAAA;AAAA;AAAA;;AAiOb;AACA;AAEIwB,cAAAA,SApOS;AAqOXrF,gBAAAA,SAAS,EAAE,WArOA;AAsOXN,gBAAAA,UAAU,EAAEtC,KAAK,CAACsC,UAtOP;AAuOXS,gBAAAA,WAAW,EAAE,MAvOF;AAwOXJ,gBAAAA,SAAS,EAAE3C,KAAK,CAAC2C,SAxON;AAyOXG,gBAAAA,SAAS,EAAE9C,KAAK,CAAC8C,SAzON;AA0OXL,gBAAAA,aAAa,EAAE,WA1OJ;AA2OXiC,gBAAAA,IAAI,EAAE;AA3OK,iBA4ORuF,aA5OQ;AA6OX9G,gBAAAA,sBAAsB,EAAE,KA7Ob;AA8OXD,gBAAAA,kBAAkB,EAAE;AA9OT;AAiPbvC,cAAAA,SAAS,CAAC,wCAAD,CAAT;AAEAF,cAAAA,IAAI,CAAC;AACHC,gBAAAA,MAAM,EAAEsH,cAAc,CAACC,SAAD,EAAYC,cAAZ;AADnB,eAAD,CAAJ,CAnPa,CAuPb;AACA;;AACA1H,cAAAA,QAAQ,CAAC;AACPwE,gBAAAA,IAAI,EAAE;AADC,eAAD,CAAR,CAzPa,CA6Pb;;AA7Pa;;AAAA;AAkQf;AACQM,cAAAA,SAnQO,GAmQqBpD,iBAnQrB,CAmQPoD,QAnQO,EAmQGN,IAnQH,GAmQqB9C,iBAnQrB,CAmQG8C,IAnQH,EAmQY+D,KAnQZ,6CAmQqB7G,iBAnQrB,yBAoQf;AACA;;AACMwI,cAAAA,aAtQS,GAsQM,mCAAmBxI,iBAAiB,CAACgD,IAArC,EAA2CI,SAA3C,CAtQN,EAuQf;;AACAjE,cAAAA,YAAY,EACV;AACA0H,cAAAA,KAFU,EAGV;AACA;AACA;AACA;AACA/D,cAAAA,IAPU,EAQV0F,aARU,EASVpF,SATU,EAUV;AACA;AACAkB,cAAAA,4BAZU,CAAZ,CAxQe,CAsRf;;AACAzF,cAAAA,YAAY,CAACY,YAAD,EAAe3B,KAAK,CAAC2C,SAArB,EAAgC3C,KAAK,CAAC8C,SAAtC,EAAiD,KAAjD,CAAZ;AAEAtC,cAAAA,QAAQ,CAAC;AAAEwE,gBAAAA,IAAI,EAAE;AAAR,eAAD,CAAR,CAzRe,CA2Rf;;AAEM+F,cAAAA,qDA7RS;AA8RbnI,gBAAAA,SAAS,EAAE,iBA9RE;AA+RbD,gBAAAA,SAAS,EAAE,YA/RE;AAgSbG,gBAAAA,SAAS,EAAE4H;AAhSE,iBAiSVT,aAjSU;AAkSb9G,gBAAAA,sBAAsB,EAAE,IAlSX;AAmSbD,gBAAAA,kBAAkB,EAAEhB,iBAAiB,CAACqD;AAnSzB,yFAoSI2E,eApSJ,GAoSwBvI,YAAY,CAACuD,IApSrC,+EAqSQgF,eArSR,GAqS4B,WArS5B,mFAsSYA,eAtSZ,GAsSgC,KAtShC,mFAuSYA,eAvSZ,GAuSgC5E,SAvShC,+EAwSQ4E,eAxSR,GAwS4BhI,iBAAiB,CAACgD,IAxS9C;AA2SfzE,cAAAA,IAAI,CAAC;AACHC,gBAAAA,MAAM,EAAEsH,cAAc,CACpB+C,qDADoB,EAEpB7C,cAFoB;AADnB,eAAD,CAAJ;AA3Se;;AAAA;AAsTf;AACA,kBAAIzB,sBAAJ,EAA4B;AAC1B,oBAAID,4BAAJ,EAAkC;AAAA,0CACI7E,YAAY,CAACO,iBADjB,EACxBoD,UADwB,yBACxBA,QADwB,EACdN,KADc,yBACdA,IADc,EACL+D,MADK;AAE1B2B,kBAAAA,cAF0B,GAEX,mCAAmB/I,YAAY,CAACO,iBAAb,CAA+BgD,IAAlD,EAAwDI,UAAxD,CAFW,EAGhC;;AACAjE,kBAAAA,YAAY,EACV;AACA0H,kBAAAA,MAFU,EAGV;AACA;AACA;AACA;AACA/D,kBAAAA,KAPU,EAQV0F,cARU,EASVpF,UATU,EAUV;AACA;AACAkB,kBAAAA,4BAZU,CAAZ,CAJgC,CAkBhC;AACA;;AACAxF,kBAAAA,gCAAgC,CAAChB,KAAK,CAAC0C,iBAAP,EAA0B,CAACgI,cAAD,CAA1B,CAAhC,CApBgC,CAsBhC;AACA;;AAEMM,kBAAAA,oBAzB0B;AA0B9BpI,oBAAAA,SAAS,EAAE,iBA1BmB;AA2B9BD,oBAAAA,SAAS,EAAE,YA3BmB;AA4B9BG,oBAAAA,SAAS,EAAE4H;AA5BmB,qBA6B3BT,aA7B2B;AA8B9B9G,oBAAAA,sBAAsB,EAAE,IA9BM;AA+B9BD,oBAAAA,kBAAkB,EAAEvB,YAAY,CAACO,iBAAb,CAA+BqD;AA/BrB,6FAgCb2E,eAhCa,GAgCOvI,YAAY,CAACuD,IAhCpB,+EAiCTgF,eAjCS,GAiCW,WAjCX,mFAkCLA,eAlCK,GAkCe,KAlCf,mFAmCLA,eAnCK,GAmCe5E,UAnCf,+EAoCT4E,eApCS,GAoCWvI,YAAY,CAACO,iBAAb,CAA+BgD,IApC1C;AAuChCzE,kBAAAA,IAAI,CAAC;AAAEC,oBAAAA,MAAM,EAAE,4BAAWsK,oBAAX,EAAiC,IAAjC;AAAV,mBAAD,CAAJ;AACD,iBAxCD,MAwCO;AACL;AACA9J,kBAAAA,2BAA2B,CAAClB,KAAK,CAAC0C,iBAAP,EAA0Bf,YAAY,CAACP,UAAvC,CAA3B,CAFK,CAIL;AACA;;AACAX,kBAAAA,IAAI,CAAC;AAAEC,oBAAAA,MAAM,EAAE;AAAV,mBAAD,CAAJ;AACD;AACF,eAjDD,MAiDO;AACLuK,gBAAAA,OAAO,CAACC,KAAR,CAAc,0BAAd;AACD;;AA1Wc;;AAAA;AA+WjB1K,cAAAA,QAAQ,CAAC;AACPwE,gBAAAA,IAAI,EAAE;AADC,eAAD,CAAR;AA/WiB;AAAA;;AAAA;AAAA;AAAA;AAmXXwE,cAAAA,MAnXW,GAmXF,wDAnXE;AAqXjBhJ,cAAAA,QAAQ,CAAC;AACPwE,gBAAAA,IAAI,EAAE,YADC;AAEPwE,gBAAAA,MAAM,EAANA;AAFO,eAAD,CAAR;;AArXiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAZE,YAAY;AAAA;AAAA;AAAA,KAAlB;;AA2XA,MAAMyB,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzB1K,IAAAA,IAAI,CAAC;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAAD,CAAJ;AACD,GAFD;;AAIA,MAAM0K,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACrBnL,IAAAA,QAAQ,CAACF,8BAAD,CAAR;AACAS,IAAAA,QAAQ,CAAC;AACPwE,MAAAA,IAAI,EAAE;AADC,KAAD,CAAR;AAGD,GALD;;AAMA,MAAMqG,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACrB,QAAIrL,KAAK,CAAC4C,SAAN,KAAoB,iBAAxB,EAA2C;AACzC9B,MAAAA,kBAAkB,CAACuH,OAAnB,CAA2BiD,KAA3B;AACD;AACF,GAJD;;AAMA,MAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,CAAAC,GAAG,EAAI;AAClC,QAAIA,GAAG,KAAK,UAAZ,EAAwB;AACtB;AACD;;AAED,QAAIrF,qBAAJ,EAA2B;AACzBxF,MAAAA,SAAS,CAAC,8BAAD,CAAT;AAEA;AACD;;AAED,QAAIX,KAAK,CAAC2C,SAAN,KAAoB,aAAxB,EAAuC;AACrChC,MAAAA,SAAS,CAAC,mCAAD,CAAT;AACD;AACF,GAdD;;AAgBA,MAAMkJ,2BAA2B,GAAG,SAA9BA,2BAA8B,CAAA3B,cAAc,EAAI;AACpD,QACElI,KAAK,CAAC4C,SAAN,KAAoB,WAApB,IACA5C,KAAK,CAAC2C,SAAN,KAAoB,aADpB,IAEA3C,KAAK,CAACyC,aAAN,KAAwB,aAFxB,IAGAyF,cAJF,EAKE;AACAvH,MAAAA,SAAS,CAAC,+BAAD,CAAT;AACD;AACF,GATD;;AAWA,MAAM8K,wBAAwB,GAAG,SAA3BA,wBAA2B,GAAM;AACrC,WACG,CAACzL,KAAK,CAACyC,aAAN,KAAwB,WAAxB,IAAuCzC,KAAK,CAAC4C,SAAN,KAAoB,2BAA5D,KACC,iBAAIjB,YAAJ,EAAkB,CAAC,iBAAD,CAAlB,EAAuC,IAAvC,MAAiD,KADnD,IAEA3B,KAAK,CAAC4C,SAAN,KAAoB,cAHtB;AAKD,GAND,CA5+BsB,CAo/BtB;;;AACA,MAAM8I,mBAAmB,GAAG,4BAC1B1L,KAAK,CAAC2C,SADoB,EAE1B3C,KAAK,CAAC8C,SAFoB,EAG1B;AACAlB,EAAAA,gBAJ0B,CAA5B,CAr/BsB,CA4/BtB;;AACA,MAAM+J,cAAc,GAAG/E,kBAAkB,GAAG;AAAEgF,IAAAA,UAAU,EAAE,QAAd;AAAwBC,IAAAA,aAAa,EAAE;AAAvC,GAAH,GAAqD,EAA9F;AAEA,sBACE,+EACE,gCAAC,yBAAD;AACE,IAAA,MAAM,EAAElF,MADV;AAEE,IAAA,QAAQ,EAAE0E,QAFZ;AAGE,IAAA,QAAQ,EAAED,QAHZ;AAIE,IAAA,QAAQ,EAAED,YAJZ;AAKE,IAAA,YAAY,EAAE,sBACZnL,KAAK,CAAC4C,SAAN,KAAoB,2BAApB,IACG5C,KAAK,CAAC4C,SAAN,KAAoB,WAApB,IAAmC5C,KAAK,CAACyC,aAAN,KAAwB,OAFlD;AALhB,kBAUE,gCAAC,+BAAD,qBACE,gCAAC,uBAAD;AAAa,IAAA,QAAQ,EAAEzC,KAAK,CAACgD,QAA7B;AAAuC,IAAA,OAAO,EAAEkD;AAAhD,IADF,eAEE,8DACE,gCAAC,oCAAD,qBACE,gCAAC,2BAAD;AACE,IAAA,EAAE,EAAE,wCAAuBlG,KAAvB,CADN;AAEE,IAAA,MAAM,EAAE;AACNgF,MAAAA,IAAI,EAAE,wBACJpE,aAAa,CAAC;AACZmH,QAAAA,EAAE,EAAE,6CAAqB/H,KAAK,CAACyC,aAA3B;AADQ,OAAD,CADT,CADA;AAMNyC,MAAAA,IAAI,EAAE,wBAAWlF,KAAK,CAACwC,aAAjB,CANA;AAONkC,MAAAA,IAAI,EAAE1E,KAAK,CAAC0E;AAPN;AAFV,KAYG,UAAAoH,GAAG;AAAA,wBAAI,8CAAO,wBAAWA,GAAX,CAAP,CAAJ;AAAA,GAZN,CADF,EAgBG,CAAClF,kBAAD,iBACC,+EACE;AAAK,IAAA,SAAS,EAAC;AAAf,kBACE,gCAAC,mCAAD,QACGmF,qBAASC,GAAT,CAAa,UAACC,IAAD,EAAO3D,KAAP,EAAiB;AAC7B,wBACE,gCAAC,yBAAD,CACE;AACA;AAFF;AAGE,MAAA,UAAU,EAAEA,KAAK,KAAK,CAAV,IAAemD,wBAAwB,EAHrD;AAIE,MAAA,QAAQ,EAAEzL,KAAK,CAAC+C,WAAN,KAAsBkJ,IAAI,CAAClE,EAJvC;AAKE,MAAA,GAAG,EAAEkE,IAAI,CAAClE;AALZ,OAMMkE,IANN;AAOE,MAAA,OAAO,EAAE,mBAAM;AACbhM,QAAAA,QAAQ,CAAC,UAAA4I,IAAI;AAAA,iDACRA,IADQ;AAEX9F,YAAAA,WAAW,EAAEkJ,IAAI,CAAClE;AAFP;AAAA,SAAL,CAAR;AAIAwD,QAAAA,oBAAoB,CAACU,IAAI,CAAClE,EAAN,CAApB;AACAtH,QAAAA,IAAI,CAAC;AAAEC,UAAAA,MAAM,EAAE,+BAAcuL,IAAI,CAAClE,EAAnB,EAAuB/H,KAAvB;AAAV,SAAD,CAAJ;AACD,OAdH;AAeE,MAAA,OAAO,EAAEsI,KAAK,KAAKyD,qBAAS5B,MAAT,GAAkB,CAA5B,GAAgC,CAAhC,GAAoC7B,KAAK,GAAG;AAfvD,OADF;AAmBD,GApBA,CADH,CADF,CADF,eA0BE,2CA1BF,CAjBJ,CADF,CAFF,CAVF,eA8DE;AAAM,IAAA,QAAQ,EAAEoB;AAAhB,kBACE,gCAAC,6BAAD,qBACE,gCAAC,6BAAD;AAAW,IAAA,KAAK,EAAEiC;AAAlB,kBACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACG/E,kBAAkB,GACf8E,mBAAmB,CAACM,GAApB,CAAwB,UAACE,GAAD,EAAMC,CAAN,EAAY;AAClC,wBACE;AAAK,MAAA,GAAG,EAAEA,CAAV;AAAa,MAAA,SAAS,EAAC;AAAvB,OACGA,CAAC,KAAK,CAAN,iBACC;AACE,MAAA,KAAK,EAAE;AACLC,QAAAA,KAAK,EAAE,mBADF;AAELC,QAAAA,YAAY,EAAE,EAFT;AAGLC,QAAAA,SAAS,EAAE,EAHN;AAILC,QAAAA,WAAW,EAAE;AAJR;AADT,MAFJ,EAWGL,GAAG,CAACF,GAAJ,CAAQ,UAACQ,IAAD,EAAOlE,KAAP,EAAiB;AACxB,UAAMmE,QAAQ,GACZN,CAAC,KAAK,CAAN,GAAU7D,KAAV,GAAkBoD,mBAAmB,CAAC,CAAD,CAAnB,CAAuBvB,MAAvB,GAAgC7B,KADpD;AAGA,0BACE,gCAAC,2BAAD;AACE,QAAA,GAAG,EAAEkE,IADP;AAEE,QAAA,QAAQ,EAAEC,QAFZ;AAGE,QAAA,WAAW,MAHb;AAIE,QAAA,OAAO,EAAE,mBAAM,CAAE,CAJnB;AAKE,QAAA,GAAG,EAAEN,CAAC,KAAK,CAAN,IAAW7D,KAAK,KAAK,CAArB,GAAyBxH,kBAAzB,GAA8C,IALrD;AAME,QAAA,IAAI,EAAE0L;AANR,QADF;AAUD,KAdA,CAXH,CADF;AA6BD,GA9BD,CADe,GAgCfzG,IAAI,CACFpE,YADE,EAEF3B,KAAK,CAACyC,aAFJ,EAGFzC,KAAK,CAAC0E,IAHJ,EAIF1E,KAAK,CAACsC,UAJJ,EAKFwE,UALE,CAAJ,CAMEb,KANF,CAMQ+F,GANR,CAMY,UAACE,GAAD,EAAM5D,KAAN,EAAgB;AAC1B,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAqB,MAAA,GAAG,EAAEA;AAA1B,OACG4D,GAAG,CAACF,GAAJ,CAAQ,UAACU,KAAD,EAAQP,CAAR,EAAc;AACrB;AACA;AACA,UAAIO,KAAK,CAAC1H,IAAN,KAAe,SAAf,IAA4B0H,KAAK,CAAC1H,IAAN,KAAe,qBAA/C,EAAsE;AACpE,YAAM8C,MAAM,GACV4E,KAAK,CAAC1H,IAAN,KAAe,SAAf,GACI,mCADJ,GAEI,wCAHN;AAKA,4BACE;AAAK,UAAA,SAAS,EAAC,QAAf;AAAwB,UAAA,GAAG,EAAC;AAA5B,wBACE,gCAAC,YAAD;AAAQ,UAAA,MAAM,MAAd;AAAe,UAAA,IAAI,EAAC;AAApB,wBACE;AAAK,UAAA,KAAK,EAAE;AAAE4G,YAAAA,UAAU,EAAE;AAAd;AAAZ,UADF,eAEE,gCAAC,UAAD;AACE,UAAA,QAAQ,EAAC,IADX;AAEE,UAAA,KAAK,EAAC,MAFR;AAGE,UAAA,UAAU,EAAC,MAHb;AAIE,UAAA,aAAa,EAAC;AAJhB,wBAME,gCAAC,2BAAD;AAAkB,UAAA,EAAE,EAAE,yBAAQ9D,MAAR;AAAtB,WACG,UAAA6E,GAAG;AAAA,iBAAIA,GAAJ;AAAA,SADN,CANF,CAFF,CADF,CADF;AAiBD,OA1BoB,CA4BrB;;;AACA,UAAID,KAAK,CAAC1H,IAAN,KAAe,QAAnB,EAA6B;AAC3B,4BAAO;AAAK,UAAA,GAAG,EAAC,QAAT;AAAkB,UAAA,KAAK,EAAE;AAAE4H,YAAAA,MAAM,EAAE;AAAV;AAAzB,UAAP;AACD,OA/BoB,CAiCrB;;;AACA,UAAIF,KAAK,CAAC1H,IAAN,KAAe,cAAnB,EAAmC;AACjC,4BAAO;AAAK,UAAA,GAAG,YAAKsD,KAAL,cAAc6D,CAAd,CAAR;AAA2B,UAAA,KAAK,EAAE;AAAES,YAAAA,MAAM,EAAE;AAAV;AAAlC,UAAP;AACD;;AAED,UAAIF,KAAK,CAAC1H,IAAN,KAAe,eAAnB,EAAoC;AAClC,4BAAO;AAAK,UAAA,GAAG,YAAKsD,KAAL,cAAc6D,CAAd,CAAR;AAA2B,UAAA,KAAK,EAAE;AAAES,YAAAA,MAAM,EAAE;AAAV;AAAlC,UAAP;AACD,OAxCoB,CA0CrB;AACA;;;AACA,UAAIF,KAAK,CAAC1H,IAAN,KAAe,WAAnB,EAAgC;AAC9B,4BAAO;AAAK,UAAA,GAAG,YAAKsD,KAAL,cAAc6D,CAAd,CAAR;AAA2B,UAAA,SAAS,gBAASO,KAAK,CAACG,IAAf;AAApC,UAAP;AACD;;AAED,UAAIH,KAAK,CAAC1H,IAAN,KAAe,UAAnB,EAA+B;AAC7B,4BACE,gCAAC,wBAAD;AACE,UAAA,GAAG,EAAC,UADN;AAEE,UAAA,aAAa,EAAE,iBAAIkB,OAAJ,EAAa,CAAC,CAAD,EAAI,OAAJ,CAAb,EAA2B,EAA3B,CAFjB;AAGE,UAAA,YAAY,EAAEvE,YAHhB;AAIE,UAAA,gBAAgB,EAAE3B,KAAK,CAAC2C,SAJ1B;AAKE,UAAA,QAAQ,EAAEmG,YALZ;AAME,UAAA,MAAM,EAAE3G;AANV,UADF;AAUD,OA3DoB,CA6DrB;;;AACA,UAAM2K,OAAO,GAAG,iBACd3K,UADc,gDAGTuK,KAAK,CAACxH,IAAN,CACAiE,KADA,CACM,GADN,EAED;AACA;AACA;AACA;AACA;AANC,OAOAtE,MAPA,CAOO,UAAAkI,GAAG;AAAA,eAAIA,GAAG,KAAK,mBAAZ;AAAA,OAPV,CAHS,IAWZ,IAXY,IAad,IAbc,CAAhB;AAgBA,UAAMC,cAAc,GAAG,iBAAIrL,YAAJ,EAAkB+K,KAAK,CAACxH,IAAxB,EAA8B,EAA9B,CAAvB;AAEA,UAAIyD,KAAJ,CAhFqB,CAkFrB;AACA;AACA;AACA;AACA;;AACA,UAAI+D,KAAK,CAACxH,IAAN,KAAe,SAAf,IAA4BlF,KAAK,CAACyC,aAAN,KAAwB,SAAxD,EAAmE;AACjEkG,QAAAA,KAAK,GAAG,sBAASqE,cAAT,CAAR,CADiE,CAEjE;AACD,OAHD,MAGO,IAAIN,KAAK,CAACxH,IAAN,KAAe,MAAf,IAAyB+H,KAAK,CAACC,OAAN,CAAcF,cAAd,CAA7B,EAA4D;AACjErE,QAAAA,KAAK,GAAGqE,cAAc,CAACG,IAAf,CAAoB,IAApB,CAAR;AACD,OAFM,MAEA,IAAIT,KAAK,CAACxH,IAAN,KAAe,KAAnB,EAA0B;AAC/ByD,QAAAA,KAAK,GAAG+D,KAAK,CAAC/D,KAAd;AACD,OAFM,MAEA,IAAI+D,KAAK,CAACxH,IAAN,KAAe,cAAf,IAAiC8H,cAAc,KAAK,EAAxD,EAA4D;AACjErE,QAAAA,KAAK,GAAG,IAAR;AACD,OAFM,MAEA;AACLA,QAAAA,KAAK,GAAGqE,cAAR;AACD,OAlGoB,CAoGrB;AACA;AACA;;;AACA,UAAIN,KAAK,CAAC1H,IAAN,KAAe,OAAnB,EAA4B;AAC1B,4BACE,gCAAC,+BAAD;AACE,UAAA,GAAG,EAAE0H,KAAK,CAACxH;AADb,WAEMwH,KAFN;AAGE,UAAA,IAAI,EAAC,QAHP;AAIE,UAAA,QAAQ,EAAE5D,YAJZ;AAKE,UAAA,KAAK,EAAEH;AALT,WADF;AASD;;AAED,0BACE;AAAK,QAAA,SAAS,gBAAS+D,KAAK,CAACG,IAAN,IAAc,CAAvB,CAAd;AAA0C,QAAA,GAAG,EAAEH,KAAK,CAACxH;AAArD,sBACE,gCAAC,cAAD,gCACMwH,KADN;AAEE,QAAA,YAAY,EAAE/K,YAFhB;AAGE,QAAA,0BAA0B,EAAE4G,qCAH9B;AAIE,QAAA,uBAAuB,EAAEG,6BAJ3B;AAKE,QAAA,YAAY,EAAE;AACZ0E,UAAAA,kBAAkB,EAAEC,yBADR;AAEZC,UAAAA,mBAAmB,EAAEC,+BAFT;AAGZC,UAAAA,eAAe,EAAEH,yBAHL;AAIZI,UAAAA,eAAe,EAAEJ,yBAJL;AAKZK,UAAAA,0BAA0B,EAAEC,0BALhB;AAMZC,UAAAA,UAAU,EAAEC;AANA,SALhB;AAaE,QAAA,UAAU,EAAEtH,UAbd,CAcE;AAdF;AAeE,QAAA,oCAAoC,EAClClE,oCAhBJ,CAkBE;AACA;AACA;AApBF;AAqBE,QAAA,6DAA6D,EAAE,iBAC7DH,iBAD6D,EAE7D,UAF6D,EAG7D,IAH6D,CArBjE,CA0BE;AA1BF;AA2BE,QAAA,yDAAyD,EAAE,iBACzDA,iBADyD,EAEzD,MAFyD,EAGzD,IAHyD,CA3B7D;AAgCE,QAAA,oCAAoC,EAClClC,KAAK,CAAC2C,SAAN,KAAoB,YAApB,IACA3C,KAAK,CAAC2C,SAAN,KAAoB,WAlCxB;AAoCE,QAAA,KAAK,EAAEgG,KApCT;AAqCE,QAAA,KAAK,EAAE,qBAAQmE,OAAR,IAAmB,IAAnB,GAA0BlM,aAAa,CAAC;AAAEmH,UAAAA,EAAE,EAAE+E;AAAN,SAAD,CArChD;AAsCE,QAAA,QAAQ,EAAEhE,YAtCZ;AAuCE,QAAA,MAAM,EAAE,kBAAM,CAAE,CAvClB;AAwCE,QAAA,WAAW,EACT,iBAAI4D,KAAJ,EAAW,gBAAX,EAA6B,IAA7B,IACI9L,aAAa,CAAC8L,KAAK,CAACoB,WAAP,CADjB,GAEIpB,KAAK,CAACoB,WA3Cd;AA6CE,QAAA,WAAW,EACT,iBAAIpB,KAAJ,EAAW,gBAAX,EAA6B,IAA7B,IACI9L,aAAa,CAAC8L,KAAK,CAACqB,WAAP,CADjB,GAEIrB,KAAK,CAACqB,WAhDd;AAkDE,QAAA,KAAK,EACH,iBAAIrB,KAAJ,EAAW,UAAX,EAAuB,IAAvB,IACI9L,aAAa,CAAC8L,KAAK,CAACsB,KAAP,CADjB,GAEItB,KAAK,CAACsB;AArDd,SADF,CADF;AA4DD,KA/KA,CADH,CADF;AAoLD,GA3LD,CAjCN,CADF,CADF,CADF,EAmOG,CAACpH,kBAAD,iBACC,gCAAC,+BAAD,qBACE;AAAS,IAAA,KAAK,EAAE;AAAEqH,MAAAA,UAAU,EAAE;AAAd;AAAhB,kBACE,gCAAC,YAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,KAAK,EAAC,QAA5B;AAAqC,IAAA,OAAO,EAAE9C;AAA9C,KACGvK,aAAa,CAAC;AACbmH,IAAAA,EAAE,EAAE;AADS,GAAD,CADhB,CADF,eAME,6CACG1B,mBAAmB,IAAI,CAACI,sBAAxB,iBACC,gCAAC,YAAD;AACE,IAAA,IAAI,EAAEF,UAAU,GAAG,QAAH,GAAc,QADhC;AAEE,IAAA,KAAK,EAAC,SAFR;AAGE,IAAA,OAAO,EAAE,iBAAAoD,CAAC,EAAI;AACZD,MAAAA,YAAY,CAACC,CAAD,EAAI,KAAJ,CAAZ;AACD,KALH;AAME,IAAA,KAAK,EAAE;AAAEuE,MAAAA,WAAW,EAAE;AAAf;AANT,KAQGtN,aAAa,CAAC;AAAEmH,IAAAA,EAAE,EAAE;AAAN,GAAD,CARhB,CAFJ,EAaG,CAAC5B,qBAAqB,IAAIC,mBAA1B,KAAkD,CAACG,UAAnD,iBACC,gCAAC,YAAD;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,KAAK,EAAC,QAFR;AAGE,IAAA,OAAO,EAAE,iBAAAoD,CAAC,EAAI;AACZA,MAAAA,CAAC,CAACC,cAAF;AACArI,MAAAA,UAAU;AACX,KANH;AAOE,IAAA,KAAK,EAAE;AAAE2M,MAAAA,WAAW,EAAE;AAAf;AAPT,KASGtN,aAAa,CAAC;AAAEmH,IAAAA,EAAE,EAAE,yBAAQ,oBAAR;AAAN,GAAD,CAThB,CAdJ,EA0BGrB,iBAAiB,iBAChB,gCAAC,YAAD;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,KAAK,EAAC,QAFR;AAGE,IAAA,OAAO,EAAE,iBAAAiD,CAAC,EAAI;AACZA,MAAAA,CAAC,CAACC,cAAF;AAEAtI,MAAAA,cAAc,CAACc,WAAW,CAAC8C,IAAb,CAAd;AACD,KAPH;AAQE,IAAA,KAAK,EAAE;AAAEgJ,MAAAA,WAAW,EAAE;AAAf;AART,KAUGtN,aAAa,CAAC;AAAEmH,IAAAA,EAAE,EAAE,yBAAQ,oBAAR;AAAN,GAAD,CAVhB,CA3BJ,EAwCGxB,UAAU,IAAIvG,KAAK,CAACyC,aAAN,KAAwB,aAAtC,iBACC,gCAAC,wBAAD;AACE,IAAA,IAAI,EAAE8D,UAAU,GAAG,QAAH,GAAc,QADhC;AAEE,IAAA,KAAK,EACH,CAACJ,qBAAqB,IACpBC,mBADD,IAECM,iBAFD,IAGE1G,KAAK,CAAC4C,SAAN,KAAoB,2BAApB,IACC5C,KAAK,CAAC0E,IAAN,KAAe,GADhB,IAEC,CAAC8B,4BALL,KAMA,CAACD,UAND,GAOI,SAPJ,GAQI,SAXR;AAaE,IAAA,OAAO,EAAE,iBAAAoD,CAAC;AAAA,aAAID,YAAY,CAACC,CAAD,EAAI,IAAJ,CAAhB;AAAA,KAbZ;AAcE,IAAA,IAAI,EACDtD,mBAAmB,IAClB,CAACG,4BADF,IAECxG,KAAK,CAAC0E,IAAN,KAAe,GAFjB,IAGC1E,KAAK,CAAC4C,SAAN,KAAoB,2BAApB,IACC4D,4BAJF,IAKCA,4BAA4B,IAAIxG,KAAK,CAAC0E,IAAN,KAAe;AApBpD,KAuBGkD,sBAAsB,EAvBzB,CAzCJ,EAmEG5H,KAAK,CAACyC,aAAN,KAAwB,aAAxB,iBACC,gCAAC,wBAAD;AACE,IAAA,IAAI,EAAE8D,UAAU,GAAG,QAAH,GAAc,QADhC;AAEE,IAAA,KAAK,EACH,CAACJ,qBAAqB,IACpBC,mBADD,IAECM,iBAFD,IAGE1G,KAAK,CAAC4C,SAAN,KAAoB,2BAApB,IACC5C,KAAK,CAAC0E,IAAN,KAAe,GADhB,IAEC,CAAC8B,4BALL,KAMA,CAACD,UAND,GAOI,SAPJ,GAQI,SAXR;AAaE,IAAA,OAAO,EAAE,iBAAAoD,CAAC;AAAA,aAAID,YAAY,CAACC,CAAD,EAAI,IAAJ,CAAhB;AAAA,KAbZ;AAcE,IAAA,IAAI,EACDtD,mBAAmB,IAClB,CAACG,4BADF,IAECxG,KAAK,CAAC0E,IAAN,KAAe,GAFjB,IAGC1E,KAAK,CAAC4C,SAAN,KAAoB,2BAApB,IACC4D,4BAJF,IAKCA,4BAA4B,IAAIxG,KAAK,CAAC0E,IAAN,KAAe;AApBpD,KAuBGkD,sBAAsB,EAvBzB,CApEJ,CANF,CADF,CApOJ,CA9DF,CADF,eA+YE,gCAAC,gCAAD;AACE,IAAA,MAAM,EAAE1H,gBADV;AAEE,IAAA,SAAS,EAAEuJ,mCAFb;AAGE,IAAA,WAAW,EAAEb,kBAHf;AAIE,IAAA,gBAAgB,EAAC,QAJnB;AAKE,IAAA,OAAO,EAAE;AACP2B,MAAAA,OAAO,EAAE,yBAAQ,oCAAR,CADF;AAEP4D,MAAAA,aAAa,EAAE,yBAAQ,2CAAR,CAFR;AAGPC,MAAAA,OAAO,EAAE,yBAAQ,2CAAR;AAHF;AALX,IA/YF,CADF;AA6ZD,CA55CD;;eA85CetO,S","sourcesContent":["import React, { useCallback, useEffect, useReducer, useRef, useState } from 'react';\nimport {\n  HeaderModal,\n  HeaderModalTitle,\n  Modal,\n  ModalBody,\n  ModalFooter,\n  ModalForm,\n  PopUpWarning,\n  getYupInnerErrors,\n  useGlobalContext,\n  useQuery,\n  InputsIndex,\n} from 'strapi-helper-plugin';\nimport { Button, Text, Padded } from '@buffetjs/core';\nimport { Inputs } from '@buffetjs/custom';\n\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { FormattedMessage } from 'react-intl';\nimport { get, has, isEmpty, set, toLower, toString, upperFirst } from 'lodash';\nimport pluginId from '../../pluginId';\nimport useDataManager from '../../hooks/useDataManager';\nimport AttributeOption from '../../components/AttributeOption';\nimport BooleanBox from '../../components/BooleanBox';\nimport ComponentIconPicker from '../../components/ComponentIconPicker';\nimport CustomCheckbox from '../../components/CustomCheckbox';\nimport ModalHeader from '../../components/ModalHeader';\nimport HeaderModalNavContainer from '../../components/HeaderModalNavContainer';\nimport RelationForm from '../../components/RelationForm';\nimport HeaderNavLink from '../../components/HeaderNavLink';\nimport WrapperSelect from '../../components/WrapperSelect';\nimport getTrad from '../../utils/getTrad';\nimport makeSearch from '../../utils/makeSearch';\nimport getAttributes from './utils/attributes';\nimport forms from './utils/forms';\nimport createHeadersArray from './utils/createHeadersArray';\nimport createHeadersObjectFromArray from './utils/createHeadersObjectFromArray';\nimport { createComponentUid, createUid } from './utils/createUid';\nimport getModalTitleSubHeader from './utils/getModalTitleSubHeader';\nimport getNextSearch from './utils/getNextSearch';\nimport { NAVLINKS, INITIAL_STATE_DATA } from './utils/staticData';\nimport init from './init';\nimport reducer, { initialState } from './reducer';\nimport CustomButton from './CustomButton';\nimport canEditContentType from './utils/canEditContentType';\n\n/* eslint-disable indent */\n/* eslint-disable react/no-array-index-key */\n\nconst FormModal = () => {\n  const [state, setState] = useState(INITIAL_STATE_DATA);\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\n  const [reducerState, dispatch] = useReducer(reducer, initialState, init);\n  const { push } = useHistory();\n  const { search } = useLocation();\n  const { emitEvent, formatMessage } = useGlobalContext();\n  const query = useQuery();\n  const attributeOptionRef = useRef();\n\n  const {\n    addAttribute,\n    addCreatedComponentToDynamicZone,\n    allComponentsCategories,\n    changeDynamicZoneComponents,\n    contentTypes,\n    components,\n    createSchema,\n    deleteCategory,\n    deleteData,\n    editCategory,\n    submitData,\n    modifiedData: allDataSchema,\n    nestedComponents,\n    setModifiedData,\n    sortedContentTypesList,\n    updateSchema,\n    reservedNames,\n  } = useDataManager();\n  const {\n    componentToCreate,\n    formErrors,\n    initialData,\n    isCreatingComponentWhileAddingAField,\n    modifiedData,\n  } = reducerState.toJS();\n\n  useEffect(() => {\n    if (!isEmpty(search)) {\n      const actionType = query.get('actionType');\n      // Returns 'null' if there isn't any attributeType search params\n      const attributeName = query.get('attributeName');\n      const attributeType = query.get('attributeType');\n      const dynamicZoneTarget = query.get('dynamicZoneTarget');\n      const forTarget = query.get('forTarget');\n      const modalType = query.get('modalType');\n      const kind = query.get('kind') || get(allDataSchema, ['contentType', 'schema', 'kind'], null);\n      const targetUid = query.get('targetUid');\n      const settingType = query.get('settingType');\n      const headerId = query.get('headerId');\n      const header_label_1 = query.get('header_label_1');\n      const header_icon_name_1 = query.get('header_icon_name_1');\n      const header_icon_isCustom_1 = query.get('header_icon_isCustom_1');\n      const header_info_category_1 = query.get('header_info_category_1');\n      const header_info_name_1 = query.get('header_info_name_1');\n      const header_label_2 = query.get('header_label_2');\n      const header_icon_name_2 = query.get('header_icon_name_2');\n      const header_icon_isCustom_2 = query.get('header_icon_isCustom_2');\n      const header_info_category_2 = query.get('header_info_category_2');\n      const header_info_name_2 = query.get('header_info_name_2');\n      const header_label_3 = query.get('header_label_3');\n      const header_icon_name_3 = query.get('header_icon_name_3');\n      const header_icon_isCustom_3 = query.get('header_icon_isCustom_3');\n      const header_info_category_3 = query.get('header_info_category_3');\n      const header_info_name_3 = query.get('header_info_name_3');\n      const header_label_4 = query.get('header_label_4');\n      const header_icon_name_4 = query.get('header_icon_name_4');\n      const header_icon_isCustom_4 = query.get('header_icon_isCustom_4');\n      const header_info_category_4 = query.get('header_info_category_4');\n      const header_info_name_4 = query.get('header_info_name_4');\n      const header_label_5 = query.get('header_label_5');\n      const header_icon_name_5 = query.get('header_icon_name_5');\n      const header_icon_isCustom_5 = query.get('header_icon_isCustom_5');\n      const header_info_category_5 = query.get('header_info_category_5');\n      const header_info_name_5 = query.get('header_info_name_5');\n      const step = query.get('step');\n      const pathToSchema =\n        forTarget === 'contentType' || forTarget === 'component'\n          ? [forTarget]\n          : [forTarget, targetUid];\n\n      setState({\n        actionType,\n        attributeName,\n        attributeType,\n        kind,\n        dynamicZoneTarget,\n        forTarget,\n        modalType,\n        pathToSchema,\n        settingType,\n        step,\n        targetUid,\n        header_label_1,\n        header_icon_name_1,\n        header_icon_isCustom_1,\n        header_info_name_1,\n        header_info_category_1,\n        header_label_2,\n        header_icon_name_2,\n        header_icon_isCustom_2,\n        header_info_name_2,\n        header_info_category_2,\n        header_label_3,\n        header_icon_name_3,\n        header_icon_isCustom_3,\n        header_info_name_3,\n        header_info_category_3,\n        header_label_4,\n        header_icon_name_4,\n        header_icon_isCustom_4,\n        header_info_name_4,\n        header_info_category_4,\n        header_label_5,\n        header_icon_name_5,\n        header_icon_isCustom_5,\n        header_info_name_5,\n        header_info_category_5,\n        headerId,\n      });\n\n      const collectionTypesForRelation = sortedContentTypesList.filter(\n        ({ kind }) => kind === 'collectionType'\n      );\n\n      // Reset all the modification when opening the edit category modal\n      if (modalType === 'editCategory') {\n        setModifiedData();\n      }\n\n      if (actionType === 'edit' && modalType === 'attribute' && forTarget === 'contentType') {\n        emitEvent('willEditFieldOfContentType');\n      }\n\n      // Case:\n      // the user opens the modal chooseAttributes\n      // selects dynamic zone => set the field name\n      // then goes to step 1 (the modal is addComponentToDynamicZone) and finally reloads the app.\n      // In this particular if the user tries to add components to the zone it will pop an error since the dz is unknown\n      const shouldCloseModalToPreventErrorWhenCreatingADZ =\n        get(allDataSchema, [...pathToSchema, 'schema', 'attributes', dynamicZoneTarget], null) ===\n          null && modalType === 'addComponentToDynamicZone';\n\n      // Similarly when creating a component on the fly if the user reloads the app\n      // The previous data is lost\n      // Since the modal uses the search it will still be opened\n      const shouldCloseModalChooseAttribute =\n        get(allDataSchema, ['components', targetUid], null) === null &&\n        // modalType === 'chooseAttribute' &&\n        forTarget === 'components';\n\n      if (shouldCloseModalToPreventErrorWhenCreatingADZ || shouldCloseModalChooseAttribute) {\n        push({ search: '' });\n      }\n\n      // Edit category\n      if (modalType === 'editCategory' && actionType === 'edit') {\n        dispatch({\n          type: 'SET_DATA_TO_EDIT',\n          data: {\n            name: query.get('categoryName'),\n          },\n        });\n      }\n\n      // Create content type we need to add the default option draftAndPublish\n      if (\n        modalType === 'contentType' &&\n        state.modalType !== 'contentType' && // Prevent setting the data structure when navigating from one tab to another\n        actionType === 'create'\n      ) {\n        dispatch({\n          type: 'SET_DATA_TO_EDIT',\n          data: {\n            draftAndPublish: true,\n          },\n        });\n      }\n\n      // Edit content type\n      if (\n        modalType === 'contentType' &&\n        state.modalType !== 'contentType' &&\n        actionType === 'edit'\n      ) {\n        const { name, collectionName, draftAndPublish, kind } = get(\n          allDataSchema,\n          [...pathToSchema, 'schema'],\n          {\n            name: null,\n            collectionName: null,\n          }\n        );\n\n        dispatch({\n          type: 'SET_DATA_TO_EDIT',\n          data: {\n            name,\n            collectionName,\n            draftAndPublish,\n            kind,\n          },\n        });\n      }\n\n      // Edit component\n      if (modalType === 'component' && state.modalType !== 'component' && actionType === 'edit') {\n        const data = get(allDataSchema, pathToSchema, {});\n\n        dispatch({\n          type: 'SET_DATA_TO_EDIT',\n          data: {\n            name: data.schema.name,\n            category: data.category,\n            icon: data.schema.icon,\n            collectionName: data.schema.collectionName,\n          },\n        });\n      }\n\n      // Special case for the dynamic zone\n      if (\n        modalType === 'addComponentToDynamicZone' &&\n        state.modalType !== 'addComponentToDynamicZone' &&\n        actionType === 'edit'\n      ) {\n        const attributeToEditNotFormatted = get(\n          allDataSchema,\n          [...pathToSchema, 'schema', 'attributes', dynamicZoneTarget],\n          {}\n        );\n        const attributeToEdit = {\n          ...attributeToEditNotFormatted,\n          // We filter the available components\n          // Because this modal is only used for adding components\n          components: [],\n          name: dynamicZoneTarget,\n          createComponent: false,\n          componentToCreate: { type: 'component' },\n        };\n\n        dispatch({\n          type: 'SET_DYNAMIC_ZONE_DATA_SCHEMA',\n          attributeToEdit,\n        });\n      }\n\n      // Set the predefined data structure to create an attribute\n      if (\n        attributeType &&\n        attributeType !== 'null' &&\n        // This condition is added to prevent the reducer state to be cleared when navigating from the base tab to tha advanced one\n        state.modalType !== 'attribute'\n      ) {\n        const attributeToEditNotFormatted = get(\n          allDataSchema,\n          [...pathToSchema, 'schema', 'attributes', attributeName],\n          {}\n        );\n        const attributeToEdit = {\n          ...attributeToEditNotFormatted,\n          name: attributeName,\n        };\n\n        // We need to set the repeatable key to false when editing a component\n        // The API doesn't send this info\n        if (attributeType === 'component' && actionType === 'edit') {\n          if (!attributeToEdit.repeatable) {\n            set(attributeToEdit, 'repeatable', false);\n          }\n        }\n\n        if (attributeType === 'relation' && !has(attributeToEdit, ['targetAttribute'])) {\n          set(attributeToEdit, ['targetAttribute'], '-');\n        }\n\n        dispatch({\n          type: 'SET_ATTRIBUTE_DATA_SCHEMA',\n          attributeType,\n          nameToSetForRelation: get(collectionTypesForRelation, ['0', 'title'], 'error'),\n          targetUid: get(collectionTypesForRelation, ['0', 'uid'], 'error'),\n          isEditing: actionType === 'edit',\n          modifiedDataToSetForEditing: attributeToEdit,\n          step,\n        });\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [search]);\n\n  const form = get(forms, [state.modalType, 'form', state.settingType], () => ({\n    items: [],\n  }));\n  const headers = createHeadersArray(state);\n\n  const isCreatingContentType = state.modalType === 'contentType';\n  const isCreatingComponent = state.modalType === 'component';\n  const isCreatingAttribute = state.modalType === 'attribute';\n  const isComponentAttribute = state.attributeType === 'component' && isCreatingAttribute;\n\n  const isCreating = state.actionType === 'create';\n  const isCreatingComponentFromAView =\n    get(modifiedData, 'createComponent', false) || isCreatingComponentWhileAddingAField;\n  const isInFirstComponentStep = state.step === '1';\n  const isEditingCategory = state.modalType === 'editCategory';\n  const isOpen = !isEmpty(search);\n  const isPickingAttribute = state.modalType === 'chooseAttribute';\n  const uid = createUid(modifiedData.name || '');\n  const attributes = get(allDataSchema, [...state.pathToSchema, 'schema', 'attributes'], null);\n\n  const checkFormValidity = async () => {\n    let schema;\n    const dataToValidate =\n      isCreatingComponentFromAView && state.step === '1'\n        ? get(modifiedData, 'componentToCreate', {})\n        : modifiedData;\n\n    // Check form validity for content type\n    if (isCreatingContentType) {\n      schema = forms.contentType.schema(\n        Object.keys(contentTypes),\n        state.actionType === 'edit',\n        // currentUID\n        get(allDataSchema, [...state.pathToSchema, 'uid'], null),\n        reservedNames\n      );\n\n      // Check form validity for component\n      // This is happening when the user click on the link from the left menu\n    } else if (isCreatingComponent) {\n      schema = forms.component.schema(\n        Object.keys(components),\n        modifiedData.category || '',\n        reservedNames,\n        state.actionType === 'edit',\n        get(allDataSchema, [...state.pathToSchema, 'uid'], null)\n      );\n\n      // Check for validity for creating a component\n      // This is happening when the user creates a component \"on the fly\"\n      // Since we temporarily store the component info in another object\n      // The data is set in the componentToCreate key\n    } else if (isComponentAttribute && isCreatingComponentFromAView && isInFirstComponentStep) {\n      schema = forms.component.schema(\n        Object.keys(components),\n        get(modifiedData, 'componentToCreate.category', ''),\n        reservedNames\n      );\n\n      // Check form validity for creating a 'common attribute'\n      // We need to make sure that it is independent from the step\n    } else if (isCreatingAttribute && !isInFirstComponentStep) {\n      const type = state.attributeType === 'relation' ? 'relation' : modifiedData.type;\n\n      let alreadyTakenTargetContentTypeAttributes = [];\n\n      if (type === 'relation') {\n        const targetContentTypeUID = get(modifiedData, ['target'], null);\n        const targetContentTypeAttributes = get(\n          contentTypes,\n          [targetContentTypeUID, 'schema', 'attributes'],\n          {}\n        );\n\n        // Create an array with all the targetContentType attributes name\n        // in order to prevent the user from creating a relation with a targetAttribute\n        // that may exist in the other content type\n        alreadyTakenTargetContentTypeAttributes = Object.keys(targetContentTypeAttributes).filter(\n          attrName => {\n            // Keep all the target content type attributes when creating a relation\n            if (state.actionType !== 'edit') {\n              return true;\n            }\n\n            // Remove the already created one when editing\n            return attrName !== initialData.targetAttribute;\n          }\n        );\n      }\n      schema = forms[state.modalType].schema(\n        get(allDataSchema, state.pathToSchema, {}),\n        type,\n        modifiedData,\n        state.actionType === 'edit',\n        state.attributeName,\n        initialData,\n        alreadyTakenTargetContentTypeAttributes,\n        reservedNames\n      );\n    } else if (isEditingCategory) {\n      schema = forms.editCategory.schema(allComponentsCategories, initialData);\n    } else {\n      // The user is either in the addComponentToDynamicZone modal or\n      // in step 1 of the add component (modalType=attribute&attributeType=component) but not creating a component\n\n      // eslint-disable-next-line no-lonely-if\n      if (isInFirstComponentStep && isCreatingComponentFromAView) {\n        schema = forms.component.schema(\n          Object.keys(components),\n          get(modifiedData, 'componentToCreate.category', ''),\n          reservedNames\n        );\n      } else {\n        // The form is valid\n        // The case here is being in the addComponentToDynamicZone modal and not creating a component\n        return;\n      }\n    }\n\n    await schema.validate(dataToValidate, { abortEarly: false });\n  };\n\n  // TODO this should be a util for testing\n  const getButtonSubmitMessage = () => {\n    const { attributeType, modalType } = state;\n    const isCreatingAComponent = get(modifiedData, 'createComponent', false);\n    let tradId;\n\n    switch (modalType) {\n      case 'contentType':\n      case 'component':\n      case 'editCategory':\n        tradId = !isCreating ? getTrad('form.button.finish') : getTrad('form.button.continue');\n        break;\n      case 'addComponentToDynamicZone': {\n        tradId = isCreatingAComponent\n          ? getTrad('form.button.add-first-field-to-created-component')\n          : getTrad('form.button.finish');\n        break;\n      }\n      case 'attribute': {\n        if (attributeType === 'dynamiczone') {\n          tradId = getTrad('form.button.add-components-to-dynamiczone');\n        } else if (attributeType === 'component') {\n          if (isInFirstComponentStep) {\n            tradId = isCreatingAComponent\n              ? getTrad('form.button.configure-component')\n              : getTrad('form.button.select-component');\n          } else {\n            tradId = isCreatingComponentWhileAddingAField\n              ? getTrad('form.button.add-first-field-to-created-component')\n              : getTrad('form.button.add-field');\n          }\n        } else {\n          tradId = getTrad('form.button.add-field');\n        }\n        break;\n      }\n      default:\n        tradId = getTrad('form.button.add-field');\n    }\n\n    return formatMessage({ id: tradId });\n  };\n\n  // TODO remove and use the utils/makeSearch\n  const makeNextSearch = (searchObj, shouldContinue = isCreating) => {\n    if (!shouldContinue) {\n      return '';\n    }\n\n    return Object.keys(searchObj).reduce((acc, current, index) => {\n      if (searchObj[current] !== null) {\n        acc = `${acc}${index === 0 ? '' : '&'}${current}=${searchObj[current]}`;\n      }\n\n      return acc;\n    }, '');\n  };\n\n  const handleClickAddComponentsToDynamicZone = ({\n    target: { name, components, shouldAddComponents },\n  }) => {\n    dispatch({\n      type: 'ADD_COMPONENTS_TO_DYNAMIC_ZONE',\n      name,\n      components,\n      shouldAddComponents,\n    });\n  };\n\n  const handleChangeMediaAllowedTypes = ({ target: { name, value } }) => {\n    dispatch({\n      type: 'ON_CHANGE_ALLOWED_TYPE',\n      name,\n      value,\n    });\n  };\n\n  const toggleConfirmModal = useCallback(() => setShowConfirmModal(prev => !prev), []);\n\n  const handleChange = useCallback(\n    ({ target: { name, value, type, ...rest } }) => {\n      const namesThatCanResetToNullValue = [\n        'enumName',\n        'max',\n        'min',\n        'maxLength',\n        'minLength',\n        'regex',\n      ];\n\n      // When toggling the draftAndPublish from true to false\n      // We need to display a confirmation box\n      if (name === 'draftAndPublish' && state.actionType === 'edit' && value === false) {\n        toggleConfirmModal();\n\n        return;\n      }\n\n      let val;\n\n      if (['default', ...namesThatCanResetToNullValue].includes(name) && value === '') {\n        val = null;\n      } else if (\n        type === 'radio' &&\n        (name === 'multiple' ||\n          name === 'single' ||\n          name === 'createComponent' ||\n          name === 'repeatable')\n      ) {\n        // eslint-disable-next-line no-unneeded-ternary\n        val = value === 'false' ? false : true;\n\n        // The boolean default accepts 3 different values\n        // This check has been added to allow a reset to null for the bool\n      } else if (type === 'radio' && name === 'default') {\n        if (value === 'false') {\n          val = false;\n        } else if (value === 'true') {\n          val = true;\n        } else {\n          val = null;\n        }\n\n        // We store an array for the enum\n      } else if (name === 'enum') {\n        val = value.split('\\n');\n      } else {\n        val = value;\n      }\n\n      const clonedErrors = Object.assign({}, formErrors);\n\n      // Reset min error when modifying the max\n      if (name === 'max') {\n        delete clonedErrors.min;\n      }\n\n      // Same here\n      if (name === 'maxLength') {\n        delete clonedErrors.minLength;\n      }\n\n      // Since the onBlur is deactivated we remove the errors directly when changing an input\n      delete clonedErrors[name];\n\n      dispatch({\n        type: 'SET_ERRORS',\n        errors: clonedErrors,\n      });\n\n      dispatch({\n        type: 'ON_CHANGE',\n        keys: name.split('.'),\n        value: val,\n        ...rest,\n      });\n    },\n    [formErrors, state.actionType, toggleConfirmModal]\n  );\n\n  const handleConfirmDisableDraftAndPublish = useCallback(() => {\n    dispatch({\n      type: 'ON_CHANGE',\n      keys: ['draftAndPublish'],\n      value: false,\n    });\n\n    toggleConfirmModal();\n  }, [toggleConfirmModal]);\n\n  const handleSubmit = async (e, shouldContinue = isCreating) => {\n    e.preventDefault();\n\n    try {\n      await checkFormValidity();\n      sendButtonAddMoreFieldEvent(shouldContinue);\n      const targetUid = state.forTarget === 'components' ? state.targetUid : uid;\n      let headerIcon;\n\n      if (state.forTarget === 'contentType') {\n        const currentKind = get(allDataSchema, ['contentType', 'schema', 'kind'], 'contentType');\n\n        headerIcon = state.kind || currentKind;\n      } else if (state.forTarget === 'component') {\n        headerIcon = 'component';\n      } else {\n        headerIcon = get(allDataSchema, ['components', state.targetUid, 'schema', 'icon'], '');\n      }\n\n      // Remove the last header when editing\n      if (state.actionType === 'edit') {\n        headers.pop();\n      }\n\n      const headersObject = createHeadersObjectFromArray(headers);\n      const nextHeaderIndex = headers.length + 1;\n\n      if (isCreatingContentType) {\n        // Create the content type schema\n        if (isCreating) {\n          createSchema({ ...modifiedData, kind: state.kind }, state.modalType, uid);\n        } else {\n          if (canEditContentType(allDataSchema, modifiedData)) {\n            push({ search: '' });\n            submitData(modifiedData);\n          } else {\n            strapi.notification.toggle({\n              type: 'warning',\n              message: { id: 'notification.contentType.relations.conflict' },\n            });\n          }\n\n          return;\n        }\n\n        push({\n          pathname: `/plugins/${pluginId}/content-types/${uid}`,\n          search: makeNextSearch({\n            modalType: 'chooseAttribute',\n            forTarget: state.forTarget,\n            targetUid,\n            header_label_1: modifiedData.name,\n            header_icon_name_1: headerIcon,\n            header_icon_isCustom_1: null,\n          }),\n        });\n      } else if (isCreatingComponent) {\n        if (isCreating) {\n          // Create the component schema\n          const componentUid = createComponentUid(modifiedData.name, modifiedData.category);\n          const { category, ...rest } = modifiedData;\n\n          createSchema(rest, 'component', componentUid, category);\n\n          push({\n            search: makeNextSearch({\n              modalType: 'chooseAttribute',\n              forTarget: state.forTarget,\n              targetUid: componentUid,\n              header_label_1: modifiedData.name,\n              header_icon_name_1: 'contentType',\n              header_icon_isCustom_1: null,\n            }),\n            pathname: `/plugins/${pluginId}/component-categories/${category}/${componentUid}`,\n          });\n        } else {\n          updateSchema(modifiedData, state.modalType, state.targetUid);\n\n          // Close the modal\n          push({ search: '' });\n\n          return;\n        }\n      } else if (isEditingCategory) {\n        if (toLower(initialData.name) === toLower(modifiedData.name)) {\n          // Close the modal\n          push({ search: '' });\n\n          return;\n        }\n\n        editCategory(initialData.name, modifiedData);\n\n        return;\n        // Add/edit a field to a content type\n        // Add/edit a field to a created component (the end modal is not step 2)\n      } else if (isCreatingAttribute && !isCreatingComponentFromAView) {\n        // Normal fields like boolean relations or dynamic zone\n        if (!isComponentAttribute) {\n          addAttribute(\n            modifiedData,\n            state.forTarget,\n            state.targetUid,\n            state.actionType === 'edit',\n            initialData\n          );\n\n          const isDynamicZoneAttribute = state.attributeType === 'dynamiczone';\n          // Adding a component to a dynamiczone is not the same logic as creating a simple field\n          // so the search is different\n\n          const dzSearch = makeNextSearch({\n            modalType: 'addComponentToDynamicZone',\n            forTarget: 'contentType',\n            targetUid: state.targetUid,\n\n            dynamicZoneTarget: modifiedData.name,\n            settingType: 'base',\n            step: '1',\n            actionType: 'create',\n            ...headersObject,\n            header_label_2: modifiedData.name,\n            header_icon_name_2: null,\n            header_icon_isCustom_2: false,\n          });\n          const nextSearch = isDynamicZoneAttribute\n            ? dzSearch\n            : makeNextSearch(\n                {\n                  modalType: 'chooseAttribute',\n                  forTarget: state.forTarget,\n                  targetUid,\n                  ...headersObject,\n                  header_icon_isCustom_1: !['contentType', 'component'].includes(state.forTarget),\n                  header_icon_name_1: headerIcon,\n                },\n                shouldContinue\n              );\n\n          // The user is creating a DZ (he had entered the name of the dz)\n          if (isDynamicZoneAttribute) {\n            // Step 1 of adding a component to a DZ, the user has the option to create a component\n            dispatch({\n              type: 'RESET_PROPS_AND_SET_THE_FORM_FOR_ADDING_A_COMPO_TO_A_DZ',\n            });\n\n            push({ search: isCreating ? nextSearch : '' });\n\n            return;\n          }\n\n          push({ search: nextSearch });\n\n          return;\n\n          // Adding an existing component\n        }\n        // eslint-disable-next-line no-lonely-if\n        if (isInFirstComponentStep) {\n          // Navigate the user to step 2\n          const nextSearchObj = {\n            modalType: 'attribute',\n            actionType: state.actionType,\n            settingType: 'base',\n            forTarget: state.forTarget,\n            targetUid: state.targetUid,\n            attributeType: 'component',\n            step: '2',\n            ...headersObject,\n            header_icon_isCustom_1: !['contentType', 'component'].includes(state.forTarget),\n            header_icon_name_1: headerIcon,\n          };\n\n          push({\n            search: makeNextSearch(nextSearchObj, shouldContinue),\n          });\n\n          // Clear the reducer and prepare the modified data\n          // This way we don't have to add some logic to re-run the useEffect\n          // The first step is either needed to create a component or just to navigate\n          // To the modal for adding a \"common field\"\n          dispatch({\n            type: 'RESET_PROPS_AND_SET_FORM_FOR_ADDING_AN_EXISTING_COMPO',\n          });\n\n          // We don't want all the props to be reset\n          return;\n\n          // Here we are in step 2\n          // The step 2 is also use to edit an attribute that is a component\n        }\n        addAttribute(\n          modifiedData,\n          state.forTarget,\n          state.targetUid,\n          // This change the dispatched type\n          // either 'EDIT_ATTRIBUTE' or 'ADD_ATTRIBUTE' in the DataManagerProvider\n          state.actionType === 'edit',\n          // This is for the edit part\n          initialData,\n          // Passing true will add the component to the components object\n          // This way we can add fields to the added component (if it wasn't there already)\n          true\n        );\n        const nextSearch = {\n          modalType: 'chooseAttribute',\n          forTarget: state.forTarget,\n          targetUid: state.targetUid,\n          ...headersObject,\n          header_icon_isCustom_1: !['contentType', 'component'].includes(state.forTarget),\n          header_icon_name_1: headerIcon,\n        };\n\n        push({ search: makeSearch(nextSearch, shouldContinue) });\n\n        // We don't need to end the loop here we want the reducer to be reinitialised\n\n        // Logic for creating a component without clicking on the link in\n        // the left menu\n        // We need to separate the logic otherwise the component would be created\n        // even though the user didn't set any field\n        // We need to prevent the component from being created if the user closes the modal at step 2 without any submission\n      } else if (isCreatingAttribute && isCreatingComponentFromAView) {\n        // Step 1\n        if (isInFirstComponentStep) {\n          // Here the search could be refactored since it is the same as the case from above\n          // Navigate the user to step 2\n\n          let searchObj = {\n            modalType: 'attribute',\n            actionType: state.actionType,\n            settingType: 'base',\n            forTarget: state.forTarget,\n            targetUid: state.targetUid,\n            attributeType: 'component',\n            step: '2',\n            ...headersObject,\n            header_icon_isCustom_1: false,\n            header_icon_name_1: 'component',\n          };\n\n          emitEvent('willCreateComponentFromAttributesModal');\n\n          push({\n            search: makeNextSearch(searchObj, shouldContinue),\n          });\n\n          // Here we clear the reducer state but we also keep the created component\n          // If we were to create the component before\n          dispatch({\n            type: 'RESET_PROPS_AND_SAVE_CURRENT_DATA',\n          });\n\n          // Terminate because we don't want the reducer to be entirely reset\n          return;\n\n          // Step 2 of creating a component (which is setting the attribute name in the parent's schema)\n        }\n        // We are destructuring because the modifiedData object doesn't have the appropriate format to create a field\n        const { category, type, ...rest } = componentToCreate;\n        // Create a the component temp UID\n        // This could be refactored but I think it's more understandable to separate the logic\n        const componentUid = createComponentUid(componentToCreate.name, category);\n        // Create the component first and add it to the components data\n        createSchema(\n          // Component data\n          rest,\n          // Type will always be component\n          // It will dispatch the CREATE_COMPONENT_SCHEMA action\n          // So the component will be added in the main components object\n          // This might not be needed if we don't allow navigation between entries while editing\n          type,\n          componentUid,\n          category,\n          // This will add the created component in the datamanager modifiedData components key\n          // Like explained above we will be able to modify the created component structure\n          isCreatingComponentFromAView\n        );\n        // Add the field to the schema\n        addAttribute(modifiedData, state.forTarget, state.targetUid, false);\n\n        dispatch({ type: 'RESET_PROPS' });\n\n        // Open modal attribute for adding attr to component\n\n        const searchToOpenModalAttributeToAddAttributesToAComponent = {\n          modalType: 'chooseAttribute',\n          forTarget: 'components',\n          targetUid: componentUid,\n          ...headersObject,\n          header_icon_isCustom_1: true,\n          header_icon_name_1: componentToCreate.icon,\n          [`header_label_${nextHeaderIndex}`]: modifiedData.name,\n          [`header_icon_name_${nextHeaderIndex}`]: 'component',\n          [`header_icon_isCustom_${nextHeaderIndex}`]: false,\n          [`header_info_category_${nextHeaderIndex}`]: category,\n          [`header_info_name_${nextHeaderIndex}`]: componentToCreate.name,\n        };\n\n        push({\n          search: makeNextSearch(\n            searchToOpenModalAttributeToAddAttributesToAComponent,\n            shouldContinue\n          ),\n        });\n\n        return;\n\n        // The modal is addComponentToDynamicZone\n      } else {\n        // The modal is addComponentToDynamicZone\n        if (isInFirstComponentStep) {\n          if (isCreatingComponentFromAView) {\n            const { category, type, ...rest } = modifiedData.componentToCreate;\n            const componentUid = createComponentUid(modifiedData.componentToCreate.name, category);\n            // Create the component first and add it to the components data\n            createSchema(\n              // Component data\n              rest,\n              // Type will always be component\n              // It will dispatch the CREATE_COMPONENT_SCHEMA action\n              // So the component will be added in the main components object\n              // This might not be needed if we don't allow navigation between entries while editing\n              type,\n              componentUid,\n              category,\n              // This will add the created component in the datamanager modifiedData components key\n              // Like explained above we will be able to modify the created component structure\n              isCreatingComponentFromAView\n            );\n            // Add the created component to the DZ\n            // We don't want to remove the old ones\n            addCreatedComponentToDynamicZone(state.dynamicZoneTarget, [componentUid]);\n\n            // The Dynamic Zone and the component is created created\n            // Open the modal to add fields to the created component\n\n            const searchToOpenAddField = {\n              modalType: 'chooseAttribute',\n              forTarget: 'components',\n              targetUid: componentUid,\n              ...headersObject,\n              header_icon_isCustom_1: true,\n              header_icon_name_1: modifiedData.componentToCreate.icon,\n              [`header_label_${nextHeaderIndex}`]: modifiedData.name,\n              [`header_icon_name_${nextHeaderIndex}`]: 'component',\n              [`header_icon_isCustom_${nextHeaderIndex}`]: false,\n              [`header_info_category_${nextHeaderIndex}`]: category,\n              [`header_info_name_${nextHeaderIndex}`]: modifiedData.componentToCreate.name,\n            };\n\n            push({ search: makeSearch(searchToOpenAddField, true) });\n          } else {\n            // Add the components to the DZ\n            changeDynamicZoneComponents(state.dynamicZoneTarget, modifiedData.components);\n\n            // TODO nav\n            // Search to open modal add fields for the main type (content type)\n            push({ search: '' });\n          }\n        } else {\n          console.error('This case is not handled');\n        }\n\n        return;\n      }\n\n      dispatch({\n        type: 'RESET_PROPS',\n      });\n    } catch (err) {\n      const errors = getYupInnerErrors(err);\n\n      dispatch({\n        type: 'SET_ERRORS',\n        errors,\n      });\n    }\n  };\n  const handleToggle = () => {\n    push({ search: '' });\n  };\n\n  const onClosed = () => {\n    setState(INITIAL_STATE_DATA);\n    dispatch({\n      type: 'RESET_PROPS',\n    });\n  };\n  const onOpened = () => {\n    if (state.modalType === 'chooseAttribute') {\n      attributeOptionRef.current.focus();\n    }\n  };\n\n  const sendAdvancedTabEvent = tab => {\n    if (tab !== 'advanced') {\n      return;\n    }\n\n    if (isCreatingContentType) {\n      emitEvent('didSelectContentTypeSettings');\n\n      return;\n    }\n\n    if (state.forTarget === 'contentType') {\n      emitEvent('didSelectContentTypeFieldSettings');\n    }\n  };\n\n  const sendButtonAddMoreFieldEvent = shouldContinue => {\n    if (\n      state.modalType === 'attribute' &&\n      state.forTarget === 'contentType' &&\n      state.attributeType !== 'dynamiczone' &&\n      shouldContinue\n    ) {\n      emitEvent('willAddMoreFieldToContentType');\n    }\n  };\n\n  const shouldDisableAdvancedTab = () => {\n    return (\n      ((state.attributeType === 'component' || state.modalType === 'addComponentToDynamicZone') &&\n        get(modifiedData, ['createComponent'], null) === false) ||\n      state.modalType === 'editCategory'\n    );\n  };\n\n  // Display data for the attributes picker modal\n  const displayedAttributes = getAttributes(\n    state.forTarget,\n    state.targetUid,\n    // We need the nested components so we know when to remove the component option\n    nestedComponents\n  );\n\n  // Styles\n  const modalBodyStyle = isPickingAttribute ? { paddingTop: '0.5rem', paddingBottom: '3rem' } : {};\n\n  return (\n    <>\n      <Modal\n        isOpen={isOpen}\n        onOpened={onOpened}\n        onClosed={onClosed}\n        onToggle={handleToggle}\n        withoverflow={toString(\n          state.modalType === 'addComponentToDynamicZone' ||\n            (state.modalType === 'attribute' && state.attributeType === 'media')\n        )}\n      >\n        <HeaderModal>\n          <ModalHeader headerId={state.headerId} headers={headers} />\n          <section>\n            <HeaderModalTitle>\n              <FormattedMessage\n                id={getModalTitleSubHeader(state)}\n                values={{\n                  type: upperFirst(\n                    formatMessage({\n                      id: getTrad(`attribute.${state.attributeType}`),\n                    })\n                  ),\n                  name: upperFirst(state.attributeName),\n                  step: state.step,\n                }}\n              >\n                {msg => <span>{upperFirst(msg)}</span>}\n              </FormattedMessage>\n\n              {!isPickingAttribute && (\n                <>\n                  <div className=\"settings-tabs\">\n                    <HeaderModalNavContainer>\n                      {NAVLINKS.map((link, index) => {\n                        return (\n                          <HeaderNavLink\n                            // The advanced tab is disabled when adding an existing component\n                            // step 1\n                            isDisabled={index === 1 && shouldDisableAdvancedTab()}\n                            isActive={state.settingType === link.id}\n                            key={link.id}\n                            {...link}\n                            onClick={() => {\n                              setState(prev => ({\n                                ...prev,\n                                settingType: link.id,\n                              }));\n                              sendAdvancedTabEvent(link.id);\n                              push({ search: getNextSearch(link.id, state) });\n                            }}\n                            nextTab={index === NAVLINKS.length - 1 ? 0 : index + 1}\n                          />\n                        );\n                      })}\n                    </HeaderModalNavContainer>\n                  </div>\n                  <hr />\n                </>\n              )}\n            </HeaderModalTitle>\n          </section>\n        </HeaderModal>\n        <form onSubmit={handleSubmit}>\n          <ModalForm>\n            <ModalBody style={modalBodyStyle}>\n              <div className=\"container-fluid\">\n                {isPickingAttribute\n                  ? displayedAttributes.map((row, i) => {\n                      return (\n                        <div key={i} className=\"row\">\n                          {i === 1 && (\n                            <hr\n                              style={{\n                                width: 'calc(100% - 30px)',\n                                marginBottom: 16,\n                                marginTop: 19,\n                                borderColor: '#F0F3F8',\n                              }}\n                            />\n                          )}\n                          {row.map((attr, index) => {\n                            const tabIndex =\n                              i === 0 ? index : displayedAttributes[0].length + index;\n\n                            return (\n                              <AttributeOption\n                                key={attr}\n                                tabIndex={tabIndex}\n                                isDisplayed\n                                onClick={() => {}}\n                                ref={i === 0 && index === 0 ? attributeOptionRef : null}\n                                type={attr}\n                              />\n                            );\n                          })}\n                        </div>\n                      );\n                    })\n                  : form(\n                      modifiedData,\n                      state.attributeType,\n                      state.step,\n                      state.actionType,\n                      attributes\n                    ).items.map((row, index) => {\n                      return (\n                        <div className=\"row\" key={index}>\n                          {row.map((input, i) => {\n                            // The divider type is used mainly the advanced tab\n                            // It is the one responsible for displaying the settings label\n                            if (input.type === 'divider' || input.type === 'dividerDraftPublish') {\n                              const tradId =\n                                input.type === 'divider'\n                                  ? 'form.attribute.item.settings.name'\n                                  : 'form.contentType.divider.draft-publish';\n\n                              return (\n                                <div className=\"col-12\" key=\"divider\">\n                                  <Padded bottom size=\"smd\">\n                                    <div style={{ paddingTop: 3 }} />\n                                    <Text\n                                      fontSize=\"xs\"\n                                      color=\"grey\"\n                                      fontWeight=\"bold\"\n                                      textTransform=\"uppercase\"\n                                    >\n                                      <FormattedMessage id={getTrad(tradId)}>\n                                        {txt => txt}\n                                      </FormattedMessage>\n                                    </Text>\n                                  </Padded>\n                                </div>\n                              );\n                            }\n\n                            // The spacer type is used mainly to align the icon picker...\n                            if (input.type === 'spacer') {\n                              return <div key=\"spacer\" style={{ height: 8 }} />;\n                            }\n\n                            // The spacer type is used mainly to align the icon picker...\n                            if (input.type === 'spacer-small') {\n                              return <div key={`${index}.${i}`} style={{ height: 4 }} />;\n                            }\n\n                            if (input.type === 'spacer-medium') {\n                              return <div key={`${index}.${i}`} style={{ height: 8 }} />;\n                            }\n\n                            // This type is used in the addComponentToDynamicZone modal when selecting the option add an existing component\n                            // It pushes select the components to the right\n                            if (input.type === 'pushRight') {\n                              return <div key={`${index}.${i}`} className={`col-${input.size}`} />;\n                            }\n\n                            if (input.type === 'relation') {\n                              return (\n                                <RelationForm\n                                  key=\"relation\"\n                                  mainBoxHeader={get(headers, [0, 'label'], '')}\n                                  modifiedData={modifiedData}\n                                  naturePickerType={state.forTarget}\n                                  onChange={handleChange}\n                                  errors={formErrors}\n                                />\n                              );\n                            }\n\n                            // Retrieve the error for a specific input\n                            const errorId = get(\n                              formErrors,\n                              [\n                                ...input.name\n                                  .split('.')\n                                  // The filter here is used when creating a component\n                                  // in the component step 1 modal\n                                  // Since the component info is stored in the\n                                  // componentToCreate object we can access the error\n                                  // By removing the key\n                                  .filter(key => key !== 'componentToCreate'),\n                                'id',\n                              ],\n                              null\n                            );\n\n                            const retrievedValue = get(modifiedData, input.name, '');\n\n                            let value;\n\n                            // Condition for the boolean default value\n                            // The radio input doesn't accept false, true or null as value\n                            // So we pass them as string\n                            // This way the data stays accurate and we don't have to operate\n                            // any data mutation\n                            if (input.name === 'default' && state.attributeType === 'boolean') {\n                              value = toString(retrievedValue);\n                              // Same here for the enum\n                            } else if (input.name === 'enum' && Array.isArray(retrievedValue)) {\n                              value = retrievedValue.join('\\n');\n                            } else if (input.name === 'uid') {\n                              value = input.value;\n                            } else if (input.name === 'allowedTypes' && retrievedValue === '') {\n                              value = null;\n                            } else {\n                              value = retrievedValue;\n                            }\n\n                            // The addon input is not present in @buffetjs so we are using the old lib\n                            // for the moment that's why we don't want them be passed to buffet\n                            // like the other created inputs\n                            if (input.type === 'addon') {\n                              return (\n                                <InputsIndex\n                                  key={input.name}\n                                  {...input}\n                                  type=\"string\"\n                                  onChange={handleChange}\n                                  value={value}\n                                />\n                              );\n                            }\n\n                            return (\n                              <div className={`col-${input.size || 6}`} key={input.name}>\n                                <Inputs\n                                  {...input}\n                                  modifiedData={modifiedData}\n                                  addComponentsToDynamicZone={handleClickAddComponentsToDynamicZone}\n                                  changeMediaAllowedTypes={handleChangeMediaAllowedTypes}\n                                  customInputs={{\n                                    allowedTypesSelect: WrapperSelect,\n                                    componentIconPicker: ComponentIconPicker,\n                                    componentSelect: WrapperSelect,\n                                    creatableSelect: WrapperSelect,\n                                    customCheckboxWithChildren: CustomCheckbox,\n                                    booleanBox: BooleanBox,\n                                  }}\n                                  isCreating={isCreating}\n                                  // Props for the componentSelect\n                                  isCreatingComponentWhileAddingAField={\n                                    isCreatingComponentWhileAddingAField\n                                  }\n                                  // Props for the componentSelect\n                                  // Since the component is created after adding it to a type\n                                  // its name and category can't be retrieved from the data manager\n                                  componentCategoryNeededForAddingAfieldWhileCreatingAComponent={get(\n                                    componentToCreate,\n                                    'category',\n                                    null\n                                  )}\n                                  // Props for the componentSelect same explanation\n                                  componentNameNeededForAddingAfieldWhileCreatingAComponent={get(\n                                    componentToCreate,\n                                    'name',\n                                    null\n                                  )}\n                                  isAddingAComponentToAnotherComponent={\n                                    state.forTarget === 'components' ||\n                                    state.forTarget === 'component'\n                                  }\n                                  value={value}\n                                  error={isEmpty(errorId) ? null : formatMessage({ id: errorId })}\n                                  onChange={handleChange}\n                                  onBlur={() => {}}\n                                  description={\n                                    get(input, 'description.id', null)\n                                      ? formatMessage(input.description)\n                                      : input.description\n                                  }\n                                  placeholder={\n                                    get(input, 'placeholder.id', null)\n                                      ? formatMessage(input.placeholder)\n                                      : input.placeholder\n                                  }\n                                  label={\n                                    get(input, 'label.id', null)\n                                      ? formatMessage(input.label)\n                                      : input.label\n                                  }\n                                />\n                              </div>\n                            );\n                          })}\n                        </div>\n                      );\n                    })}\n              </div>\n            </ModalBody>\n          </ModalForm>\n          {!isPickingAttribute && (\n            <ModalFooter>\n              <section style={{ alignItems: 'center' }}>\n                <Button type=\"button\" color=\"cancel\" onClick={handleToggle}>\n                  {formatMessage({\n                    id: 'app.components.Button.cancel',\n                  })}\n                </Button>\n                <div>\n                  {isCreatingAttribute && !isInFirstComponentStep && (\n                    <Button\n                      type={isCreating ? 'button' : 'submit'}\n                      color=\"success\"\n                      onClick={e => {\n                        handleSubmit(e, false);\n                      }}\n                      style={{ marginRight: '10px' }}\n                    >\n                      {formatMessage({ id: 'form.button.finish' })}\n                    </Button>\n                  )}\n                  {(isCreatingContentType || isCreatingComponent) && !isCreating && (\n                    <Button\n                      type=\"button\"\n                      color=\"delete\"\n                      onClick={e => {\n                        e.preventDefault();\n                        deleteData();\n                      }}\n                      style={{ marginRight: '10px' }}\n                    >\n                      {formatMessage({ id: getTrad('form.button.delete') })}\n                    </Button>\n                  )}\n                  {isEditingCategory && (\n                    <Button\n                      type=\"button\"\n                      color=\"delete\"\n                      onClick={e => {\n                        e.preventDefault();\n\n                        deleteCategory(initialData.name);\n                      }}\n                      style={{ marginRight: '10px' }}\n                    >\n                      {formatMessage({ id: getTrad('form.button.delete') })}\n                    </Button>\n                  )}\n                  {isCreating && state.attributeType === 'dynamiczone' && (\n                    <CustomButton\n                      type={isCreating ? 'submit' : 'button'}\n                      color={\n                        (isCreatingContentType ||\n                          isCreatingComponent ||\n                          isEditingCategory ||\n                          (state.modalType === 'addComponentToDynamicZone' &&\n                            state.step === '1' &&\n                            !isCreatingComponentFromAView)) &&\n                        !isCreating\n                          ? 'success'\n                          : 'primary'\n                      }\n                      onClick={e => handleSubmit(e, true)}\n                      icon={\n                        (isCreatingAttribute &&\n                          !isCreatingComponentFromAView &&\n                          state.step !== '1') ||\n                        (state.modalType === 'addComponentToDynamicZone' &&\n                          isCreatingComponentFromAView) ||\n                        (isCreatingComponentFromAView && state.step === '2')\n                      }\n                    >\n                      {getButtonSubmitMessage()}\n                    </CustomButton>\n                  )}\n                  {state.attributeType !== 'dynamiczone' && (\n                    <CustomButton\n                      type={isCreating ? 'submit' : 'button'}\n                      color={\n                        (isCreatingContentType ||\n                          isCreatingComponent ||\n                          isEditingCategory ||\n                          (state.modalType === 'addComponentToDynamicZone' &&\n                            state.step === '1' &&\n                            !isCreatingComponentFromAView)) &&\n                        !isCreating\n                          ? 'success'\n                          : 'primary'\n                      }\n                      onClick={e => handleSubmit(e, true)}\n                      icon={\n                        (isCreatingAttribute &&\n                          !isCreatingComponentFromAView &&\n                          state.step !== '1') ||\n                        (state.modalType === 'addComponentToDynamicZone' &&\n                          isCreatingComponentFromAView) ||\n                        (isCreatingComponentFromAView && state.step === '2')\n                      }\n                    >\n                      {getButtonSubmitMessage()}\n                    </CustomButton>\n                  )}\n                </div>\n              </section>\n            </ModalFooter>\n          )}\n        </form>\n      </Modal>\n      {/* CONFIRM MODAL FOR DRAFT AND PUBLISH */}\n      <PopUpWarning\n        isOpen={showConfirmModal}\n        onConfirm={handleConfirmDisableDraftAndPublish}\n        toggleModal={toggleConfirmModal}\n        popUpWarningType=\"danger\"\n        content={{\n          message: getTrad('popUpWarning.draft-publish.message'),\n          secondMessage: getTrad('popUpWarning.draft-publish.second-message'),\n          confirm: getTrad('popUpWarning.draft-publish.button.confirm'),\n        }}\n      />\n    </>\n  );\n};\n\nexport default FormModal;\n"]},"metadata":{},"sourceType":"script"}