{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _components = require(\"./components\");\n\n/**\n *\n * CustomInputCheckbox\n */\nfunction CustomInputCheckbox(_ref) {\n  var entriesToDelete = _ref.entriesToDelete,\n      isAll = _ref.isAll,\n      name = _ref.name,\n      onChange = _ref.onChange,\n      value = _ref.value;\n  var shouldDisplaySomeChecked = isAll && entriesToDelete.length > 0 && !value;\n  var shouldDisplayAllChecked = isAll && value;\n  return /*#__PURE__*/_react[\"default\"].createElement(\"span\", {\n    className: \"form-check\",\n    styles: {\n      marginLeft: '-15px'\n    }\n  }, /*#__PURE__*/_react[\"default\"].createElement(_components.Label, {\n    className: \"form-check-label\",\n    isAll: isAll,\n    shouldDisplaySomeChecked: shouldDisplaySomeChecked,\n    shouldDisplayAllChecked: shouldDisplayAllChecked,\n    isChecked: value && !isAll,\n    htmlFor: name\n  }, /*#__PURE__*/_react[\"default\"].createElement(\"input\", {\n    className: \"form-check-input\",\n    checked: value,\n    id: name,\n    name: name,\n    onChange: onChange,\n    type: \"checkbox\"\n  })));\n}\n\nCustomInputCheckbox.defaultProps = {\n  entriesToDelete: [],\n  isAll: false,\n  name: '',\n  value: false\n};\nCustomInputCheckbox.propTypes = {\n  entriesToDelete: _propTypes[\"default\"].array,\n  isAll: _propTypes[\"default\"].bool,\n  name: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].number, _propTypes[\"default\"].string]),\n  onChange: _propTypes[\"default\"].func.isRequired,\n  value: _propTypes[\"default\"].bool\n};\n\nvar _default = /*#__PURE__*/(0, _react.memo)(CustomInputCheckbox);\n\nexports[\"default\"] = _default;","map":{"version":3,"sources":["D:/webstorm_projects/redcat_backend/.cache/plugins/strapi-plugin-content-manager/admin/src/components/CustomInputCheckbox/index.js"],"names":["CustomInputCheckbox","entriesToDelete","isAll","name","onChange","value","shouldDisplaySomeChecked","length","shouldDisplayAllChecked","marginLeft","defaultProps","propTypes","PropTypes","array","bool","oneOfType","number","string","func","isRequired"],"mappings":";;;;;;;;;;;AAKA;;AACA;;AACA;;AAPA;AACA;AACA;AACA;AAMA,SAASA,mBAAT,OAMG;AAAA,MALDC,eAKC,QALDA,eAKC;AAAA,MAJDC,KAIC,QAJDA,KAIC;AAAA,MAHDC,IAGC,QAHDA,IAGC;AAAA,MAFDC,QAEC,QAFDA,QAEC;AAAA,MADDC,KACC,QADDA,KACC;AACD,MAAMC,wBAAwB,GAC5BJ,KAAK,IAAID,eAAe,CAACM,MAAhB,GAAyB,CAAlC,IAAuC,CAACF,KAD1C;AAGA,MAAMG,uBAAuB,GAAGN,KAAK,IAAIG,KAAzC;AAEA,sBACE;AAAM,IAAA,SAAS,EAAC,YAAhB;AAA6B,IAAA,MAAM,EAAE;AAAEI,MAAAA,UAAU,EAAE;AAAd;AAArC,kBACE,gCAAC,iBAAD;AACE,IAAA,SAAS,EAAC,kBADZ;AAEE,IAAA,KAAK,EAAEP,KAFT;AAGE,IAAA,wBAAwB,EAAEI,wBAH5B;AAIE,IAAA,uBAAuB,EAAEE,uBAJ3B;AAKE,IAAA,SAAS,EAAEH,KAAK,IAAI,CAACH,KALvB;AAME,IAAA,OAAO,EAAEC;AANX,kBAQE;AACE,IAAA,SAAS,EAAC,kBADZ;AAEE,IAAA,OAAO,EAAEE,KAFX;AAGE,IAAA,EAAE,EAAEF,IAHN;AAIE,IAAA,IAAI,EAAEA,IAJR;AAKE,IAAA,QAAQ,EAAEC,QALZ;AAME,IAAA,IAAI,EAAC;AANP,IARF,CADF,CADF;AAqBD;;AAEDJ,mBAAmB,CAACU,YAApB,GAAmC;AACjCT,EAAAA,eAAe,EAAE,EADgB;AAEjCC,EAAAA,KAAK,EAAE,KAF0B;AAGjCC,EAAAA,IAAI,EAAE,EAH2B;AAIjCE,EAAAA,KAAK,EAAE;AAJ0B,CAAnC;AAOAL,mBAAmB,CAACW,SAApB,GAAgC;AAC9BV,EAAAA,eAAe,EAAEW,sBAAUC,KADG;AAE9BX,EAAAA,KAAK,EAAEU,sBAAUE,IAFa;AAG9BX,EAAAA,IAAI,EAAES,sBAAUG,SAAV,CAAoB,CAACH,sBAAUI,MAAX,EAAmBJ,sBAAUK,MAA7B,CAApB,CAHwB;AAI9Bb,EAAAA,QAAQ,EAAEQ,sBAAUM,IAAV,CAAeC,UAJK;AAK9Bd,EAAAA,KAAK,EAAEO,sBAAUE;AALa,CAAhC;;4BAQe,iBAAKd,mBAAL,C","sourcesContent":["/**\n *\n * CustomInputCheckbox\n */\n\nimport React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport { Label } from './components';\n\nfunction CustomInputCheckbox({\n  entriesToDelete,\n  isAll,\n  name,\n  onChange,\n  value,\n}) {\n  const shouldDisplaySomeChecked =\n    isAll && entriesToDelete.length > 0 && !value;\n\n  const shouldDisplayAllChecked = isAll && value;\n\n  return (\n    <span className=\"form-check\" styles={{ marginLeft: '-15px' }}>\n      <Label\n        className=\"form-check-label\"\n        isAll={isAll}\n        shouldDisplaySomeChecked={shouldDisplaySomeChecked}\n        shouldDisplayAllChecked={shouldDisplayAllChecked}\n        isChecked={value && !isAll}\n        htmlFor={name}\n      >\n        <input\n          className=\"form-check-input\"\n          checked={value}\n          id={name}\n          name={name}\n          onChange={onChange}\n          type=\"checkbox\"\n        />\n      </Label>\n    </span>\n  );\n}\n\nCustomInputCheckbox.defaultProps = {\n  entriesToDelete: [],\n  isAll: false,\n  name: '',\n  value: false,\n};\n\nCustomInputCheckbox.propTypes = {\n  entriesToDelete: PropTypes.array,\n  isAll: PropTypes.bool,\n  name: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  onChange: PropTypes.func.isRequired,\n  value: PropTypes.bool,\n};\n\nexport default memo(CustomInputCheckbox);\n"]},"metadata":{},"sourceType":"script"}