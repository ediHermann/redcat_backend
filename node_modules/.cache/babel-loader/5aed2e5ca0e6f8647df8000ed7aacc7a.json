{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _reactIntl = require(\"react-intl\");\n\nvar _reactRouterDom = require(\"react-router-dom\");\n\nvar _lodash = require(\"lodash\");\n\nvar _strapiHelperPlugin = require(\"strapi-helper-plugin\");\n\nvar _core = require(\"@buffetjs/core\");\n\nvar _pluginId = _interopRequireDefault(require(\"../../pluginId\"));\n\nvar _useDataManager2 = _interopRequireDefault(require(\"../../hooks/useDataManager\"));\n\nvar _SelectOne = _interopRequireDefault(require(\"../SelectOne\"));\n\nvar _SelectMany = _interopRequireDefault(require(\"../SelectMany\"));\n\nvar _ClearIndicator = _interopRequireDefault(require(\"./ClearIndicator\"));\n\nvar _DropdownIndicator = _interopRequireDefault(require(\"./DropdownIndicator\"));\n\nvar _IndicatorSeparator = _interopRequireDefault(require(\"./IndicatorSeparator\"));\n\nvar _Option = _interopRequireDefault(require(\"./Option\"));\n\nvar _components = require(\"./components\");\n\nvar _utils = require(\"./utils\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2[\"default\"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar initialPaginationState = {\n  _contains: '',\n  _limit: 20,\n  _start: 0\n};\n\nfunction SelectWrapper(_ref) {\n  var description = _ref.description,\n      editable = _ref.editable,\n      label = _ref.label,\n      isCreatingEntry = _ref.isCreatingEntry,\n      isFieldAllowed = _ref.isFieldAllowed,\n      isFieldReadable = _ref.isFieldReadable,\n      mainField = _ref.mainField,\n      name = _ref.name,\n      relationType = _ref.relationType,\n      targetModel = _ref.targetModel,\n      placeholder = _ref.placeholder,\n      queryInfos = _ref.queryInfos;\n  // Disable the input in case of a polymorphic relation\n  var isMorph = (0, _react.useMemo)(function () {\n    return relationType.toLowerCase().includes('morph');\n  }, [relationType]);\n\n  var _useDataManager = (0, _useDataManager2[\"default\"])(),\n      addRelation = _useDataManager.addRelation,\n      modifiedData = _useDataManager.modifiedData,\n      moveRelation = _useDataManager.moveRelation,\n      onChange = _useDataManager.onChange,\n      onRemoveRelation = _useDataManager.onRemoveRelation;\n\n  var _useLocation = (0, _reactRouterDom.useLocation)(),\n      pathname = _useLocation.pathname;\n\n  var value = (0, _lodash.get)(modifiedData, name, null);\n\n  var _useState = (0, _react.useState)(initialPaginationState),\n      _useState2 = (0, _slicedToArray2[\"default\"])(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  var _useState3 = (0, _react.useState)([]),\n      _useState4 = (0, _slicedToArray2[\"default\"])(_useState3, 2),\n      options = _useState4[0],\n      setOptions = _useState4[1];\n\n  var _useState5 = (0, _react.useState)(false),\n      _useState6 = (0, _slicedToArray2[\"default\"])(_useState5, 2),\n      isLoading = _useState6[0],\n      setIsLoading = _useState6[1];\n\n  var _useState7 = (0, _react.useState)(false),\n      _useState8 = (0, _slicedToArray2[\"default\"])(_useState7, 2),\n      isOpen = _useState8[0],\n      setIsOpen = _useState8[1];\n\n  var filteredOptions = (0, _react.useMemo)(function () {\n    return options.filter(function (option) {\n      if (!(0, _lodash.isEmpty)(value)) {\n        // SelectMany\n        if (Array.isArray(value)) {\n          return (0, _lodash.findIndex)(value, function (o) {\n            return o.id === option.value.id;\n          }) === -1;\n        } // SelectOne\n\n\n        return (0, _lodash.get)(value, 'id', '') !== option.value.id;\n      }\n\n      return true;\n    });\n  }, [options, value]);\n  var endPoint = queryInfos.endPoint,\n      containsKey = queryInfos.containsKey,\n      defaultParams = queryInfos.defaultParams,\n      shouldDisplayRelationLink = queryInfos.shouldDisplayRelationLink;\n  var isSingle = ['oneWay', 'oneToOne', 'manyToOne', 'oneToManyMorph', 'oneToOneMorph'].includes(relationType);\n  var idsToOmit = (0, _react.useMemo)(function () {\n    if (!value) {\n      return [];\n    }\n\n    if (isSingle) {\n      return [value.id];\n    }\n\n    return value.map(function (val) {\n      return val.id;\n    });\n  }, [isSingle, value]);\n  var getData = (0, _react.useCallback)( /*#__PURE__*/function () {\n    var _ref2 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(signal) {\n      var params, data, formattedData;\n      return _regenerator[\"default\"].wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!isMorph) {\n                _context.next = 3;\n                break;\n              }\n\n              setIsLoading(false);\n              return _context.abrupt(\"return\");\n\n            case 3:\n              if (isFieldAllowed) {\n                _context.next = 6;\n                break;\n              }\n\n              setIsLoading(false);\n              return _context.abrupt(\"return\");\n\n            case 6:\n              setIsLoading(true);\n              params = _objectSpread({\n                _limit: state._limit\n              }, defaultParams);\n\n              if (state._contains) {\n                params[containsKey] = state._contains;\n              }\n\n              _context.prev = 9;\n              _context.next = 12;\n              return (0, _strapiHelperPlugin.request)(endPoint, {\n                method: 'POST',\n                params: params,\n                signal: signal,\n                body: {\n                  idsToOmit: idsToOmit\n                }\n              });\n\n            case 12:\n              data = _context.sent;\n              formattedData = data.map(function (obj) {\n                return {\n                  value: obj,\n                  label: obj[mainField.name]\n                };\n              });\n              setOptions(function (prevState) {\n                return prevState.concat(formattedData).filter(function (obj, index) {\n                  var objIndex = prevState.findIndex(function (el) {\n                    return el.value.id === obj.value.id;\n                  });\n\n                  if (objIndex === -1) {\n                    return true;\n                  }\n\n                  return prevState.findIndex(function (el) {\n                    return el.value.id === obj.value.id;\n                  }) === index;\n                });\n              });\n              setIsLoading(false);\n              _context.next = 20;\n              break;\n\n            case 18:\n              _context.prev = 18;\n              _context.t0 = _context[\"catch\"](9);\n\n            case 20:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[9, 18]]);\n    }));\n\n    return function (_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }(), [isMorph, isFieldAllowed, state._limit, state._contains, defaultParams, containsKey, endPoint, idsToOmit, mainField.name]);\n  (0, _react.useEffect)(function () {\n    var abortController = new AbortController();\n    var signal = abortController.signal;\n\n    if (isOpen) {\n      getData(signal);\n    }\n\n    return function () {\n      return abortController.abort();\n    };\n  }, [getData, isOpen]);\n\n  var handleInputChange = function handleInputChange(inputValue, _ref3) {\n    var action = _ref3.action;\n\n    if (action === 'input-change') {\n      setState(function (prevState) {\n        if (prevState._contains === inputValue) {\n          return prevState;\n        }\n\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          _contains: inputValue,\n          _start: 0\n        });\n      });\n    }\n\n    return inputValue;\n  };\n\n  var handleMenuScrollToBottom = function handleMenuScrollToBottom() {\n    setState(function (prevState) {\n      return _objectSpread(_objectSpread({}, prevState), {}, {\n        _limit: prevState._limit + 20\n      });\n    });\n  };\n\n  var handleMenuClose = function handleMenuClose() {\n    setState(initialPaginationState);\n    setIsOpen(false);\n  };\n\n  var handleChange = function handleChange(value) {\n    onChange({\n      target: {\n        name: name,\n        value: value ? value.value : value\n      }\n    });\n  };\n\n  var handleAddRelation = function handleAddRelation(value) {\n    if (!(0, _lodash.isEmpty)(value)) {\n      addRelation({\n        target: {\n          name: name,\n          value: value\n        }\n      });\n    }\n  };\n\n  var handleMenuOpen = function handleMenuOpen() {\n    setIsOpen(true);\n  };\n\n  var to = \"/plugins/\".concat(_pluginId[\"default\"], \"/collectionType/\").concat(targetModel, \"/\").concat(value ? value.id : null);\n  var link = (0, _react.useMemo)(function () {\n    if (!value) {\n      return null;\n    }\n\n    if (!shouldDisplayRelationLink) {\n      return null;\n    }\n\n    return /*#__PURE__*/_react[\"default\"].createElement(_reactRouterDom.Link, {\n      to: {\n        pathname: to,\n        state: {\n          from: pathname\n        }\n      }\n    }, /*#__PURE__*/_react[\"default\"].createElement(_reactIntl.FormattedMessage, {\n      id: \"content-manager.containers.Edit.seeDetails\"\n    }, function (msg) {\n      return /*#__PURE__*/_react[\"default\"].createElement(_components.A, {\n        color: \"mediumBlue\"\n      }, msg);\n    }));\n  }, [shouldDisplayRelationLink, pathname, to, value]);\n  var Component = isSingle ? _SelectOne[\"default\"] : _SelectMany[\"default\"];\n  var associationsLength = (0, _lodash.isArray)(value) ? value.length : 0;\n  var isDisabled = (0, _react.useMemo)(function () {\n    if (isMorph) {\n      return true;\n    }\n\n    if (!isCreatingEntry) {\n      return !isFieldAllowed && isFieldReadable || !editable;\n    }\n\n    return !editable;\n  }, [isMorph, isCreatingEntry, editable, isFieldAllowed, isFieldReadable]);\n\n  if (!isFieldAllowed && isCreatingEntry) {\n    return /*#__PURE__*/_react[\"default\"].createElement(_strapiHelperPlugin.NotAllowedInput, {\n      label: label\n    });\n  }\n\n  if (!isCreatingEntry && !isFieldAllowed && !isFieldReadable) {\n    return /*#__PURE__*/_react[\"default\"].createElement(_strapiHelperPlugin.NotAllowedInput, {\n      label: label\n    });\n  }\n\n  return /*#__PURE__*/_react[\"default\"].createElement(_core.Padded, null, /*#__PURE__*/_react[\"default\"].createElement(_components.BaselineAlignment, null), /*#__PURE__*/_react[\"default\"].createElement(_core.Flex, {\n    justifyContent: \"space-between\"\n  }, /*#__PURE__*/_react[\"default\"].createElement(_core.Text, {\n    fontWeight: \"semiBold\"\n  }, label, !isSingle && \" (\".concat(associationsLength, \")\")), isSingle && link), !(0, _lodash.isEmpty)(description) && /*#__PURE__*/_react[\"default\"].createElement(_core.Padded, {\n    top: true,\n    size: \"xs\"\n  }, /*#__PURE__*/_react[\"default\"].createElement(_components.BaselineAlignment, null), /*#__PURE__*/_react[\"default\"].createElement(_core.Text, {\n    fontSize: \"sm\",\n    color: \"grey\",\n    lineHeight: \"12px\",\n    ellipsis: true\n  }, description)), /*#__PURE__*/_react[\"default\"].createElement(_core.Padded, {\n    top: true,\n    size: \"sm\"\n  }, /*#__PURE__*/_react[\"default\"].createElement(_components.BaselineAlignment, null), /*#__PURE__*/_react[\"default\"].createElement(Component, {\n    addRelation: handleAddRelation,\n    components: {\n      ClearIndicator: _ClearIndicator[\"default\"],\n      DropdownIndicator: _DropdownIndicator[\"default\"],\n      IndicatorSeparator: _IndicatorSeparator[\"default\"],\n      Option: _Option[\"default\"]\n    },\n    displayNavigationLink: shouldDisplayRelationLink,\n    id: name,\n    isDisabled: isDisabled,\n    isLoading: isLoading,\n    isClearable: true,\n    mainField: mainField,\n    move: moveRelation,\n    name: name,\n    options: filteredOptions,\n    onChange: handleChange,\n    onInputChange: handleInputChange,\n    onMenuClose: handleMenuClose,\n    onMenuOpen: handleMenuOpen,\n    onMenuScrollToBottom: handleMenuScrollToBottom,\n    onRemove: onRemoveRelation,\n    placeholder: (0, _lodash.isEmpty)(placeholder) ? /*#__PURE__*/_react[\"default\"].createElement(_reactIntl.FormattedMessage, {\n      id: \"\".concat(_pluginId[\"default\"], \".containers.Edit.addAnItem\")\n    }) : placeholder,\n    styles: _utils.styles,\n    targetModel: targetModel,\n    value: value\n  })), /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n    style: {\n      marginBottom: 28\n    }\n  }));\n}\n\nSelectWrapper.defaultProps = {\n  editable: true,\n  description: '',\n  label: '',\n  isFieldAllowed: true,\n  placeholder: ''\n};\nSelectWrapper.propTypes = {\n  editable: _propTypes[\"default\"].bool,\n  description: _propTypes[\"default\"].string,\n  label: _propTypes[\"default\"].string,\n  isCreatingEntry: _propTypes[\"default\"].bool.isRequired,\n  isFieldAllowed: _propTypes[\"default\"].bool,\n  isFieldReadable: _propTypes[\"default\"].bool.isRequired,\n  mainField: _propTypes[\"default\"].shape({\n    name: _propTypes[\"default\"].string.isRequired,\n    schema: _propTypes[\"default\"].shape({\n      type: _propTypes[\"default\"].string.isRequired\n    }).isRequired\n  }).isRequired,\n  name: _propTypes[\"default\"].string.isRequired,\n  placeholder: _propTypes[\"default\"].string,\n  relationType: _propTypes[\"default\"].string.isRequired,\n  targetModel: _propTypes[\"default\"].string.isRequired,\n  queryInfos: _propTypes[\"default\"].exact({\n    containsKey: _propTypes[\"default\"].string.isRequired,\n    defaultParams: _propTypes[\"default\"].object,\n    endPoint: _propTypes[\"default\"].string.isRequired,\n    shouldDisplayRelationLink: _propTypes[\"default\"].bool.isRequired\n  }).isRequired\n};\nvar Memoized = /*#__PURE__*/(0, _react.memo)(SelectWrapper);\n\nvar _default = (0, _utils.connect)(Memoized, _utils.select);\n\nexports[\"default\"] = _default;","map":{"version":3,"sources":["D:/webstorm_projects/redcat_backend/.cache/plugins/strapi-plugin-content-manager/admin/src/components/SelectWrapper/index.js"],"names":["initialPaginationState","_contains","_limit","_start","SelectWrapper","description","editable","label","isCreatingEntry","isFieldAllowed","isFieldReadable","mainField","name","relationType","targetModel","placeholder","queryInfos","isMorph","toLowerCase","includes","addRelation","modifiedData","moveRelation","onChange","onRemoveRelation","pathname","value","state","setState","options","setOptions","isLoading","setIsLoading","isOpen","setIsOpen","filteredOptions","filter","option","Array","isArray","o","id","endPoint","containsKey","defaultParams","shouldDisplayRelationLink","isSingle","idsToOmit","map","val","getData","signal","params","method","body","data","formattedData","obj","prevState","concat","index","objIndex","findIndex","el","abortController","AbortController","abort","handleInputChange","inputValue","action","handleMenuScrollToBottom","handleMenuClose","handleChange","target","handleAddRelation","handleMenuOpen","to","pluginId","link","from","msg","Component","SelectOne","SelectMany","associationsLength","length","isDisabled","ClearIndicator","DropdownIndicator","IndicatorSeparator","Option","styles","marginBottom","defaultProps","propTypes","PropTypes","bool","string","isRequired","shape","schema","type","exact","object","Memoized","select"],"mappings":"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","sourcesContent":["import React, { useCallback, useState, useEffect, useMemo, memo } from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport { Link, useLocation } from 'react-router-dom';\nimport { findIndex, get, isArray, isEmpty } from 'lodash';\nimport { NotAllowedInput, request } from 'strapi-helper-plugin';\nimport { Flex, Text, Padded } from '@buffetjs/core';\nimport pluginId from '../../pluginId';\nimport useDataManager from '../../hooks/useDataManager';\nimport SelectOne from '../SelectOne';\nimport SelectMany from '../SelectMany';\nimport ClearIndicator from './ClearIndicator';\nimport DropdownIndicator from './DropdownIndicator';\nimport IndicatorSeparator from './IndicatorSeparator';\nimport Option from './Option';\nimport { A, BaselineAlignment } from './components';\nimport { connect, select, styles } from './utils';\n\nconst initialPaginationState = {\n  _contains: '',\n  _limit: 20,\n  _start: 0,\n};\nfunction SelectWrapper({\n  description,\n  editable,\n  label,\n  isCreatingEntry,\n  isFieldAllowed,\n  isFieldReadable,\n  mainField,\n  name,\n  relationType,\n  targetModel,\n  placeholder,\n  queryInfos,\n}) {\n  // Disable the input in case of a polymorphic relation\n  const isMorph = useMemo(() => relationType.toLowerCase().includes('morph'), [relationType]);\n  const { addRelation, modifiedData, moveRelation, onChange, onRemoveRelation } = useDataManager();\n  const { pathname } = useLocation();\n\n  const value = get(modifiedData, name, null);\n  const [state, setState] = useState(initialPaginationState);\n  const [options, setOptions] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isOpen, setIsOpen] = useState(false);\n\n  const filteredOptions = useMemo(() => {\n    return options.filter(option => {\n      if (!isEmpty(value)) {\n        // SelectMany\n        if (Array.isArray(value)) {\n          return findIndex(value, o => o.id === option.value.id) === -1;\n        }\n\n        // SelectOne\n        return get(value, 'id', '') !== option.value.id;\n      }\n\n      return true;\n    });\n  }, [options, value]);\n\n  const { endPoint, containsKey, defaultParams, shouldDisplayRelationLink } = queryInfos;\n\n  const isSingle = ['oneWay', 'oneToOne', 'manyToOne', 'oneToManyMorph', 'oneToOneMorph'].includes(\n    relationType\n  );\n\n  const idsToOmit = useMemo(() => {\n    if (!value) {\n      return [];\n    }\n\n    if (isSingle) {\n      return [value.id];\n    }\n\n    return value.map(val => val.id);\n  }, [isSingle, value]);\n\n  const getData = useCallback(\n    async signal => {\n      // Currently polymorphic relations are not handled\n      if (isMorph) {\n        setIsLoading(false);\n\n        return;\n      }\n\n      if (!isFieldAllowed) {\n        setIsLoading(false);\n\n        return;\n      }\n\n      setIsLoading(true);\n\n      const params = { _limit: state._limit, ...defaultParams };\n\n      if (state._contains) {\n        params[containsKey] = state._contains;\n      }\n\n      try {\n        const data = await request(endPoint, {\n          method: 'POST',\n          params,\n          signal,\n          body: { idsToOmit },\n        });\n\n        const formattedData = data.map(obj => {\n          return { value: obj, label: obj[mainField.name] };\n        });\n\n        setOptions(prevState =>\n          prevState.concat(formattedData).filter((obj, index) => {\n            const objIndex = prevState.findIndex(el => el.value.id === obj.value.id);\n\n            if (objIndex === -1) {\n              return true;\n            }\n\n            return prevState.findIndex(el => el.value.id === obj.value.id) === index;\n          })\n        );\n        setIsLoading(false);\n      } catch (err) {\n        // Silent\n      }\n    },\n    [\n      isMorph,\n      isFieldAllowed,\n      state._limit,\n      state._contains,\n      defaultParams,\n      containsKey,\n      endPoint,\n      idsToOmit,\n      mainField.name,\n    ]\n  );\n\n  useEffect(() => {\n    const abortController = new AbortController();\n    const { signal } = abortController;\n\n    if (isOpen) {\n      getData(signal);\n    }\n\n    return () => abortController.abort();\n  }, [getData, isOpen]);\n\n  const handleInputChange = (inputValue, { action }) => {\n    if (action === 'input-change') {\n      setState(prevState => {\n        if (prevState._contains === inputValue) {\n          return prevState;\n        }\n\n        return { ...prevState, _contains: inputValue, _start: 0 };\n      });\n    }\n\n    return inputValue;\n  };\n\n  const handleMenuScrollToBottom = () => {\n    setState(prevState => ({ ...prevState, _limit: prevState._limit + 20 }));\n  };\n\n  const handleMenuClose = () => {\n    setState(initialPaginationState);\n    setIsOpen(false);\n  };\n\n  const handleChange = value => {\n    onChange({ target: { name, value: value ? value.value : value } });\n  };\n\n  const handleAddRelation = value => {\n    if (!isEmpty(value)) {\n      addRelation({ target: { name, value } });\n    }\n  };\n\n  const handleMenuOpen = () => {\n    setIsOpen(true);\n  };\n\n  const to = `/plugins/${pluginId}/collectionType/${targetModel}/${value ? value.id : null}`;\n\n  const link = useMemo(() => {\n    if (!value) {\n      return null;\n    }\n\n    if (!shouldDisplayRelationLink) {\n      return null;\n    }\n\n    return (\n      <Link to={{ pathname: to, state: { from: pathname } }}>\n        <FormattedMessage id=\"content-manager.containers.Edit.seeDetails\">\n          {msg => <A color=\"mediumBlue\">{msg}</A>}\n        </FormattedMessage>\n      </Link>\n    );\n  }, [shouldDisplayRelationLink, pathname, to, value]);\n\n  const Component = isSingle ? SelectOne : SelectMany;\n  const associationsLength = isArray(value) ? value.length : 0;\n\n  const isDisabled = useMemo(() => {\n    if (isMorph) {\n      return true;\n    }\n\n    if (!isCreatingEntry) {\n      return (!isFieldAllowed && isFieldReadable) || !editable;\n    }\n\n    return !editable;\n  }, [isMorph, isCreatingEntry, editable, isFieldAllowed, isFieldReadable]);\n\n  if (!isFieldAllowed && isCreatingEntry) {\n    return <NotAllowedInput label={label} />;\n  }\n\n  if (!isCreatingEntry && !isFieldAllowed && !isFieldReadable) {\n    return <NotAllowedInput label={label} />;\n  }\n\n  return (\n    <Padded>\n      <BaselineAlignment />\n      <Flex justifyContent=\"space-between\">\n        <Text fontWeight=\"semiBold\">\n          {label}\n          {!isSingle && ` (${associationsLength})`}\n        </Text>\n        {isSingle && link}\n      </Flex>\n      {!isEmpty(description) && (\n        <Padded top size=\"xs\">\n          <BaselineAlignment />\n          <Text fontSize=\"sm\" color=\"grey\" lineHeight=\"12px\" ellipsis>\n            {description}\n          </Text>\n        </Padded>\n      )}\n      <Padded top size=\"sm\">\n        <BaselineAlignment />\n\n        <Component\n          addRelation={handleAddRelation}\n          components={{ ClearIndicator, DropdownIndicator, IndicatorSeparator, Option }}\n          displayNavigationLink={shouldDisplayRelationLink}\n          id={name}\n          isDisabled={isDisabled}\n          isLoading={isLoading}\n          isClearable\n          mainField={mainField}\n          move={moveRelation}\n          name={name}\n          options={filteredOptions}\n          onChange={handleChange}\n          onInputChange={handleInputChange}\n          onMenuClose={handleMenuClose}\n          onMenuOpen={handleMenuOpen}\n          onMenuScrollToBottom={handleMenuScrollToBottom}\n          onRemove={onRemoveRelation}\n          placeholder={\n            isEmpty(placeholder) ? (\n              <FormattedMessage id={`${pluginId}.containers.Edit.addAnItem`} />\n            ) : (\n              placeholder\n            )\n          }\n          styles={styles}\n          targetModel={targetModel}\n          value={value}\n        />\n      </Padded>\n      <div style={{ marginBottom: 28 }} />\n    </Padded>\n  );\n}\n\nSelectWrapper.defaultProps = {\n  editable: true,\n  description: '',\n  label: '',\n  isFieldAllowed: true,\n  placeholder: '',\n};\n\nSelectWrapper.propTypes = {\n  editable: PropTypes.bool,\n  description: PropTypes.string,\n  label: PropTypes.string,\n  isCreatingEntry: PropTypes.bool.isRequired,\n  isFieldAllowed: PropTypes.bool,\n  isFieldReadable: PropTypes.bool.isRequired,\n  mainField: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    schema: PropTypes.shape({\n      type: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string,\n  relationType: PropTypes.string.isRequired,\n  targetModel: PropTypes.string.isRequired,\n  queryInfos: PropTypes.exact({\n    containsKey: PropTypes.string.isRequired,\n    defaultParams: PropTypes.object,\n    endPoint: PropTypes.string.isRequired,\n    shouldDisplayRelationLink: PropTypes.bool.isRequired,\n  }).isRequired,\n};\n\nconst Memoized = memo(SelectWrapper);\n\nexport default connect(Memoized, select);\n"]},"metadata":{},"sourceType":"script"}